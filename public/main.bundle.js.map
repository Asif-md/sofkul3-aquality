{"version":3,"sources":["C:/sofkul/sofkul-aquality/frontend/src/$_lazy_route_resource lazy","C:/sofkul/sofkul-aquality/frontend/src/app/app-routing.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/app.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/app.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/app.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/app.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/area/area-all/area-all.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/area/area-all/area-all.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/area/area-all/area-all.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/area/area-create/area-create.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/area/area-create/area-create.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/area/area-create/area-create.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/area/area-routing.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/area/area.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/area/area.service.ts","C:/sofkul/sofkul-aquality/frontend/src/app/auth.service.ts","C:/sofkul/sofkul-aquality/frontend/src/app/custom-http.service.ts","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-all/customer-all.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-all/customer-all.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-all/customer-all.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-create/customer-create.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-create/customer-create.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-create/customer-create.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-detail/customer-detail.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-detail/customer-detail.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-detail/customer-detail.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-routing.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-search/customer-search.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-search/customer-search.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-search/customer-search.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer.service.ts","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-all/delivery-all.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-all/delivery-all.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-all/delivery-all.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-create/delivery-create.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-create/delivery-create.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-create/delivery-create.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-edit/delivery-edit.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-edit/delivery-edit.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-edit/delivery-edit.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-html/delivery-html.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-html/delivery-html.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-html/delivery-html.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-recent/delivery-recent.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-recent/delivery-recent.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-recent/delivery-recent.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-routing.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-search/delivery-search.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-search/delivery-search.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-search/delivery-search.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery.service.ts","C:/sofkul/sofkul-aquality/frontend/src/app/file-upload/excel-file-uploader/excel-file-uploader.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/file-upload/excel-file-uploader/excel-file-uploader.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/file-upload/excel-file-uploader/excel-file-uploader.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/file-upload/file-upload-routing.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/file-upload/file-upload.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/file-upload/file-upload.service.ts","C:/sofkul/sofkul-aquality/frontend/src/app/general/dashboard/dashboard.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/general/dashboard/dashboard.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/general/dashboard/dashboard.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/general/footer/footer.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/general/footer/footer.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/general/footer/footer.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/general/general-routing.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/general/general.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/general/general.service.ts","C:/sofkul/sofkul-aquality/frontend/src/app/general/navbar/navbar.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/general/navbar/navbar.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/general/navbar/navbar.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/general/sidebar/sidebar.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/general/sidebar/sidebar.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/general/sidebar/sidebar.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/home/home-body/home-body.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/home/home-body/home-body.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/home/home-body/home-body.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/home/home-charts/home-charts.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/home/home-routing.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/home/home.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/home/home.service.ts","C:/sofkul/sofkul-aquality/frontend/src/app/home/pay-date-chart/pay-date-chart.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/home/pay-date-chart/pay-date-chart.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/home/pay-date-chart/pay-date-chart.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-all/invoice-all.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-all/invoice-all.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-all/invoice-all.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-create/invoice-create.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-create/invoice-create.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-create/invoice-create.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-edit/invoice-edit.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-edit/invoice-edit.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-edit/invoice-edit.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-html/invoice-html.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-html/invoice-html.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-html/invoice-html.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-recent/invoice-recent.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-recent/invoice-recent.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-recent/invoice-recent.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-routing.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-search/invoice-search.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-search/invoice-search.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-search/invoice-search.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice.service.ts","C:/sofkul/sofkul-aquality/frontend/src/app/product/product-all/product-all.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/product/product-all/product-all.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/product/product-all/product-all.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/product/product-create/product-create.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/product/product-create/product-create.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/product/product-create/product-create.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/product/product-routing.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/product/product.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/product/product.service.ts","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-all/proforma-all.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-all/proforma-all.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-all/proforma-all.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-create/proforma-create.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-create/proforma-create.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-create/proforma-create.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-edit/proforma-edit.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-edit/proforma-edit.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-edit/proforma-edit.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-html/proforma-html.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-html/proforma-html.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-html/proforma-html.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-recent/proforma-recent.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-recent/proforma-recent.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-recent/proforma-recent.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-routing.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-search/proforma-search.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-search/proforma-search.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-search/proforma-search.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma.service.ts","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-all/quotation-all.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-all/quotation-all.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-all/quotation-all.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-create/quotation-create.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-create/quotation-create.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-create/quotation-create.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-edit/quotation-edit.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-edit/quotation-edit.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-edit/quotation-edit.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-html/quotation-html.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-html/quotation-html.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-html/quotation-html.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-recent/quotation-recent.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-recent/quotation-recent.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-recent/quotation-recent.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-routing.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-search/quotation-search.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-search/quotation-search.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-search/quotation-search.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation.service.ts","C:/sofkul/sofkul-aquality/frontend/src/app/report/location-due-report/location-due-report.component.css","C:/sofkul/sofkul-aquality/frontend/src/app/report/location-due-report/location-due-report.component.html","C:/sofkul/sofkul-aquality/frontend/src/app/report/location-due-report/location-due-report.component.ts","C:/sofkul/sofkul-aquality/frontend/src/app/report/report.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/report/report.service.ts","C:/sofkul/sofkul-aquality/frontend/src/app/report/report.ts","C:/sofkul/sofkul-aquality/frontend/src/app/settings/settings.module.ts","C:/sofkul/sofkul-aquality/frontend/src/app/upload.service.ts","C:/sofkul/sofkul-aquality/frontend/src/environments/environment.ts","C:/sofkul/sofkul-aquality/frontend/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;ACjByC;AACc;AAEvD,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,WAAW;QACvB,SAAS,EAAE,MAAM;KACpB;IACD;QACI,IAAI,EAAE,WAAW;QACjB,YAAY,EAAE,0CAA0C;KAC3D;CAEJ,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,+DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,6DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,6DAAY,CAAC;SAC1B,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;ACpB7B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,uTAAuT,iBAAiB,wSAAwS,YAAY,0EAA0E,aAAa,gBAAgB,kBAAkB,yNAAyN,cAAc,k1BAAk1B,whBAAwhB,aAAa,mJAAmJ,YAAY,+JAA+J,aAAa,kzBAAkzB,uMAAuM,sGAAsG,mBAAmB,gBAAgB,gBAAgB,uBAAuB,k3BAAk3B,kDAAkD,0RAA0R,YAAY,2SAA2S,6KAA6K,eAAe,+KAA+K,eAAe,iLAAiL,gBAAgB,8IAA8I,eAAe,gJAAgJ,eAAe,8QAA8Q,cAAc,aAAa,iBAAiB,+UAA+U,yZAAyZ,4MAA4M,yEAAyE,6EAA6E,qLAAqL,qKAAqK,8EAA8E,uEAAuE,mFAAmF,uFAAuF,8lCAA8lC,eAAe,wDAAwD,kHAAkH,qNAAqN,kMAAkM,cAAc,ojBAAojB,s2BAAs2B,mJAAmJ,4IAA4I,+wD;;;;;;;;;;;;;;;;;;;;;ACArhX;AACL;AACJ;AAQvC;IAEE,sBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IACpE,CAAC;IAED,+BAAQ,GAAR;IACA,CAAC;IAED,iCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;IAED,4BAAK,GAAL,UAAM,QAAQ,EAAE,QAAQ;QACtB,EAAE,CAAC,CAAC,QAAQ,IAAI,OAAO,IAAI,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC;YAC/C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAChC,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;YAC/C,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;YAC/C,QAAQ,CAAC,MAAM,EAAE;QACnB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACjC,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;YAC1C,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IAvBU,YAAY;QALxB,gEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAGiC,kEAAW,EAAkB,uDAAM;OAFzD,YAAY,CA0BxB;IAAD,mBAAC;CAAA;AA1BwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV+B;AACjB;AACI;AACF;AACY;AACR;AACU;AACD;AACR;AAC9C,WAAW;AACgC;AACa;AAC8C;AACvD;AACA;AA0B/C;IAAA;IACA,CAAC;IADY,SAAS;QAxBrB,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,wEAAa;gBACb,2DAAW;gBACX,iEAAU;gBACV,gBAAgB;gBAChB,6EAAgB;gBAChB,sBAAsB;gBACtB,sEAAa;gBACb,oEAAe;gBACf,sEAAY;gBACZ,oEAAkB,EAAE,gEAAc,EAAE,qEAAmB,EAAE,8DAAY;gBACrE,6EAAS,CAAC,OAAO,EAAE;aACpB;YACD,SAAS,EAAE;gBACT,kEAAW;gBACX,gFAAiB;gBACjB,uEAAa;aACd;YACD,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CACrB;IAAD,gBAAC;CAAA;AADqB;;;;;;;;ACxCtB;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,wBAAwB,KAAK;;AAElG;;;AAGA;AACA,2C;;;;;;;ACXA,i4BAAi4B,mCAAmC,uCAAuC,aAAa,0hC;;;;;;;;;;;;;;;;;;;;ACA33B;AAC/C;AAQ9C;IAKE,0BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJnC,UAAK,GAAW,EAAE,CAAC;QAClB,iBAAY,GAA0B,IAAI,2DAAY,EAAW,CAAC;QAClE,iBAAY,GAAyB,IAAI,2DAAY,EAAU,CAAC;IAE1B,CAAC;IAEjD,mCAAQ,GAAR;IACA,CAAC;IAED,uCAAY,GAAZ,UAAa,EAAE,EAAE,MAAM;QAAvB,iBAmBC;QAlBC,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,EAAE;YACN,MAAM,EAAE,CAAC,MAAM;SAChB,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC;aAC7B,SAAS,CACV,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gBACf,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC;QACH,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACvC,CAAC,CACA;IACL,CAAC;IAED,mCAAQ,GAAR,UAAS,EAAE;QACT,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAhCQ;QAAR,4DAAK,EAAE;;mDAAoB;IAClB;QAAT,6DAAM,EAAE;kCAAe,2DAAY;0DAAwC;IAClE;QAAT,6DAAM,EAAE;kCAAe,2DAAY;0DAAsC;IAH/D,gBAAgB;QAL5B,gEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAMiC,kEAAW;OALjC,gBAAgB,CAoC5B;IAAD,uBAAC;CAAA;AApC4B;;;;;;;;ACT7B;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,wBAAwB,KAAK,kBAAkB,yBAAyB,GAAG;;AAEhJ;;;AAGA;AACA,2C;;;;;;;ACXA,61BAA61B,0/C;;;;;;;;;;;;;;;;;;;;;ACA7yB;AACkB;AACtB;AAQ5C;IAUE,6BAAoB,WAAwB,EAAU,EAAe;QAAjD,gBAAW,GAAX,WAAW,CAAa;QAAU,OAAE,GAAF,EAAE,CAAa;QARrE,gBAAW,GAAY,KAAK,CAAC;QAC7B,cAAS,GAAY,KAAK,CAAC;QAEpB,UAAK,GAAW,EAAE,CAAC;QAC1B,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAY,KAAK,CAAC;IAI5B,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,uCAAS,GAAT;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,IAAI,EAAE,CAAC,EAAE,EAAE,0DAAU,CAAC,QAAQ,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAED,kDAAoB,GAApB;QAAA,iBA0CC;QAzCC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI;YACpC,MAAM,EAAE,IAAI;SACb;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC;iBAC9B,SAAS,CACR,UAAC,GAAG;gBACF,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;oBACf,KAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,KAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;gBAC9B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACxB,CAAC;YACH,CAAC,EACD,UAAC,GAAG;gBACF,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;gBACrC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACxB,CAAC,CACF;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC;iBAC9B,SAAS,CACR,UAAC,GAAG;gBACF,oBAAoB;gBACpB,KAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,KAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;gBAC5B,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACxB,CAAC,EACD,UAAC,GAAG;YAEJ,CAAC,CACF;QACL,CAAC;IAGH,CAAC;IAGD,wCAAU,GAAV;QAAA,iBAUC;QATC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;aAC1B,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF;IACL,CAAC;IAED,2CAAa,GAAb,UAAc,KAAU;QACtB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,wCAAU,GAAV;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;QAC5B,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAGD,0CAAY,GAAZ,UAAa,KAAK;QAAlB,iBAeC;QAdC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC;aAChC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC;gBAC7B,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;aACjB,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,0CAAY,GAAZ;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAlHU,mBAAmB;QAL/B,gEAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAWiC,kEAAW,EAAc,2DAAW;OAV1D,mBAAmB,CAqH/B;IAAD,0BAAC;CAAA;AArH+B;;;;;;;;;;;;;;;;;;ACVS;AACc;AAIvD,IAAM,UAAU,GAAG,EAClB,CAAC;AASF;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAR7B,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,6DAAY,CAAC,QAAQ,CAAC,UAAU,CAAC;aACpC;YACD,OAAO,EAAE;gBACL,6DAAY;aACf;SACJ,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfW;AACM;AAEM;AACN;AACmB;AACQ;AAChB;AACb;AACoB;AAuBjE;IAAA;IAA0B,CAAC;IAAd,UAAU;QApBtB,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,6DAAY;gBACZ,mEAAmB;gBACnB,6DAAY;gBACZ,2DAAW;gBACX,mEAAmB;gBACnB,+EAAiB;aACpB;YACD,YAAY,EAAE;gBACV,+FAAmB;gBACnB,sFAAgB;aACnB;YACD,OAAO,EAAE,EAER;YACD,SAAS,EAAE;gBACP,kEAAW;aACd;SACJ,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;AChCoB;AACgB;AACE;AAC9B;AAG/B;IAIE,qBAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAFnC,YAAO,GAAG,8EAAW,CAAC,UAAU,GAAG,OAAO,CAAC;IAEJ,CAAC;IAEhD,gCAAU,GAAV,UAAW,IAAS;QAClB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,gCAAU,GAAV;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,+BAAS,GAAT,UAAU,IAAS;QACjB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3D,CAAC;IAED,iCAAW,GAAX,UAAY,EAAO;QACjB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK,GAAG,EAAE,CAAC;QACpC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,gCAAU,GAAV,UAAW,IAAS;QAClB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3D,CAAC;IA7BU,WAAW;QADvB,iEAAU,EAAE;yCAKe,+EAAiB;OAJhC,WAAW,CAgCvB;IAAD,kBAAC;CAAA;AAhCuB;;;;;;;;;;;;;;;;;;;;ACNiB;AAGzC;IAGE;QAFQ,aAAQ,GAAY,KAAK,CAAC;IAGlC,CAAC;IAED,gCAAU,GAAV;QACE,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC;YACzG,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED,8BAAQ,GAAR,UAAS,MAAe;QACtB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;IACzB,CAAC;IAhBU,WAAW;QADvB,iEAAU,EAAE;;OACA,WAAW,CAmBvB;IAAD,kBAAC;CAAA;AAnBuB;;;;;;;;;;;;;;;;;;;;;ACHmB;AACG;AAG9C;IAEE,2BAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAEnC,+BAAG,GAAH,UAAI,GAAW;QACb,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,gCAAI,GAAJ,UAAK,GAAW,EAAE,CAAM;QACtB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,+BAAG,GAAH,UAAI,GAAW,EAAE,CAAM;QACrB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACrD,CAAC;IAED,kCAAM,GAAN,UAAO,GAAW;QAChB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACrD,CAAC;IAtBU,iBAAiB;QAD7B,iEAAU,EAAE;yCAGe,2DAAI;OAFnB,iBAAiB,CAwB7B;IAAD,wBAAC;CAAA;AAxB6B;;;;;;;;ACJ9B;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,wBAAwB,KAAK,iBAAiB,0BAA0B,uBAAuB,GAAG;;AAEvK;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,i1CAAi1C,aAAa,8/BAA8/B,4vBAA4vB,iEAAiE,yBAAyB,qBAAqB,2BAA2B,kBAAkB,2BAA2B,qBAAqB,+EAA+E,iCAAiC,iDAAiD,iCAAiC,wDAAwD,+BAA+B,uFAAuF,+BAA+B,mDAAmD,2BAA2B,2BAA2B,qBAAqB,2BAA2B,2BAA2B,2BAA2B,iBAAiB,suBAAsuB,kBAAkB,kZAAkZ,kU;;;;;;;;;;;;;;;;;;;;;;;;ACArjK;AACI;AAEpB;AAC6B;AAET;AAQpD;IAYE,gCAAgC;IAGhC,8BAAoB,eAAgC,EAAU,cAA8B,EAAU,WAAwB;QAA1G,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAdvH,cAAS,GAAe,EAAE,CAAC;QAElC,YAAO,GAAY,KAAK,CAAC;QAClB,gBAAW,GAAc,EAAE,CAAC;QAC5B,eAAU,GAAG,UAAU,CAAC;QAC/B,uBAAkB,GAAW,CAAC,CAAC;QACxB,cAAS,GAAG,CAAC,CAAC;QACd,qBAAgB,GAAU,EAAE,CAAC;QAC7B,0BAAqB,GAAY,KAAK,CAAC;QACvC,wBAAmB,GAAY,KAAK,CAAC;QAQrC,YAAO,GAAG;YACf;gBACE,OAAO,EAAE,QAAQ;gBACjB,OAAO,EAAE,QAAQ;aAClB;YACD;gBACE,OAAO,EAAE,MAAM;gBACf,OAAO,EAAE,MAAM;aAChB;YACD;gBACE,OAAO,EAAE,QAAQ;gBACjB,OAAO,EAAE,QAAQ;aAClB;YACD;gBACE,OAAO,EAAE,MAAM;gBACf,OAAO,EAAE,MAAM;aAChB;YACD;gBACE,OAAO,EAAE,SAAS;gBAClB,OAAO,EAAE,SAAS;aACnB;YACD;gBACE,OAAO,EAAE,QAAQ;gBACjB,OAAO,EAAE,QAAQ;aAClB;SAEF;IA5BD,CAAC;IA+BD,uCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE;aACzC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,KAAK,CAAC;QACtC,CAAC,CACF;QACH,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,6CAAc,GAAd,UAAe,SAAiB;QAAhC,iBAwCC;QAvCC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,SAAS,CAAC;aAC5C,SAAS,CACR,UAAC,GAAG;YACF,IAAI,IAAI,GAAe,EAAE,CAAC;YAC1B,IAAI,GAAG,GAAG,CAAC;YACX,mBAAmB;YACnB,gDAAM,CAAC,IAAI,EAAE,UAAC,IAAc;gBAC1B,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,gDAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,OAAO;oBAC/B,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;yBACxC,SAAS,CACR,UAAC,GAAY;wBACX,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC7B,CAAC,EACD,UAAC,GAAG;oBACJ,CAAC,CACF;gBACL,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACd,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;yBACpC,SAAS,CACR,UAAC,GAAS;wBACR,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;oBACtB,CAAC,EACD,UAAC,GAAG;oBAEJ,CAAC,CACF;gBACL,CAAC;gBAED,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACzC,CAAC,CACF;IACL,CAAC;IAED,2CAAY,GAAZ,UAAa,QAAQ;QACnB,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC;YACnB,MAAM,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC;SAC5B,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC;aACjC,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAClB,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC1C,CAAC;QACH,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACvC,CAAC,CACF;IACL,CAAC;IAED,yCAAU,GAAV;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,iDAAkB,GAAlB,UAAmB,EAAE;QACnB,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,EAAE,CAAC;aACxC,SAAS,CACR,UAAC,GAAG;QAEJ,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF;IACL,CAAC;IAED,0CAAW,GAAX,UAAY,KAAU;QACpB,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACpC,MAAM,CAAC;QACT,CAAC;QACD,IAAI,IAAI,GAAG;YACT,IAAI,EAAE,KAAK;SACZ;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC;YAClC,IAAI,KAAG,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACjC,IAAI,UAAQ,GAAG,EAAE,CAAC;YAClB,gDAAM,CAAC,IAAI,CAAC,SAAS,EAAE,UAAC,IAAI;gBAC1B,EAAE,CAAC,CAAC,KAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/B,UAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,UAAQ,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,eAAe,CAAC,CAAC,CAAC;YAC5C,IAAI,KAAG,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACjC,IAAI,UAAQ,GAAG,EAAE,CAAC;YAClB,gDAAM,CAAC,IAAI,CAAC,SAAS,EAAE,UAAC,IAAI;gBAC1B,EAAE,CAAC,CAAC,KAAG,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrC,UAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,UAAQ,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,CAAC,CAAC;YACnC,IAAI,KAAG,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACjC,IAAI,UAAQ,GAAG,EAAE,CAAC;YAClB,gDAAM,CAAC,IAAI,CAAC,SAAS,EAAE,UAAC,IAAI;gBAC1B,EAAE,CAAC,CAAC,KAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACpC,UAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,UAAQ,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,gDAAiB,GAAjB,UAAkB,YAAwB;QAA1C,iBA8BC;QA7BC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,mBAAmB;QACnB,gDAAM,CAAC,YAAY,EAAE,UAAC,IAAc;YAClC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YAEtB,gDAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,OAAO;gBAC/B,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;qBACxC,SAAS,CACR,UAAC,GAAY;oBACX,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAC7B,CAAC,EACD,UAAC,GAAG;gBACJ,CAAC,CACF;YACL,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACd,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;qBACpC,SAAS,CACR,UAAC,GAAS;oBACR,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;gBACtB,CAAC,EACD,UAAC,GAAG;gBAEJ,CAAC,CACF;YACL,CAAC;YACD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAsB;IACtB,2CAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,mDAAoB,GAApB,UAAqB,QAAQ;QAC3B,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC;YACnB,wBAAwB,EAAE,CAAC,QAAQ,CAAC,0BAA0B,CAAC;SAChE,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,IAAI,CAAC;aAC/C,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAClB,QAAQ,CAAC,0BAA0B,CAAC,GAAG,CAAC,QAAQ,CAAC,0BAA0B,CAAC,CAAC;YAC/E,CAAC;QACH,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAClD,CAAC,CACF,CAAC;IACN,CAAC;IAGH,kBAAkB;IAChB,yCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAEH,mDAAmD;IACjD,kDAAmB,GAAnB;QAAA,iBAqBC;QApBC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,gDAAM,CAAC,IAAI,CAAC,SAAS,EAAE,UAAC,QAAQ;YAC9B,EAAE,CAAC,CAAC,QAAQ,CAAC,wBAAwB,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC9C,KAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;qBACtD,SAAS,CACR,UAAC,GAAG;oBACF,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAClC,CAAC,EACD,UAAC,GAAG;oBACF,KAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;oBACnC,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAClC,CAAC,EACD;oBACE,KAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;gBACpC,CAAC,CACF,CAAC;YACN,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IArQU,oBAAoB;QALhC,gEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAgBqC,0EAAe,EAA0B,gFAAc,EAAuB,uEAAW;OAfnH,oBAAoB,CAwRhC;IAAD,2BAAC;CAAA;AAxRgC;;;;;;;;ACdjC;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,wBAAwB,KAAK,kBAAkB,yBAAyB,GAAG,uBAAuB,4BAA4B;;AAEnM;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,0mKAA0mK,YAAY,KAAK,aAAa,0sDAA0sD,gFAAgF,OAAO,oSAAoS,eAAe,2BAA2B,gBAAgB,UAAU,gBAAgB,ulBAAulB,ua;;;;;;;;;;;;;;;;;;;;;;;;;ACAp4P;AACN;AACF;AACpB;AAE6B;AACT;AAOpD;IAcE,iCAAoB,EAAe,EAAU,eAAgC,EAAU,cAA8B,EAAU,WAAwB;QAAnI,OAAE,GAAF,EAAE,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAXvJ,gBAAW,GAAY,KAAK,CAAC;QAC7B,cAAS,GAAY,KAAK,CAAC;QAEpB,gBAAW,GAAU,EAAE,CAAC;QACxB,aAAQ,GAAU,EAAE,CAAC;QACrB,sBAAiB,GAAG,CAAC,CAAC;QACtB,gBAAW,GAAU,EAAE,CAAC;IAM/B,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,2CAAS,GAAT;QACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,GAAG,EAAE,CAAC,EAAE,CAAC;YACT,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,cAAc,EAAE,CAAC,KAAK,CAAC;YACvB,gBAAgB,EAAE,CAAC,KAAK,CAAC;YACzB,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,IAAI,EAAE,CAAC,WAAW,CAAC;YACnB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,OAAO,EAAE,CAAC,EAAE,CAAC;SACd,CAAC,CAAC;IACL,CAAC;IAED,0DAAwB,GAAxB;QAAA,iBAyCC;QAxCC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,gDAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE5C,IAAI,IAAI,GAAa;YACnB,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ;YAChD,GAAG,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,GAAG;YACtC,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,KAAK;YAC1C,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ;YAChD,iBAAiB,EAAE,KAAK;YACxB,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,cAAc;YAC5D,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,gBAAgB;YAChE,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO;YAC9C,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ;YAChD,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI;YACxC,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI;YACxC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW;YACtD,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW;YACtD,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM;YAC5C,WAAW,EAAE,IAAI,CAAC,WAAW;SAE9B,CAAC;QAGF,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC;aACzC,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gBACf,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,KAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACxB,CAAC;QACH,CAAC,EACD,UAAC,GAAG;YACF,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;QAC5C,CAAC,CACF;IACL,CAAC;IAED,gDAAc,GAAd;QAAA,iBAkBC;QAjBC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;aAChC,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,IAAI;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,EACD;YACE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACjD,CAAC,CACF;IACL,CAAC;IAED,6CAAW,GAAX;QAAA,iBAeC;QAdC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;aAC1B,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,IAAI;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,CACF;IACL,CAAC;IAED,+CAAa,GAAb,UAAc,KAAK;QACjB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,4CAAU,GAAV;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAED,iDAAe,GAAf,UAAgB,KAAU,EAAE,KAAK;QAC/B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IAC/C,CAAC;IAED,6CAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACjC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IA/IU,uBAAuB;QALnC,gEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAewB,2DAAW,EAA2B,0EAAe,EAA0B,gFAAc,EAAuB,uEAAW;OAd5I,uBAAuB,CAiJnC;IAAD,8BAAC;CAAA;AAjJmC;;;;;;;;ACbpC;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,wBAAwB,KAAK,kBAAkB,yBAAyB,GAAG;;AAEhJ;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,iKAAiK,qBAAqB,o2LAAo2L,YAAY,KAAK,aAAa,8jEAA8jE,4FAA4F,OAAO,oYAAoY,eAAe,KAAK,gBAAgB,UAAU,gBAAgB,ohBAAohB,shB;;;;;;;;;;;;;;;;;;;;;;;;;;ACArsS;AACI;AACtB;AAEiB;AAER;AACe;AACO;AACT;AAOtD;IAWE,iCAAoB,WAAwB,EAAU,cAA8B,EAAU,EAAe,EAAU,KAAqB,EAAU,MAAc,EAAU,eAAgC;QAA1L,gBAAW,GAAX,WAAW,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QANvM,gBAAW,GAAU,EAAE,CAAC;QACxB,aAAQ,GAAU,EAAE,CAAC;QAC5B,gBAAW,GAAY,KAAK,CAAC;QAC7B,cAAS,GAAY,KAAK,CAAC;IAGuL,CAAC;IAEnN,0CAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YACpD,KAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACtC,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,oDAAkB,GAAlB,UAAmB,EAAE;QAArB,iBAaC;QAZC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,EAAE,CAAC;aACxC,SAAS,CACV,UAAC,GAAG;YACF,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC;YACpC,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACA;IACL,CAAC;IAED,2CAAS,GAAT;QACE,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACzC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAClD,CAAC;QACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAClC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YACxB,KAAK,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YAC5B,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAClC,iBAAiB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC;YACpD,cAAc,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;YAC9C,gBAAgB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC;YAClD,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;YAChC,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;YAChC,QAAQ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAClC,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC1B,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YAC1B,WAAW,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;YACxC,WAAW,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;YACxC,MAAM,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC9B,OAAO,EAAE,CAAC,EAAE,CAAC;SACd,CAAC,CAAC;IACL,CAAC;IAED,sDAAoB,GAApB;QAAA,iBAmCC;QAlCC,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,gDAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC9D,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ;YAChD,GAAG,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,GAAG;YACtC,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,KAAK;YAC1C,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ;YAChD,iBAAiB,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,iBAAiB;YAClE,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,cAAc;YAC5D,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,gBAAgB;YAChE,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO;YAC9C,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO;YAC9C,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ;YAChD,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI;YACxC,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI;YACxC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW;YACtD,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW;YACtD,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM;YAC5C,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;SACvC;QAED,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC;aACtC,SAAS,CACV,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gBACf,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAC1B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACxB,CAAC;QACH,CAAC,EACD,UAAC,GAAG;YACF,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CACA;IACL,CAAC;IAED,gDAAc,GAAd;QAAA,iBAeC;QAdC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;aAChC,SAAS,CACV,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,IAAI;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,CACA;IACL,CAAC;IAED,6CAAW,GAAX;QAAA,iBAeC;QAdC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;aAC1B,SAAS,CACV,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,IAAI;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,CACA;IACL,CAAC;IAED,6CAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACjC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,iDAAe,GAAf,UAAgB,KAAU,EAAE,KAAK;QAC/B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IACxD,CAAC;IAED,+CAAa,GAAb,UAAc,KAAK;QACjB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEA,4CAAU,GAAV;QACC,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7C,CAAC;IA5JU,uBAAuB;QALnC,gEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAYiC,uEAAW,EAA0B,gFAAc,EAAc,2DAAW,EAAiB,+DAAc,EAAkB,uDAAM,EAA2B,0EAAe;OAXnM,uBAAuB,CA8JnC;IAAD,8BAAC;CAAA;AA9JmC;;;;;;;;;;;;;;;;;;AChBK;AACM;AAE/C,IAAM,oBAAoB,GAAG,EAC5B,CAAC;AASF;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QARjC,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,6DAAY,CAAC,QAAQ,CAAC,oBAAoB,CAAC;aAC9C;YACD,OAAO,EAAE;gBACL,6DAAY;aACf;SACJ,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;ACblC;AACA;;;AAGA;AACA,uCAAwC,gBAAgB,GAAG;;AAE3D;;;AAGA;AACA,2C;;;;;;;ACXA,mUAAmU,iiBAAiiB,qBAAqB,yBAAyB,kBAAkB,yBAAyB,qBAAqB,6EAA6E,iCAAiC,iDAAiD,iCAAiC,wDAAwD,+BAA+B,mFAAmF,+BAA+B,+CAA+C,2BAA2B,yBAAyB,qBAAqB,yBAAyB,2BAA2B,yBAAyB,iBAAiB,4sBAA4sB,kBAAkB,00BAA00B,oBAAoB,cAAc,gTAAgT,wBAAwB,UAAU,uBAAuB,0N;;;;;;;;;;;;;;;;;;;;;;;;ACAp7G;AACI;AAEpB;AAC6B;AAET;AAQpD;IAKE,iCAAoB,eAAgC,EAAU,cAA8B,EAAU,WAAwB;QAA1G,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAHvH,kBAAa,GAAU,EAAE,CAAC;IAIjC,CAAC;IAED,0CAAQ,GAAR;IACA,CAAC;IAED,+CAAa,GAAb,UAAc,KAAU;QAAxB,iBAUC;QATC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC;aAC/C,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QAC3B,CAAC,CACF;IACL,CAAC;IAED,kDAAgB,GAAhB,UAAiB,IAAI;QAArB,iBAiCC;QAhCC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,EAAE,CAAC;aACxC,SAAS,CACR,UAAC,QAAkB;YACjB,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;YAC1B,gDAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAC,OAAO;gBACnC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;qBACxC,SAAS,CACR,UAAC,GAAY;oBACX,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACjC,CAAC,CACF;YACL,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;qBACxC,SAAS,CACR,UAAC,GAAS;oBACR,QAAQ,CAAC,QAAQ,GAAG,GAAG,CAAC;oBACxB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAC3B,CAAC,CACF;YACL,CAAC;QACH,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,EACD;YACE,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC,CACF;IAEL,CAAC;IAED,8CAAY,GAAZ,UAAa,QAAQ;QACnB,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC;YACnB,MAAM,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC;SAC5B,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC;aACjC,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAClB,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC1C,CAAC;QACH,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACvC,CAAC,CACF;IACL,CAAC;IAED,sDAAoB,GAApB,UAAqB,QAAQ;QAC3B,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC;YACnB,wBAAwB,EAAE,CAAC,QAAQ,CAAC,0BAA0B,CAAC;SAChE,CAAC;QAEF,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,IAAI,CAAC;aAC/C,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAClB,QAAQ,CAAC,0BAA0B,CAAC,GAAG,CAAC,QAAQ,CAAC,0BAA0B,CAAC,CAAC;YAC/E,CAAC;QACH,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAClD,CAAC,CACF,CAAC;IACN,CAAC;IA9FU,uBAAuB;QALnC,gEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAMqC,0EAAe,EAA0B,gFAAc,EAAuB,uEAAW;OALnH,uBAAuB,CAgGnC;IAAD,8BAAC;CAAA;AAhGmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdG;AACM;AACmB;AACW;AACxB;AAEA;AACN;AACuC;AACpB;AACoB;AAC1B;AACF;AAC8B;AAyBtF;IAAA;IACA,CAAC;IADY,cAAc;QAtB1B,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,6DAAY;gBACZ,uFAAqB;gBACrB,mEAAmB;gBACnB,6DAAY;gBACZ,2DAAW;gBACX,+EAAa;gBACb,mEAAmB;aACpB;YACD,YAAY,EAAE;gBACZ,kGAAoB;gBACpB,2GAAuB;gBACvB,2GAAuB;gBACvB,4GAAuB;aACxB;YACD,OAAO,EAAE,EAAE;YACX,SAAS,EAAE;gBACT,0EAAe;gBACf,iFAAc;aACf;SACF,CAAC;OACW,cAAc,CAC1B;IAAD,qBAAC;CAAA;AAD0B;;;;;;;;;;;;;;;;;;;;;;;ACtCc;AACgB;AACE;AAC5B;AAG/B;IAIE,yBAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAFnC,gBAAW,GAAG,8EAAW,CAAC,UAAU,GAAG,WAAW,CAAC;IAG3D,CAAC;IAED,sCAAY,GAAZ,UAAa,IAAS;QACpB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,gBAAgB,GAAG,IAAI,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,yCAAe,GAAf,UAAgB,SAAS;QACvB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,MAAM,GAAG,OAAO,GAAG,SAAS,CAAC;QAC1D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,mCAAS,GAAT,UAAU,IAAS;QACjB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3D,CAAC;IAED,4CAAkB,GAAlB,UAAmB,EAAE;QACnB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,UAAU,GAAG,EAAE,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,wCAAc,GAAd,UAAe,IAAS;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3D,CAAC;IAED,2CAAiB,GAAjB,UAAkB,IAAS;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,0CAAgB,GAAhB,UAAiB,IAAS;QACxB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,8CAAoB,GAApB,UAAqB,IAAS;QAC5B,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,sCAAY,GAAZ,UAAa,IAAS;QACpB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,2CAAiB,GAAjB,UAAkB,IAAS;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,wBAAwB,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,iDAAuB,GAAvB,UAAwB,IAAS;QAC/B,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,uCAAuC,CAAC;QACrE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,4CAAkB,GAAlB,UAAmB,IAAS;QAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,sBAAsB,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,+CAAqB,GAArB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,6CAAmB,GAAnB,UAAoB,EAAE;QACpB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,wBAAwB,GAAG,EAAE,CAAC;QAC3D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,6CAAmB,GAAnB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,wBAAwB,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAhFU,eAAe;QAD3B,iEAAU,EAAE;yCAKe,+EAAiB;OAJhC,eAAe,CAoF3B;IAAD,sBAAC;CAAA;AApF2B;;;;;;;;ACN5B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,ypBAAypB,oBAAoB,6PAA6P,2jCAA2jC,aAAa,whDAAwhD,kEAAkE,yBAAyB,mCAAmC,2BAA2B,mCAAmC,2BAA2B,yCAAyC,2BAA2B,yCAAyC,yFAAyF,+CAA+C,+DAA+D,+CAA+C,4EAA4E,6CAA6C,wGAAwG,8CAA8C,0DAA0D,wBAAwB,kCAAkC,0CAA0C,8BAA8B,mBAAmB,uHAAuH,mBAAmB,qGAAqG,mBAAmB,+GAA+G,sCAAsC,yEAAyE,wCAAwC,yIAAyI,qCAAqC,gGAAgG,8BAA8B,oyCAAoyC,2XAA2X,0BAA0B,6EAA6E,+BAA+B,8PAA8P,kBAAkB,uFAAuF,aAAa,gnDAAgnD,oF;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvnS;AACT;AACa;AAIA;AACY;AACH;AAC7B;AAOhC;IAOE,8BAAoB,eAAgC,EAAU,MAAc,EAAU,eAAgC,EAAU,cAA8B,EAAU,WAAwB;QAA5K,oBAAe,GAAf,eAAe,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QALzL,iBAAY,GAAe,EAAE,CAAC;QAErC,uBAAkB,GAAW,CAAC,CAAC;QACxB,cAAS,GAAG,CAAC,CAAC;IAGrB,CAAC;IAED,uCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE;aACvC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,KAAK,CAAC;QACtC,CAAC,CACF,CAAC;QACJ,IAAI,CAAC,cAAc,EAAE,CAAC;IAExB,CAAC;IAED,6CAAc,GAAd;QAAA,iBA2CC;QA1CC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC;aAChD,SAAS,CACR,UAAC,GAAe;YACd,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACzB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,gDAAM,CAAC,GAAG,EAAE,UAAC,QAAkB;oBAC7B,IAAI,QAAkB,CAAC;oBACvB,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC;yBAC1D,SAAS,CACR,UAAC,GAAa;wBACZ,QAAQ,GAAG,GAAG,CAAC;wBACf,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC1B,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACpC,gDAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAC,OAAO;gCACnC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;qCACxC,SAAS,CACR,UAAC,GAAY;oCACX,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCACpC,CAAC,CACF;4BACL,CAAC,CAAC,CAAC;wBACL,CAAC;wBAED,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;6BACxC,SAAS,CACR,UAAC,GAAG;4BACF,QAAQ,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;wBAC7B,CAAC,CACF;wBACD,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC;wBACnC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACnC,CAAC,CACF;gBACL,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACzC,CAAC,CACF;IACL,CAAC;IAED,iDAAkB,GAAlB,UAAmB,KAAU;QAC3B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IAED,2CAAY,GAAZ,UAAa,KAAU;IAEvB,CAAC;IAED,0CAAW,GAAX,UAAY,KAAU;IAEtB,CAAC;IAED,2CAAY,GAAZ,UAAa,MAAc,EAAE,QAAkB;QAC7C,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAClC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;YACzB,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAChC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;YAC3B,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;YACxB,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC;YACrC,QAAQ,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,gBAAgB,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;QAClC,CAAC;QAED,QAAQ,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,QAAQ,CAAC;aAChD,SAAS,CACR,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,kBAAkB;IAClB,yCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAGD,iDAAkB,GAAlB,UAAmB,QAAkB;QACnC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC;aAC9C,SAAS,CACR,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CACF;IACL,CAAC;IAvHU,oBAAoB;QALhC,gEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAQqC,mFAAe,EAAkB,uDAAM,EAA2B,0EAAe,EAA0B,gFAAc,EAAuB,uEAAW;OAPrL,oBAAoB,CAyHhC;IAAD,2BAAC;CAAA;AAzHgC;;;;;;;;AChBjC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,03CAA03C,gBAAgB,sCAAsC,qBAAqB,oBAAoB,qBAAqB,ksKAAksK,yLAAyL,kFAAkF,OAAO,4SAA4S,eAAe,6BAA6B,gBAAgB,UAAU,gBAAgB,upBAAupB,8zB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAn/P;AACM;AACO;AACT;AACY;AAEhC;AAKoB;AAOpD;IAgBE,iCAAoB,eAAgC,EAAU,EAAe,EAAU,eAAgC,EAAU,cAA8B,EAAU,WAAwB;QAA7K,oBAAe,GAAf,eAAe,CAAiB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAd1L,gBAAW,GAAU,EAAE,CAAC;QAC/B,gBAAW,GAAY,KAAK,CAAC;QAC7B,cAAS,GAAY,KAAK,CAAC;QAEpB,iBAAY,GAAe,EAAE,CAAC;QAI9B,sBAAiB,GAAG,CAAC,CAAC;QACtB,gBAAW,GAAU,EAAE,CAAC;QACxB,YAAO,GAAY,KAAK,CAAC;IAKhC,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,2CAAS,GAAT;QACE,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtC,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACtB,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC,CAAC,CAAC;YACb,IAAI,EAAE,CAAC,IAAI,CAAC;YACZ,MAAM,EAAE,CAAC,KAAK,CAAC;YACf,WAAW,EAAE,EAAE;SAChB,CAAC,CAAC;IACL,CAAC;IAED,iDAAe,GAAf;QAAA,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,KAAK,CAAC;aACxC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QAC1B,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF,CAAC;IACN,CAAC;IAED,6CAAW,GAAX,UAAY,KAAU;QAAtB,iBA8BC;QA7BC,IAAI,CAAC,WAAW,GAAG,gDAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,IAAI;YACzD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YACjC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;YAC7B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;YAC3B,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc;YAC/C,gBAAgB,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB;SACpD,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,EAAE,CAAC;QAClC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;iBAChD,SAAS,CACR,UAAC,GAAS;gBACR,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,GAAG,CAAC;gBAChC,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;oBACjC,IAAI,EAAE,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI;iBACrC,CAAC,CAAC;YACL,CAAC,EACD,UAAC,GAAG;YAEJ,CAAC,CACF;QACL,CAAC;IACH,CAAC;IAED,gDAAc,GAAd;QAAA,iBAqBC;QApBC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;aAChC,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,IAAI;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,EACD;YACE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;gBACjC,KAAK,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;aAChC,CAAC;QACJ,CAAC,CACF;IACL,CAAC;IAGD,+CAAa,GAAb,UAAc,KAAK;QACjB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,4CAAU,GAAV;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClC,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,iDAAe,GAAf,UAAgB,KAAU,EAAE,KAAK;QAC/B,IAAI,MAAM,GAAG,gDAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,IAAI;YAClD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC3C,CAAC,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;QACjC,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,6CAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACjC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,6CAAW,GAAX;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,gDAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,OAAO;YAC/B,KAAK,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YACjC,KAAK,EAAE,KAAK;SACb,CAAC;IACJ,CAAC;IAED,0DAAwB,GAAxB;QAAA,iBAcC;QAbC,IAAI,YAAY,GAAG,iDAAO,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YACjC,WAAW,EAAE,YAAY;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;SACrC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;aAClE,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,cAAc,GAAG,GAAG,CAAC;YAC1B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CACF;IACL,CAAC;IAtKU,uBAAuB;QALnC,gEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAiBqC,0EAAe,EAAc,2DAAW,EAA2B,mFAAe,EAA0B,gFAAc,EAAuB,uEAAW;OAhBtL,uBAAuB,CAuKnC;IAAD,8BAAC;CAAA;AAvKmC;;;;;;;;AClBpC;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,wBAAwB,KAAK,kBAAkB,yBAAyB,GAAG;;AAEhJ;;;AAGA;AACA,2C;;;;;;;ACXA,2FAA2F,kIAAkI,mCAAmC,yCAAyC,qCAAqC,yjJAAyjJ,mBAAmB,iGAAiG,mBAAmB,mGAAmG,mBAAmB,okCAAokC,gHAAgH,OAAO,iHAAiH,kBAAkB,6EAA6E,aAAa,++FAA++F,6FAA6F,OAAO,8bAA8b,eAAe,+BAA+B,gBAAgB,UAAU,gBAAgB,qSAAqS,6FAA6F,oEAAoE,oXAAoX,eAAe,+BAA+B,gBAAgB,UAAU,gBAAgB,ukBAAukB,6f;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArjX;AAC8B;AACnB;AACL;AAGR;AACe;AACO;AACG;AAChC;AACoB;AAOpD;IAqBE,+BAAoB,WAAwB,EAAU,eAAgC,EAAU,UAAsB,EAAU,cAA8B,EAAU,EAAe,EAAU,eAAgC,EAAU,KAAqB,EAAU,MAAc;QAApQ,gBAAW,GAAX,WAAW,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAlBjR,gBAAW,GAAU,EAAE,CAAC;QACxB,uBAAkB,GAAU,EAAE,CAAC;QAC/B,sBAAiB,GAAW,CAAC,CAAC;QAC9B,mBAAc,GAAU,EAAE,CAAC;QAG3B,uBAAkB,GAAU,EAAE,CAAC;QAM/B,gBAAW,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QACjC,aAAQ,GAAa,IAAI,yDAAQ,CAAC,OAAO,CAAC,CAAC;QAC3C,kBAAa,GAAW,KAAK,CAAC;QAC9B,aAAQ,GAAY,KAAK,CAAC;IAKjC,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YACpD,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,eAAe,CAAC,eAAe,CAAC,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,EAAE,CAAC;qBACrD,SAAS,CACR,UAAC,GAAG;oBACF,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;oBACpB,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;oBAChD,KAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC,EACD,UAAC,GAAG;gBAEJ,CAAC,CACF;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAS,GAAT;QAAA,iBAgDC;QA/CC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;aAC/D,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,GAAG,CAAC;YACjC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;YAC5C,IAAI,oBAAoB,GAAG,CAAC,CAAC;YAC7B,gDAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAC,IAAI;gBACrC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC;qBACrC,SAAS,CACR,UAAC,GAAG;oBACF,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACnD,CAAC,CACF;gBACH,oBAAoB,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACtC,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC3B,KAAK,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrB,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC3B,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC3B,IAAI,EAAE,CAAC,EAAE,CAAC;gBACV,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACnB,cAAc,EAAE,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBACvC,gBAAgB,EAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBAC3C,gBAAgB,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;gBACrD,UAAU,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;gBACzC,MAAM,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACjC,KAAK,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC/B,QAAQ,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBACrC,qBAAqB,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;gBAC/D,SAAS,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;gBACvC,qBAAqB,EAAE,oBAAoB;aAC5C,CAAC,CAAC;YAEH,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;iBACtC,SAAS,CACR,UAAC,GAAG;gBACF,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;oBACjC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC;iBAClB,CAAC,CAAC;YACL,CAAC,CACF;YACH,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CACF;IAEL,CAAC;IAED,qDAAqB,GAArB,UAAsB,KAAU;QAAhC,iBAcC;QAbC,IAAI,IAAI,GAAG;YACT,IAAI,EAAE,KAAK,CAAC,KAAK;SAClB;QAED,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC;aACnC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAChC,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,8CAAc,GAAd;QAAA,iBAeC;QAdC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;aAChC,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,IAAI;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,CACF;IACL,CAAC;IAED,0CAAU,GAAV;QACE,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,6CAAa,GAAb,UAAc,KAAK;QACjB,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,+CAAe,GAAf,UAAgB,KAAU,EAAE,KAAK,EAAE,IAAI;QACrC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACjB,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC;QAChE,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,sDAAsB,GAAtB;QAAA,iBAqBC;QApBC,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,GAAG;YACL,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,UAAU;YACpD,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,KAAK;YAC1C,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ;YAChD,WAAW,EAAE,IAAI,CAAC,cAAc;YAChC,qBAAqB,EAAE,IAAI,CAAC,QAAQ,CAAC,qBAAqB;YAC1D,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB;QAED,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC,IAAI,CAAC;aACjD,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,EAAE,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3E,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,CACF;IACL,CAAC;IAGD,4CAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,MAAM,CAAC,CAAC,CAAC;YACjC,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC;YACjE,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;gBACjC,SAAS,EAAE,WAAW;aACvB,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,gDAAgB,GAAhB,UAAiB,KAAU;QACzB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YACjC,qBAAqB,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;YACzC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK;SAC1D,CAAC,CAAC;IACL,CAAC;IAED,2CAAW,GAAX,UAAY,KAAU;QACpB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YACjC,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK;SACrE,CAAC,CAAC;IACL,CAAC;IAED,8CAAc,GAAd;QAAA,iBAYC;QAXC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,gDAAM,CAAC,IAAI,CAAC,cAAc,EAAE,UAAC,IAAI;YAC/B,IAAI,OAAO,GAAG,qDAAW,CAAC,KAAI,CAAC,WAAW,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;YACzD,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YACjC,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,KAAK;SAClB,CAAC,CAAC;IACL,CAAC;IAjN8B;QAA9B,gEAAS,CAAC,kBAAkB,CAAC;kCAAmB,yDAAU;mEAAC;IADjD,qBAAqB;QALjC,gEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAsBiC,uEAAW,EAA2B,mFAAe,EAAsB,yDAAU,EAA0B,gFAAc,EAAc,2DAAW,EAA2B,0EAAe,EAAiB,+DAAc,EAAkB,uDAAM;OArB7Q,qBAAqB,CAmNjC;IAAD,4BAAC;CAAA;AAnNiC;;;;;;;;AClBlC;AACA;;;AAGA;AACA,wCAAyC,2BAA2B,oBAAoB,uBAAuB,wBAAwB,GAAG,qBAAqB,2BAA2B,oBAAoB,GAAG,mBAAmB,qBAAqB,sBAAsB,iBAAiB,kBAAkB,GAAG,iBAAiB,qCAAqC,GAAG,mBAAmB,qBAAqB,GAAG;;AAEzZ;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,iBAAiB,27BAA27B,YAAY,oKAAoK,gBAAgB,+CAA+C,wHAAwH,kBAAkB,YAAY,cAAc,iBAAiB,+GAA+G,kBAAkB,gBAAgB,cAAc,gBAAgB,uGAAuG,mCAAmC,mDAAmD,mCAAmC,gDAAgD,+BAA+B,yFAAyF,yCAAyC,6CAA6C,gCAAgC,iDAAiD,+BAA+B,0LAA0L,+DAA+D,gBAAgB,gKAAgK,wBAAwB,WAAW,WAAW,aAAa,4BAA4B,gBAAgB,8EAA8E,yCAAyC,8BAA8B,2GAA2G,oKAAoK,4KAA4K,wBAAwB,WAAW,WAAW,aAAa,4BAA4B,gBAAgB,gFAAgF,gNAAgN,qEAAqE,yCAAyC,kHAAkH,qXAAqX,cAAc,iBAAiB,0EAA0E,YAAY,kTAAkT,uKAAuK,iBAAiB,mkBAAmkB,cAAc,iBAAiB,0EAA0E,YAAY,0yFAA0yF,iEAAiE,gBAAgB,4OAA4O,upCAAupC,eAAe,0DAA0D,8BAA8B,wWAAwW,yCAAyC,sJAAsJ,8BAA8B,wEAAwE,8BAA8B,kFAAkF,uBAAuB,mfAAmf,wKAAwK,4F;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUrwW;AAE6B;AACL;AAGiB;AACH;AACA;AAC7B;AACS;AAWzC;IAeE,+BAAoB,cAA8B,EAAU,cAA8B,EAAU,eAAgC,EAAU,eAAgC,EAAU,KAAqB;QAAzL,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QARrM,SAAI,GAAG,EAAE,CAAC;QAGX,gBAAW,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QACjC,aAAQ,GAAa,IAAI,yDAAQ,CAAC,OAAO,CAAC,CAAC;QAE3C,mBAAc,GAAY,KAAK,CAAC;IAGvC,CAAC;IAED,2CAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC;QAC3D,CAAC;IACH,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YACpD,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACrC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,YAAY,CAAC;gBAClC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC;gBAC/C,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBACpE,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACvE,CAAC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,2CAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,kDAAkB,GAAlB;QACE,6BAA6B;QAC7B,wBAAwB;QACxB,EAAE;QACF,IAAI;IACN,CAAC;IAED,+CAAe,GAAf;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IAED,2CAAW,GAAX;QAAA,iBA6BC;QA5BC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE;YACpD,UAAU,EAAE,UAAC,MAAM;gBACjB,IAAI,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;gBAClD,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBACrC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;gBAC9C,EAAE,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBACxB,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;oBACtC,IAAI,IAAI,GAAG;wBACT,GAAG,EAAE,GAAG;wBACR,KAAK,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,GAAG,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC;qBAC/F;oBAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAElB,KAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC;yBACxC,SAAS,CACR,UAAC,GAAG;wBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC,EACD,UAAC,GAAG;wBACF,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;oBACrC,CAAC,CACF;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,GAAG,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,GAAG,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;gBAC7G,CAAC;YACH,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAKD,+CAAe,GAAf,UAAgB,EAAU;QAA1B,iBAoDC;QAnDC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;aAChD,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,KAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC;YACxB,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;YAC/B,mBAAmB;YACnB,gDAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAC,IAAI;gBACrC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC;qBACrC,SAAS,CACR,UAAC,GAAG;oBACF,GAAG,CAAC,iBAAiB,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;oBAC1E,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACpC,KAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC,iBAAiB,CAAC,CAAC;oBACnE,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;gBACjD,CAAC,EAAE,UAAC,GAAG;gBAEP,CAAC,EAAE;oBACD,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACnD,gDAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,UAAC,IAAI;4BAC/C,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACvE,CAAC,CAAC,CAAC;oBACL,CAAC;oBACD,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;wBACnC,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;oBAC/B,CAAC;oBACD,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;oBACpE,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACvE,CAAC,CACF;YACL,CAAC,CAAC,CAAC;YAGH,mBAAmB;YACnB,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;iBAC/D,SAAS,CACR,UAAC,GAAG;gBACF,KAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,GAAG,CAAC;YACnC,CAAC,EACD,UAAC,GAAG;YAEJ,CAAC,EACD;gBACE,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,CAAC,CACF;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF;IACL,CAAC;IAED,+CAAe,GAAf,UAAgB,CAAC,EAAE,qBAAqB;QAEtC,IAAI,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,EACvB,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC;QAElF,IAAI,GAAG,GAAG,qBAAqB,IAAI,KAAK,CAAC;QAEzC,qBAAqB;QACrB,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QAED,6BAA6B;QAC7B,KAAK,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAEnM,4BAA4B;QAC5B,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAE9F,8BAA8B;QAC9B,MAAM,GAAG,CAAC,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,cAAc,EAAE,cAAc,EAAE,qBAAqB,EAAE,eAAe,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,EAAE,gBAAgB,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;QAEzV,gEAAgE;QAChE,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QACtB,MAAM,GAAG,EAAE,CAAC;QACZ,OAAO,KAAK,GAAG,CAAC,EAAE,CAAC;YACjB,GAAG,GAAG,KAAK,CAAC;YACZ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACnE,CAAC;QAED,wFAAwF;QACxF,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;QAC1B,EAAE,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QACD,0CAA0C;QAC1C,KAAK,GAAG,EAAE,CAAC;QACX,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/B,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,mDAAmD;gBACnD,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAErD,iEAAiE;gBACjE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClB,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBAChB,CAAC;gBAED,+DAA+D;gBAC/D,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;gBAED,wCAAwC;gBACxC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;gBAED,wCAAwC;gBACxC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC3B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;gBAED,sDAAsD;gBACtD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,2EAA2E;oBAC3E,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC;wBAC/B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClB,CAAC;gBACH,CAAC;gBAED,4CAA4C;gBAC5C,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5B,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC;QACH,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IA9NyB;QAAzB,gEAAS,CAAC,aAAa,CAAC;kCAAc,yDAAU;8DAAC;IACzC;QAAR,4DAAK,EAAE;;+DAAmB;IAHhB,qBAAqB;QALjC,gEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAgBoC,gFAAc,EAA0B,gFAAc,EAA2B,mFAAe,EAA2B,0EAAe,EAAiB,+DAAc;OAflM,qBAAqB,CAiOjC;IAAD,4BAAC;CAAA;AAjOiC;;;;;;;;AC/BlC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,sZAAsZ,8BAA8B,4gBAA4gB,sCAAsC,6dAA6d,oBAAoB,yPAAyP,wjCAAwjC,aAAa,k/BAAk/B,spBAAspB,kEAAkE,yBAAyB,mCAAmC,2BAA2B,mCAAmC,2BAA2B,yCAAyC,2BAA2B,yCAAyC,6FAA6F,+CAA+C,+DAA+D,+CAA+C,4EAA4E,6CAA6C,uGAAuG,8CAA8C,mDAAmD,wBAAwB,2BAA2B,0CAA0C,2BAA2B,mBAAmB,mHAAmH,mBAAmB,qGAAqG,mBAAmB,+GAA+G,sCAAsC,8IAA8I,qCAAqC,gGAAgG,8BAA8B,87CAA87C,2XAA2X,0BAA0B,6EAA6E,+BAA+B,8PAA8P,kBAAkB,uFAAuF,aAAa,6mDAA6mD,oF;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5iU;AAES;AACI;AAEpB;AAE6B;AACT;AACY;AAOhE;IAcE,iCAAoB,eAAgC,EAAU,MAAc,EAAU,eAAgC,EAAU,cAA8B,EAAU,WAAwB;QAA5K,oBAAe,GAAf,eAAe,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAbzL,gBAAW,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QACjC,iBAAY,GAAe,EAAE,CAAC;QAC9B,eAAU,GAAG,UAAU,CAAC;QAIxB,oBAAe,GAAY,KAAK,CAAC;QACjC,oBAAe,GAAY,KAAK,CAAC;QACjC,2BAAsB,GAAY,KAAK,CAAC;QAExC,cAAS,GAAG,CAAC,CAAC;QACrB,uBAAkB,GAAW,CAAC,CAAC;IAG/B,CAAC;IAED,0CAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE;aACzC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,KAAK,CAAC;QACtC,CAAC,CACF;QACH,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,8BAA8B;IAChC,CAAC;IAED,uBAAuB;IACvB,qDAAmB,GAAnB;QAAA,iBAWC;QAVC,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE;aACjC,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gBACf,KAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,CAAC;QACH,CAAC,CACF;IACL,CAAC;IAED,uBAAuB;IACvB,qDAAmB,GAAnB;QAAA,iBAOC;QANC,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE;aACtC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,0BAA0B,EAAE,CAAC;QACpC,CAAC,CACF;IACL,CAAC;IAED,qDAAmB,GAAnB;QAAA,iBA6CC;QA5CC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC;aACrD,SAAS,CACR,UAAC,GAAe;YACd,gDAAM,CAAC,GAAG,EAAE,UAAC,QAAkB;gBAC7B,IAAI,QAAkB,CAAC;gBACvB,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC;qBAC1D,SAAS,CACR,UAAC,GAAa;oBACZ,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAClB,QAAQ,GAAG,GAAG,CAAC;wBACf,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC1B,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACpC,gDAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAC,OAAO;gCACnC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;qCACxC,SAAS,CACR,UAAC,GAAY;oCACX,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCACpC,CAAC,CACF;4BACL,CAAC,CAAC,CAAC;wBACL,CAAC;wBACD,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;6BACxC,SAAS,CACR,UAAC,GAAG;4BACF,QAAQ,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;wBAC7B,CAAC,CACF;wBACD,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC;wBACnC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACnC,CAAC;gBACH,CAAC,CACF;YACL,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,EACD;YACE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAClD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC,CACF;IACL,CAAC;IAED,4DAA0B,GAA1B;QAAA,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,0BAA0B,EAAE;aAC9C,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACzC,CAAC,CACF;IACL,CAAC;IAED,oDAAkB,GAAlB,UAAmB,QAAkB;QACnC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC;aAC9C,SAAS,CACR,UAAC,GAAG;QACJ,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,8CAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,6CAAW,GAAX,UAAY,KAAU;QACpB,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,MAAM,CAAC;QACT,CAAC;QACD,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACjC,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC;YAClC,gDAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,IAAI;gBAC7B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,eAAe,CAAC,CAAC,CAAC;YAC5C,gDAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,IAAI;gBAC7B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,CAAC,CAAC;YACnC,gDAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,IAAI;gBAC7B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC/B,CAAC;IACH,CAAC;IAED,8CAAY,GAAZ,UAAa,MAAc,EAAE,QAAkB;QAC7C,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAClC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;YACzB,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAChC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;YAC3B,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;YACxB,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC;YACrC,QAAQ,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,gBAAgB,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;QAClC,CAAC;QAED,QAAQ,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,QAAQ,CAAC;aAChD,SAAS,CACR,UAAC,GAAG;QACJ,CAAC,CACF;IACL,CAAC;IAED,oDAAkB,GAAlB,UAAmB,QAAkB;QACnC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC;aAC9C,SAAS,CACR,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CACF;IACL,CAAC;IAED,oDAAkB,GAAlB,UAAmB,KAAU;QAA7B,iBAaC;QAZC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC;QACT,CAAC;QACD,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,gDAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,IAAI;YAC7B,EAAE,CAAC,CAAC,mDAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC/C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;IAC/B,CAAC;IAED,gDAAc,GAAd;QAAA,iBAkBC;QAjBC,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;YAC/B,qBAAqB,EAAE,IAAI,CAAC,UAAU;SACvC;QAED,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC;aACtC,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,KAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,CAAC;QACH,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,wCAAM,GAAN,UAAO,WAAW;QAChB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAED,oDAAkB,GAAlB,UAAmB,MAAM;QAAzB,iBAmBC;QAlBC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC;iBAClD,SAAS,CACR,UAAC,GAAG;gBACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,YAAY,GAAG,mDAAS,CAAC,KAAI,CAAC,YAAY,EAAE,qDAAW,CAAC,KAAI,CAAC,YAAY,EAAE;wBAC9E,GAAG,EAAE,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC;qBAC7B,CAAC,CAAC,CAAC;oBACJ,KAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;gBACtC,CAAC;YACH,CAAC,EACD,UAAC,GAAG;YACJ,CAAC,CACF;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACtC,CAAC;IACH,CAAC;IAED,kBAAkB;IAClB,4CAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAlQU,uBAAuB;QALnC,gEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAeqC,mFAAe,EAAkB,uDAAM,EAA2B,0EAAe,EAA0B,gFAAc,EAAuB,uEAAW;OAdrL,uBAAuB,CAoQnC;IAAD,8BAAC;CAAA;AApQmC;;;;;;;;;;;;;;;;;;AChBK;AACc;AAEvD,IAAM,cAAc,GAAG,EACtB,CAAC;AASF;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QARjC,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,6DAAY,CAAC,QAAQ,CAAC,cAAc,CAAC;aACxC;YACD,OAAO,EAAE;gBACL,6DAAY;aACf;SACJ,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;ACblC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,6QAA6Q,sCAAsC,6jBAA6jB,gvBAAgvB,mCAAmC,2BAA2B,mCAAmC,2BAA2B,yCAAyC,2BAA2B,yCAAyC,2FAA2F,+CAA+C,+DAA+D,+CAA+C,4EAA4E,6CAA6C,0GAA0G,8CAA8C,0DAA0D,wBAAwB,2BAA2B,0CAA0C,8BAA8B,mBAAmB,uHAAuH,mBAAmB,qGAAqG,mBAAmB,+GAA+G,sCAAsC,yEAAyE,wCAAwC,yIAAyI,qCAAqC,gGAAgG,8BAA8B,ywDAAywD,2XAA2X,0BAA0B,6EAA6E,+BAA+B,8PAA8P,kBAAkB,uFAAuF,aAAa,omEAAomE,oBAAoB,cAAc,sTAAsT,wBAAwB,UAAU,uBAAuB,0P;;;;;;;;;;;;;;;;;;;;;;;;;ACAj5Q;AAEI;AAGA;AACY;AACH;AAC7B;AAOhC;IASE,iCAAoB,eAAgC,EAAU,eAAgC,EAAU,cAA8B,EAAU,WAAwB;QAApJ,oBAAe,GAAf,eAAe,CAAiB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAPjK,kBAAa,GAAU,EAAE,CAAC;QAC1B,iBAAY,GAAe,EAAE,CAAC;QAI9B,2BAAsB,GAAY,KAAK,CAAC;IAG/C,CAAC;IAED,0CAAQ,GAAR;IACA,CAAC;IAGD,+CAAa,GAAb,UAAc,KAAU;QACtB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,iCAAiC,EAAE,CAAC;IAC3C,CAAC;IAGD,mEAAiC,GAAjC;QAAA,iBAOC;QANC,IAAI,CAAC,eAAe,CAAC,8BAA8B,CAAC,IAAI,CAAC,UAAU,CAAC;aACjE,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QAC3B,CAAC,CACF;IACL,CAAC;IAED,kDAAgB,GAAhB,UAAiB,IAAI;QAArB,iBA+CC;QA9CC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,EAAE,CAAC;aAC7C,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,QAAkB;gBAC7B,IAAI,QAAkB,CAAC;gBAEvB,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC;oBACzB,QAAQ,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;gBAC9B,CAAC;gBAED,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC;qBAC1D,SAAS,CACR,UAAC,GAAa;oBACZ,QAAQ,GAAG,GAAG,CAAC;oBACf,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACvB,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC1B,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACpC,gDAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAC,OAAO;gCACnC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;qCACxC,SAAS,CACR,UAAC,GAAY;oCACX,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCACpC,CAAC,CACF;4BACL,CAAC,CAAC;wBACJ,CAAC;wBAED,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;6BACxC,SAAS,CACR,UAAC,GAAG;4BACF,QAAQ,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;wBAC7B,CAAC,CACF;wBACD,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC;wBACnC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACnC,CAAC;gBACH,CAAC,CACF;YACL,CAAC,CAAC;QACJ,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QAC3C,CAAC,CACF;IACL,CAAC;IAGD,8CAAY,GAAZ,UAAa,MAAc,EAAE,QAAkB;QAC7C,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAClC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;YACzB,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAChC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;YAC3B,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;YACxB,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC;YACrC,QAAQ,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,gBAAgB,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;QAClC,CAAC;QAED,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;YACjC,QAAQ,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;QAC3B,CAAC;QACD,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,QAAQ,CAAC;aAChD,SAAS,CACR,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,oDAAkB,GAAlB,UAAmB,QAAkB;QACnC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC;aAC9C,SAAS,CACR,UAAC,GAAG;YACF,oBAAoB;QACtB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CACF;IACL,CAAC;IAED,gDAAc,GAAd,UAAe,QAAkB;QAAjC,iBAkBC;QAjBC,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;YAC/B,qBAAqB,EAAE,IAAI,CAAC,UAAU;SACvC;QAED,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC;aACtC,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,KAAI,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,QAAQ,CAAC,WAAW,EAAC,CAAC,CAAC;YACrD,CAAC;QACH,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,wCAAM,GAAN,UAAO,QAAkB;QACvB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAGD,oDAAkB,GAAlB,UAAmB,MAAM;QAAzB,iBAoBC;QAnBC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC;iBAClD,SAAS,CACR,UAAC,GAAG;gBACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,YAAY,GAAG,mDAAS,CAAC,KAAI,CAAC,YAAY,EAAE,qDAAW,CAAC,KAAI,CAAC,YAAY,EAAE;wBAC9E,GAAG,EAAE,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC;qBAC7B,CAAC,CAAC,CAAC;oBACJ,KAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;gBACtC,CAAC;YACH,CAAC,EACD,UAAC,GAAG;YAEJ,CAAC,CACF;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACtC,CAAC;IACH,CAAC;IAtKU,uBAAuB;QALnC,gEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAUqC,mFAAe,EAA2B,0EAAe,EAA0B,gFAAc,EAAuB,uEAAW;OAT7J,uBAAuB,CAyKnC;IAAD,8BAAC;CAAA;AAzKmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfG;AACM;AAEM;AACN;AACmB;AACA;AACW;AACS;AACjC;AACiC;AAC1B;AACT;AAC6B;AACA;AACjB;AACH;AAC4B;AA8BtF;IAAA;IACA,CAAC;IADY,cAAc;QA5B1B,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,6DAAY;gBACZ,mEAAmB;gBACnB,6DAAY;gBACZ,2DAAW;gBACX,mEAAmB;gBACnB,uFAAqB;aACtB;YACD,YAAY,EAAE;gBACZ,kGAAoB;gBACpB,2GAAuB;gBACvB,2GAAuB;gBACvB,sGAAqB;gBACrB,sGAAqB;gBACrB,4GAAuB;aACxB;YACD,OAAO,EAAE;gBACP,sGAAqB;aACtB;YACD,SAAS,EAAE;gBACT,0EAAe;gBACf,iFAAc;gBACd,wEAAW;gBACX,oFAAe;gBACf,iFAAc;aACf;SACF,CAAC;OACW,cAAc,CAC1B;IAAD,qBAAC;CAAA;AAD0B;;;;;;;;;;;;;;;;;;;;;;;AC/Cc;AACgB;AACE;AAC5B;AAG/B;IAIE,yBAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAFnC,gBAAW,GAAG,8EAAW,CAAC,UAAU,GAAG,WAAW,CAAC;IAG3D,CAAC;IAED,wCAAc,GAAd,UAAe,QAAQ;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChE,CAAC;IAED,iDAAuB,GAAvB,UAAwB,EAAE;QACxB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,iBAAiB,GAAG,EAAE,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,wDAA8B,GAA9B,UAA+B,KAAK;QAClC,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,4BAA4B,GAAG,KAAK,CAAC;QAClE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,0CAAgB,GAAhB,UAAiB,IAAI;QACnB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,wCAAc,GAAd,UAAe,SAAS;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,WAAW,GAAG,SAAS,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,2CAAiB,GAAjB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,uCAAa,GAAb,UAAc,IAAS;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,qCAAW,GAAX,UAAY,IAAS;QACnB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,yCAAe,GAAf,UAAgB,IAAY,EAAE,EAAU;QACtC,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,MAAM,GAAG,EAAE,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,0CAAgB,GAAhB,UAAiB,IAAS;QACxB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,4CAAkB,GAAlB,UAAmB,IAAS;QAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,4CAAkB,GAAlB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,qDAA2B,GAA3B;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,wBAAwB,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,6CAAmB,GAAnB,UAAoB,SAAiB;QACnC,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,+BAA+B,GAAG,SAAS,CAAC;QACzE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,uCAAa,GAAb;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,8CAAoB,GAApB,UAAqB,IAAS;QAC5B,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3D,CAAC;IAED,2CAA2C;IAC3C,kCAAQ,GAAR,UAAS,IAAS;QAChB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,oDAA0B,GAA1B;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,wCAAc,GAAd,UAAe,IAAS;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,yBAAyB,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,mDAAyB,GAAzB,UAA0B,IAAS;QACjC,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,qBAAqB,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,wCAAc,GAAd,UAAe,QAAQ;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChE,CAAC;IAED,4CAAkB,GAAlB,UAAmB,QAAQ;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChE,CAAC;IAED,4CAAkB,GAAlB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,6CAAmB,GAAnB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,2CAAiB,GAAjB,UAAkB,IAAS;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAnIU,eAAe;QAD3B,iEAAU,EAAE;yCAKe,+EAAiB;OAJhC,eAAe,CAoI3B;IAAD,sBAAC;CAAA;AApI2B;;;;;;;;ACN5B;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,wBAAwB,KAAK;;AAElG;;;AAGA;AACA,2C;;;;;;;ACXA,+2C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAgD;AACM;AACU;AAEb;AACW;AAC/B;AACE;AAE4B;AAO7D;IAcE,oCAAoB,IAAU,EAAU,eAAgC,EAAU,EAAe;QAA7E,SAAI,GAAJ,IAAI,CAAM;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,OAAE,GAAF,EAAE,CAAa;QAX1F,oBAAe,GAAY,KAAK,CAAC;QAKhC,cAAS,GAAG,8EAAW,CAAC,UAAU,GAAG,+BAA+B,CAAC;QAGtE,aAAQ,GAAiB,IAAI,6EAAY,CAAC,EAAC,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC,CAAC,CAAC;IAI9F,CAAC;IAED,6CAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,GAAG,UAAC,IAAI;YACrC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC;QAGF,IAAI,CAAC,QAAQ,CAAC,cAAc,GAAG,UAAC,IAAS,EAAE,QAAa,EAAE,MAAW,EAAE,OAAY;YACjF,EAAE,CAAC,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC9B,CAAC;QACH,CAAC;IACH,CAAC;IAGD,+CAAU,GAAV;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,IAAI,EAAE,EAAE;SACT,CAAC,CAAC;IACL,CAAC;IAED,iDAAY,GAAZ;IACA,CAAC;IAED,4CAAO,GAAP,UAAQ,KAAU;QAChB,IAAI,QAAQ,GAAa,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;IAED,iDAAY,GAAZ,UAAa,KAAK;QAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IACzC,CAAC;IAjDU,0BAA0B;QALtC,gEAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;;;SAGpC,CAAC;yCAe0B,2DAAI,EAA2B,mFAAe,EAAc,2DAAW;OAdtF,0BAA0B,CAoDtC;IAAD,iCAAC;CAAA;AApDsC;;;;;;;;;;;;;;;;;;AChBE;AACM;AAE/C,IAAM,gBAAgB,GAAG,EAExB,CAAC;AASF;IAAA;IAAuC,CAAC;IAA3B,uBAAuB;QARnC,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,6DAAY,CAAC,QAAQ,CAAC,gBAAgB,CAAC;aAC1C;YACD,OAAO,EAAE;gBACL,6DAAY;aACf;SACJ,CAAC;OACW,uBAAuB,CAAI;IAAD,8BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;ACdG;AACM;AACmB;AACK;AACrE,aAAa;AACkF;AAC/F,SAAS;AAC+C;AACK;AACT;AAqBpD;IAAA;IACA,CAAC;IADY,gBAAgB;QAnB5B,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,6DAAY;gBACZ,2DAAW;gBACX,mEAAmB;gBACnB,4FAAuB;aACxB;YACD,YAAY,EAAE;gBACZ,sHAA0B;gBAC1B,oEAAmB;aACpB;YACD,OAAO,EAAE;gBACP,sHAA0B;aAC3B;YACD,SAAS,EAAE;gBACT,+EAAiB;gBACjB,mFAAe;aAChB;SACF,CAAC;OACW,gBAAgB,CAC5B;IAAD,uBAAC;CAAA;AAD4B;;;;;;;;;;;;;;;;;;;;;;;AC9BY;AACgB;AACE;AAC5B;AAG/B;IAGE,2BAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAFnC,gBAAW,GAAG,8EAAW,CAAC,UAAU,GAAG,WAAW,CAAC;IAG3D,CAAC;IAED,6CAAiB,GAAjB,UAAkB,IAAS;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,EAAH,CAAG,CAAC,CAAC;IACrD,CAAC;IATU,iBAAiB;QAD7B,iEAAU,EAAE;yCAIe,+EAAiB;OAHhC,iBAAiB,CAW7B;IAAD,wBAAC;CAAA;AAX6B;;;;;;;;ACN9B;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,sBAAsB,GAAG;;AAE9F;;;AAGA;AACA,2C;;;;;;;ACXA,iO;;;;;;;;;;;;;;;;;;;;ACA2D;AAET;AAQlD;IAIE,4BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAF3C,qBAAgB,GAAY,IAAI,CAAC;IAGxC,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,SAAS,CACpD,UAAC,MAAM;YACL,KAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CACF;IACH,CAAC;IAGD,wCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IApBU,kBAAkB;QAN9B,gEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;YAGzB,SAAS,EAAE,CAAC,wEAAc,CAAC;SAC5B,CAAC;yCAKoC,wEAAc;OAJvC,kBAAkB,CAsB9B;IAAD,yBAAC;CAAA;AAtB8B;;;;;;;;ACV/B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,2UAA2U,qT;;;;;;;;;;;;;;;;;;;ACAzR;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,gEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPW;AACM;AAC7C,aAAa;AAC2D;AACoC;AACvB;AACS;AACJ;AACI;AAChB;AAC9E,WAAW;AAC8E;AACS;AACN;AACA;AACM;AACA;AAClG,UAAU;AACuE;AACS;AACN;AACA;AACmB;AACb;AACA;AAC1F,UAAU;AAC2E;AACS;AACN;AACA;AACM;AACA;AAC9F,UAAU;AAC2E;AACS;AACN;AACA;AACM;AACA;AAI9F,IAAM,aAAa,GAAG;IACpB;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,MAAM;QAClB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,8FAAiB;KAC7B;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,kIAA0B;KACtC;IACD;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,2GAAoB;KAChC;IACD;QACE,IAAI,EAAE,qBAAqB;QAC3B,SAAS,EAAE,oHAAuB;KACnC;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,oHAAuB;KACnC;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,gHAAsB;KAClC;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,oGAAmB;KAC/B;IACD;QACE,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,wGAAmB;KAC/B;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,iHAAsB;KAClC;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,iHAAsB;KAClC;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,iHAAsB;KAClC;IACD;QACE,IAAI,EAAE,2BAA2B;QACjC,SAAS,EAAE,2GAAoB;KAChC;IACD;QACE,IAAI,EAAE,wBAAwB;QAC9B,SAAS,EAAE,2GAAoB;KAChC;IACD;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,+GAAqB;KACjC;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,yHAAwB;KACpC;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,yHAAwB;KACpC;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,yHAAwB;KACpC;IACD;QACE,IAAI,EAAE,6BAA6B;QACnC,SAAS,EAAE,mHAAsB;KAClC;IACD;QACE,IAAI,EAAE,0BAA0B;QAChC,SAAS,EAAE,mHAAsB;KAClC;IAED;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,4GAAoB;KAChC;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,qHAAuB;KACnC;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,qHAAuB;KACnC;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,qHAAuB;KACnC;IACD;QACE,IAAI,EAAE,4BAA4B;QAClC,SAAS,EAAE,+GAAqB;KACjC;IACD;QACE,IAAI,EAAE,yBAAyB;QAC/B,SAAS,EAAE,+GAAqB;KACjC;IACD;QACE,IAAI,EAAE,cAAc;QACpB,SAAS,EAAE,4GAAoB;KAChC;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,qHAAuB;KACnC;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,qHAAuB;KACnC;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,qHAAuB;KACnC;IACD;QACE,IAAI,EAAE,4BAA4B;QAClC,SAAS,EAAE,+GAAqB;KACjC;IACD;QACE,IAAI,EAAE,yBAAyB;QAC/B,SAAS,EAAE,+GAAqB;KACjC;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,8HAA0B;KACtC;CAEF,CAAC;AASF;IAAA;IACA,CAAC;IADY,oBAAoB;QARhC,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,6DAAY,CAAC,QAAQ,CAAC,aAAa,CAAC;aACrC;YACD,OAAO,EAAE;gBACP,6DAAY;aACb;SACF,CAAC;OACW,oBAAoB,CAChC;IAAD,2BAAC;CAAA;AADgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3LM;AACM;AACiB;AAC9D,gBAAgB;AACmD;AACT;AACG;AACH;AAC1D,UAAU;AACqC;AACoB;AACR;AACH;AACT;AACS;AACM;AACH;AACA;AACA;AACN;AACJ;AA6BjD;IAAA;IACA,CAAC;IADY,aAAa;QA3BzB,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,6DAAY;gBACZ,qEAAU;gBACV,qFAAoB;gBACpB,yFAAgB;gBAChB,iFAAc;gBACd,+EAAa;gBACb,sEAAU;gBACV,+EAAa;gBACb,qFAAe;gBACf,kFAAc;gBACd,kFAAc;gBACd,kFAAc;gBACd,4EAAY;aACb;YACD,YAAY,EAAE;gBACZ,0FAAkB;gBAClB,iFAAe;gBACf,oFAAgB;gBAChB,iFAAe;aAChB;YACD,OAAO,EAAE;gBACP,0FAAkB;aACnB;YACD,SAAS,EAAE,CAAC,yEAAc,CAAC;SAC5B,CAAC;OACW,aAAa,CACzB;IAAD,oBAAC;CAAA;AADyB;;;;;;;;;;;;;;;;;;ACjDe;AACJ;AAIrC;IADA;QAGU,yBAAoB,GAAG,IAAI,qDAAO,EAAW,CAAC;QAEtD,6BAAwB,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,CAAC;IAKtE,CAAC;IAHC,uCAAc,GAAd,UAAe,MAAe;QAC5B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IARU,cAAc;QAD1B,iEAAU,EAAE;OACA,cAAc,CAS1B;IAAD,qBAAC;CAAA;AAT0B;;;;;;;;ACL3B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,mUAAmU,YAAY,6LAA6L,YAAY,weAAwe,yF;;;;;;;;;;;;;;;;;;;;ACAh9B;AACT;AAOvC;IAEE,yBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAClC,CAAC;IAED,kCAAQ,GAAR;IACA,CAAC;IAED,gCAAM,GAAN;QACE,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;QAC1C,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,gCAAM,GAAN;QACE,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;IAC7B,CAAC;IAhBU,eAAe;QAL3B,gEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAG4B,uDAAM;OAFvB,eAAe,CAiB3B;IAAD,sBAAC;CAAA;AAjB2B;;;;;;;;ACR5B;AACA;;;AAGA;AACA,0CAA2C,0BAA0B,OAAO;;AAE5E;;;AAGA;AACA,2C;;;;;;;ACXA,glN;;;;;;;;;;;;;;;;;;;ACA0E;AAO1E;IACE;IAAe,CAAC;IAEhB,mCAAQ,GAAR,cAAY,CAAC;IAEb,sCAAW,GAAX,UAAY,OAAsB;QAChC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC1B,CAAC;IAPU,gBAAgB;QAL5B,gEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;;OACW,gBAAgB,CAS5B;IAAD,uBAAC;CAAA;AAT4B;;;;;;;;ACP7B;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,GAAG;;AAExE;;;AAGA;AACA,2C;;;;;;;ACXA,uEAAuE,miB;;;;;;;;;;;;;;;;;;;;;ACAvB;AACJ;AACiB;AAQ7D;IAEE,2BAAoB,cAA8B,EAAU,WAAwB;QAAhE,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;IACpF,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,gDAAoB,GAApB;QACE,IAAI,CAAC,WAAW,CAAC,mBAAmB,EAAE;aACnC,SAAS,CACR,UAAC,GAAG;YACF,oBAAoB;QACtB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC9C,CAAC,CACF;IACL,CAAC;IApBU,iBAAiB;QAN7B,gEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;YAGzB,SAAS,EAAE,CAAC,gFAAc,CAAC;SAC5B,CAAC;yCAGoC,gFAAc,EAAuB,kEAAW;OAFzE,iBAAiB,CAsB7B;IAAD,wBAAC;CAAA;AAtB6B;;;;;;;;;;;;;;;;;;;;ACVqC;AAQnE;IAOE,4BAAmB,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;QACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;IAC7C,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAOC;QANC,UAAU,CAAC;YACT,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,EAAC,UAAU,EAAE,CAAC,WAAW,CAAC,EAAC,CAAC,CAAC;YAC3D,UAAU,CAAC;gBACT,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,YAAY,EAAE,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,QAAQ,CAAC;YAClF,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,sCAAS,GAAT,UAAU,YAAY,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG;QAC/C,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QAC3C;YACE,IAAI,OAAO,CAAC;YACZ,OAAO,GAAG,IAAI,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC9C,SAAS,EAAE,SAAS;gBACpB,SAAS,EAAE,SAAS;gBACpB,OAAO,EAAE,YAAY,IAAI,EAAE;gBAC3B,WAAW,EAAE,GAAG,CAAC,EAAE;aACpB,CAAC,CAAC;YACH,OAAO,CAAC,IAAI,EAAE,CAAC;QACjB,CAAC;IACH,CAAC;IA9BmB;QAAnB,4DAAK,CAAC,WAAW,CAAC;;yDAA0B;IACtB;QAAtB,4DAAK,CAAC,cAAc,CAAC;kCAAsB,MAAM;4DAAC;IAC/B;QAAnB,4DAAK,CAAC,WAAW,CAAC;kCAAmB,MAAM;yDAAC;IAJlC,kBAAkB;QAJ9B,gEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;SACxB,CAAC;yCAS4B,yDAAU;OAP3B,kBAAkB,CAkC9B;IAAD,yBAAC;CAAA;AAlC8B;;;;;;;;;;;;;;;;;;ACRU;AACc;AAEvD,IAAM,UAAU,GAAG,EAElB,CAAC;AASF;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAR7B,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,6DAAY,CAAC,QAAQ,CAAC,UAAU,CAAC;aACpC;YACD,OAAO,EAAE;gBACL,6DAAY;aACf;SACJ,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACdS;AACM;AACmB;AACR;AACU;AACK;AACS;AACrC;AACe;AACA;AAuB1D;IAAA;IACA,CAAC;IADY,UAAU;QArBtB,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,6DAAY;gBACZ,+EAAiB;gBACjB,2DAAW;gBACX,mEAAmB;aACpB;YACD,YAAY,EAAE;gBACZ,yFAAiB;gBACjB,8FAAkB;gBAClB,uGAAqB;aACtB;YACD,OAAO,EAAE;gBACP,yFAAiB;aAClB;YACD,SAAS,EAAE;gBACT,kEAAW;gBACX,gFAAc;gBACd,gFAAc;aACf;SACF,CAAC;OACW,UAAU,CACtB;IAAD,iBAAC;CAAA;AADsB;;;;;;;;;;;;;;;;;;;;;;;AChCkB;AACgB;AACE;AAC5B;AAG/B;IAIE,qBAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAFnC,YAAO,GAAG,8EAAW,CAAC,UAAU,GAAG,OAAO,CAAC;IAGnD,CAAC;IAGD,yCAAmB,GAAnB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,8BAA8B,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAXU,WAAW;QADvB,iEAAU,EAAE;yCAKe,+EAAiB;OAJhC,WAAW,CAYvB;IAAD,kBAAC;CAAA;AAZuB;;;;;;;;ACNxB;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,8M;;;;;;;;;;;;;;;;;;;;;;;ACAgD;AACa;AAC7B;AACS;AAOzC;IA6BE,+BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QA3B3C,aAAQ,GAAG,IAAI,yDAAQ,CAAC,OAAO,CAAC,CAAC;QAEjC,qBAAgB,GAAG;YACxB,CAAC,MAAM,EAAE,YAAY,EAAE,WAAW,CAAC;SACpC,CAAC;QAGK,wBAAmB,GAAG;YAC3B,KAAK,EAAE,IAAI;YACX,MAAM,EAAE,GAAG;YACX,KAAK,EAAE;gBACL,KAAK,EAAE,kBAAkB;gBACzB,QAAQ,EAAE,0BAA0B;aACrC;YACD,MAAM,EAAE;gBACN,CAAC,EAAE,EAAC,IAAI,EAAE,YAAY,EAAC;gBACvB,CAAC,EAAE,EAAC,IAAI,EAAE,WAAW,EAAC,CAAC,+CAA+C;aACvE;YACD,IAAI,EAAE;gBACJ,CAAC,EAAE;oBACD,UAAU,EAAE,EAAC,KAAK,EAAE,SAAS,EAAC;oBAC9B,SAAS,EAAE,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,oBAAoB,EAAC,CAAC,gBAAgB;iBACzE;aACF;SACF,CAAC;IAIF,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACtB,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAChC,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC9B,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QACzB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACnB,KAAK,GAAG,EAAE,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,KAAK,GAAG,EAAE,CAAC;QACb,CAAC;QACD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;YAChC,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gBACX,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC;YAC/C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC;YACzC,CAAC;YACD,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACZ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,iDAAiB,GAAjB;QAAA,iBAiBC;QAhBC,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;aACrC,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,OAAO;gBAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACtD,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtH,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;wBAChD,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC;wBAC3D,KAAK,CAAC;oBACR,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;QACJ,CAAC,CACF;IACL,CAAC;IA1EU,qBAAqB;QALjC,gEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCA8BoC,gFAAc;OA7BvC,qBAAqB,CA4EjC;IAAD,4BAAC;CAAA;AA5EiC;;;;;;;;ACVlC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,qoBAAqoB,oBAAoB,8OAA8O,wjCAAwjC,aAAa,8+CAA8+C,iEAAiE,yBAAyB,kCAAkC,2BAA2B,kCAAkC,2BAA2B,wCAAwC,2BAA2B,wCAAwC,4FAA4F,8CAA8C,8DAA8D,8CAA8C,4EAA4E,4CAA4C,uGAAuG,6CAA6C,mDAAmD,uBAAuB,2BAA2B,wCAAwC,2BAA2B,kBAAkB,kHAAkH,kBAAkB,oGAAoG,kBAAkB,8GAA8G,qCAAqC,sEAAsE,uCAAuC,mIAAmI,oCAAoC,+FAA+F,6BAA6B,wxCAAwxC,0XAA0X,yBAAyB,6EAA6E,8BAA8B,6PAA6P,kBAAkB,uFAAuF,aAAa,4mDAA4mD,oF;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/9R;AACT;AACW;AAIE;AACY;AACH;AAC7B;AAOhC;IAOE,6BAAoB,eAAgC,EAAU,MAAc,EAAU,cAA8B,EAAU,cAA8B,EAAU,WAAwB;QAA1K,oBAAe,GAAf,eAAe,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QALvL,gBAAW,GAAc,EAAE,CAAC;QAEnC,sBAAiB,GAAW,CAAC,CAAC;QACvB,cAAS,GAAG,CAAC,CAAC;IAGrB,CAAC;IAED,sCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE;aACrC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,KAAK,CAAC;QACrC,CAAC,CACF,CAAC;QACJ,IAAI,CAAC,aAAa,EAAE,CAAC;IAEvB,CAAC;IAED,2CAAa,GAAb;QAAA,iBA2CC;QA1CC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC;aAC9C,SAAS,CACR,UAAC,GAAc;YACb,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACxB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,gDAAM,CAAC,GAAG,EAAE,UAAC,OAAgB;oBAC3B,IAAI,QAAkB,CAAC;oBACvB,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,WAAW,CAAC;yBACzD,SAAS,CACR,UAAC,GAAa;wBACZ,QAAQ,GAAG,GAAG,CAAC;wBACf,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC1B,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACnC,gDAAM,CAAC,OAAO,CAAC,WAAW,EAAE,UAAC,OAAO;gCAClC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;qCACxC,SAAS,CACR,UAAC,GAAY;oCACX,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCACpC,CAAC,CACF;4BACL,CAAC,CAAC,CAAC;wBACL,CAAC;wBAED,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;6BACxC,SAAS,CACR,UAAC,GAAG;4BACF,QAAQ,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;wBAC7B,CAAC,CACF;wBACH,OAAO,CAAC,YAAY,GAAG,QAAQ,CAAC;wBAChC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACjC,CAAC,CACF;gBACL,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,CACF;IACL,CAAC;IAED,gDAAkB,GAAlB,UAAmB,KAAU;QAC3B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IAED,0CAAY,GAAZ,UAAa,KAAU;IAEvB,CAAC;IAED,yCAAW,GAAX,UAAY,KAAU;IAEtB,CAAC;IAED,0CAAY,GAAZ,UAAa,MAAc,EAAE,OAAgB;QAC3C,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;YACjC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;YACxB,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC/B,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;QACzB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;YAC3B,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;YACvB,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC;YACnC,OAAO,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,gBAAgB,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAChC,CAAC;QAED,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,OAAO,CAAC;aAC7C,SAAS,CACR,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,kBAAkB;IAClB,wCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAGD,gDAAkB,GAAlB,UAAmB,OAAgB;QACjC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,OAAO,CAAC;aAC5C,SAAS,CACR,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CACF;IACL,CAAC;IAvHU,mBAAmB;QAL/B,gEAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAQqC,mFAAe,EAAkB,uDAAM,EAA0B,wEAAc,EAA0B,gFAAc,EAAuB,uEAAW;OAPnL,mBAAmB,CAyH/B;IAAD,0BAAC;CAAA;AAzH+B;;;;;;;;AChBhC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,81CAA81C,gBAAgB,sCAAsC,qBAAqB,oBAAoB,qBAAqB,+nLAA+nL,kFAAkF,OAAO,4SAA4S,eAAe,6BAA6B,gBAAgB,UAAU,gBAAgB,mrCAAmrC,0yB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvvR;AACM;AACO;AACT;AACY;AAEhC;AAKkB;AAOlD;IAgBE,gCAAoB,cAA8B,EAAU,EAAe,EAAU,eAAgC,EAAU,cAA8B,EAAU,WAAwB;QAA3K,mBAAc,GAAd,cAAc,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAdxL,gBAAW,GAAU,EAAE,CAAC;QAC/B,gBAAW,GAAY,KAAK,CAAC;QAC7B,cAAS,GAAY,KAAK,CAAC;QAEpB,iBAAY,GAAe,EAAE,CAAC;QAI9B,sBAAiB,GAAG,CAAC,CAAC;QACtB,gBAAW,GAAU,EAAE,CAAC;QACxB,YAAO,GAAY,KAAK,CAAC;IAKhC,CAAC;IAID,yCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,0CAAS,GAAT;QACE,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACrC,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACtB,UAAU,EAAE,CAAC,EAAE,CAAC;YAChB,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC,CAAC,CAAC;YACb,IAAI,EAAE,CAAC,IAAI,CAAC;YACZ,MAAM,EAAE,CAAC,KAAK,CAAC;YACf,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,CAAC,EAAE,CAAC;SAClB,CAAC,CAAC;IACL,CAAC;IACD,gDAAe,GAAf;QAAA,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,KAAK,CAAC;aACxC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QAC1B,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF,CAAC;IACN,CAAC;IAED,4CAAW,GAAX,UAAY,KAAU;QAAtB,iBA6BC;QA5BC,IAAI,CAAC,WAAW,GAAG,gDAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,IAAI;YACzD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;YAChC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;YAC7B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;YAC3B,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc;YAC/C,gBAAgB,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB;SACpD,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,EAAE,CAAC;QAClC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;iBAChD,SAAS,CACR,UAAC,GAAS;gBACR,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,GAAG,CAAC;gBAChC,KAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;oBAChC,IAAI,EAAE,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI;iBACrC,CAAC,CAAC;YACL,CAAC,EACD,UAAC,GAAG;YAEJ,CAAC,CACF;QACL,CAAC;IACH,CAAC;IAED,+CAAc,GAAd;QAAA,iBAuBC;QAtBC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,iBAAO,IAAM,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;aAChC,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,IAAI;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,EACD;YACE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,KAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;gBAChC,KAAK,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;aAEhC,CAAC;QACJ,CAAC,CACF;IACL,CAAC;IAGD,8CAAa,GAAb,UAAc,KAAK;QACjB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,2CAAU,GAAV,UAAW,OAAY;QACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClC,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAKD,gDAAe,GAAf,UAAgB,KAAU,EAAE,KAAK;QAC/B,IAAI,MAAM,GAAG,gDAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,IAAI;YAClD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC3C,CAAC,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;QACjC,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,4CAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACjC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAKD,4CAAW,GAAX;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,gDAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,OAAO;YAC/B,KAAK,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;YAChC,KAAK,EAAE,KAAK;SACb,CAAC;IACJ,CAAC;IAED,wDAAuB,GAAvB;QAAA,iBAcC;QAbC,IAAI,YAAY,GAAG,iDAAO,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;YAChC,WAAW,EAAE,YAAY;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;SACrC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;aAC/D,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CACF;IACL,CAAC;IA/KU,sBAAsB;QALlC,gEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAiBoC,wEAAc,EAAc,2DAAW,EAA2B,mFAAe,EAA0B,gFAAc,EAAuB,uEAAW;OAhBpL,sBAAsB,CAgLlC;IAAD,6BAAC;CAAA;AAhLkC;;;;;;;;AClBnC;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,wBAAwB,KAAK,kBAAkB,yBAAyB,GAAG;;AAEhJ;;;AAGA;AACA,2C;;;;;;;ACXA,2FAA2F,yHAAyH,kCAAkC,yCAAyC,oCAAoC,8hJAA8hJ,kBAAkB,gGAAgG,kBAAkB,kGAAkG,kBAAkB,mjCAAmjC,gHAAgH,OAAO,iHAAiH,kBAAkB,6EAA6E,aAAa,29FAA29F,6FAA6F,OAAO,8bAA8b,eAAe,+BAA+B,gBAAgB,UAAU,gBAAgB,qSAAqS,6FAA6F,mEAAmE,oXAAoX,eAAe,+BAA+B,gBAAgB,UAAU,gBAAgB,qkBAAqkB,of;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAl+W;AAC8B;AACrB;AACH;AAGR;AACe;AACO;AACG;AAChC;AACoB;AAOpD;IAqBE,8BAAoB,WAAwB,EAAU,eAAgC,EAAU,UAAsB,EAAU,cAA8B,EAAU,EAAe,EAAU,cAA8B,EAAU,KAAqB,EAAU,MAAc;QAAlQ,gBAAW,GAAX,WAAW,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAlB/Q,gBAAW,GAAU,EAAE,CAAC;QACxB,uBAAkB,GAAU,EAAE,CAAC;QAC/B,sBAAiB,GAAW,CAAC,CAAC;QAC9B,mBAAc,GAAU,EAAE,CAAC;QAG3B,uBAAkB,GAAU,EAAE,CAAC;QAM/B,gBAAW,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QACjC,aAAQ,GAAa,IAAI,yDAAQ,CAAC,OAAO,CAAC,CAAC;QAC3C,kBAAa,GAAW,KAAK,CAAC;QAC9B,aAAQ,GAAY,KAAK,CAAC;IAKjC,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YACpD,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,EAAE,CAAC;qBACnD,SAAS,CACR,UAAC,GAAG;oBACF,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;oBACnB,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,OAAO,CAAC,WAAW,CAAC;oBAC/C,KAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC,EACD,UAAC,GAAG;gBAEJ,CAAC,CACF;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAS,GAAT;QAAA,iBAgDC;QA/CC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;aAC9D,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,OAAO,CAAC,YAAY,GAAG,GAAG,CAAC;YAChC,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;YAC3C,IAAI,oBAAoB,GAAG,CAAC,CAAC;YAC7B,gDAAM,CAAC,KAAI,CAAC,OAAO,CAAC,WAAW,EAAE,UAAC,IAAI;gBACpC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC;qBACrC,SAAS,CACR,UAAC,GAAG;oBACF,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAClD,CAAC,CACF;gBACH,oBAAoB,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACrC,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC3B,KAAK,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrB,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC3B,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC3B,IAAI,EAAE,CAAC,EAAE,CAAC;gBACV,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACnB,cAAc,EAAE,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBACvC,gBAAgB,EAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBAC3C,gBAAgB,EAAE,CAAC,KAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;gBACpD,UAAU,EAAE,CAAC,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;gBACxC,MAAM,EAAE,CAAC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAChC,KAAK,EAAE,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAC9B,QAAQ,EAAE,CAAC,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;gBACpC,oBAAoB,EAAE,CAAC,KAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;gBAC5D,SAAS,EAAE,CAAC,KAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;gBACtC,qBAAqB,EAAE,oBAAoB;aAC5C,CAAC,CAAC;YAEH,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;iBACtC,SAAS,CACR,UAAC,GAAG;gBACF,KAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;oBAChC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC;iBAClB,CAAC,CAAC;YACL,CAAC,CACF;YACH,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CACF;IAEL,CAAC;IAED,oDAAqB,GAArB,UAAsB,KAAU;QAAhC,iBAcC;QAbC,IAAI,IAAI,GAAG;YACT,IAAI,EAAE,KAAK,CAAC,KAAK;SAClB;QAED,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC;aACnC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAChC,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,6CAAc,GAAd;QAAA,iBAeC;QAdC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;aAChC,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,IAAI;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,CACF;IACL,CAAC;IAED,yCAAU,GAAV;QACE,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,4CAAa,GAAb,UAAc,KAAK;QACjB,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,8CAAe,GAAf,UAAgB,KAAU,EAAE,KAAK,EAAE,IAAI;QACrC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACjB,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC;QAC/D,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,oDAAqB,GAArB;QAAA,iBAqBC;QApBC,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,GAAG;YACL,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU;YACnD,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK;YACzC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ;YAC/C,WAAW,EAAE,IAAI,CAAC,cAAc;YAChC,qBAAqB,EAAE,IAAI,CAAC,OAAO,CAAC,qBAAqB;YACzD,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB;QAED,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,IAAI,CAAC;aAC/C,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,2BAA2B,EAAE,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1E,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,CACF;IACL,CAAC;IAGD,2CAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,MAAM,CAAC,CAAC,CAAC;YACjC,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC;YACjE,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;gBAChC,SAAS,EAAE,WAAW;aACvB,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,+CAAgB,GAAhB,UAAiB,KAAU;QACzB,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;YAChC,qBAAqB,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;YACzC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK;SACzD,CAAC,CAAC;IACL,CAAC;IAED,0CAAW,GAAX,UAAY,KAAU;QACpB,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;YAChC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK;SACpE,CAAC,CAAC;IACL,CAAC;IAED,6CAAc,GAAd;QAAA,iBAYC;QAXC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,gDAAM,CAAC,IAAI,CAAC,cAAc,EAAE,UAAC,IAAI;YAC/B,IAAI,OAAO,GAAG,qDAAW,CAAC,KAAI,CAAC,WAAW,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;YACzD,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;YAChC,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,KAAK;SAClB,CAAC,CAAC;IACL,CAAC;IAjN8B;QAA9B,gEAAS,CAAC,kBAAkB,CAAC;kCAAmB,yDAAU;kEAAC;IADjD,oBAAoB;QALhC,gEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAsBiC,uEAAW,EAA2B,mFAAe,EAAsB,yDAAU,EAA0B,gFAAc,EAAc,2DAAW,EAA0B,wEAAc,EAAiB,+DAAc,EAAkB,uDAAM;OArB3Q,oBAAoB,CAmNhC;IAAD,2BAAC;CAAA;AAnNgC;;;;;;;;AClBjC;AACA;;;AAGA;AACA,uCAAwC,2BAA2B,oBAAoB,uBAAuB,wBAAwB,GAAG,oBAAoB,2BAA2B,oBAAoB,GAAG,mBAAmB,qBAAqB,sBAAsB,iBAAiB,kBAAkB,GAAG,iBAAiB,qCAAqC,GAAG,kBAAkB,qBAAqB,GAAG;;AAEtZ;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,iBAAiB,k6BAAk6B,YAAY,oKAAoK,gBAAgB,+CAA+C,wHAAwH,kBAAkB,YAAY,cAAc,iBAAiB,+GAA+G,kBAAkB,gBAAgB,cAAc,gBAAgB,8FAA8F,kCAAkC,mDAAmD,kCAAkC,gDAAgD,8BAA8B,yFAAyF,wCAAwC,6CAA6C,+BAA+B,iDAAiD,8BAA8B,0LAA0L,+DAA+D,gBAAgB,uJAAuJ,wBAAwB,WAAW,WAAW,aAAa,4BAA4B,gBAAgB,8EAA8E,yCAAyC,6BAA6B,2GAA2G,oKAAoK,2KAA2K,wBAAwB,WAAW,WAAW,aAAa,4BAA4B,gBAAgB,gFAAgF,+MAA+M,qEAAqE,wCAAwC,kHAAkH,mXAAmX,cAAc,iBAAiB,0EAA0E,YAAY,6SAA6S,uEAAuE,sKAAsK,kIAAkI,iBAAiB,sCAAsC,iBAAiB,kCAAkC,gBAAgB,wIAAwI,WAAW,gEAAgE,0BAA0B,WAAW,UAAU,gCAAgC,yRAAyR,mJAAmJ,0BAA0B,UAAU,sCAAsC,iBAAiB,2IAA2I,gMAAgM,iBAAiB,gHAAgH,YAAY,uVAAuV,uIAAuI,0BAA0B,wCAAwC,oBAAoB,kdAAkd,YAAY,mBAAmB,0KAA0K,YAAY,mBAAmB,+CAA+C,iBAAiB,mXAAmX,YAAY,mBAAmB,+KAA+K,YAAY,mBAAmB,gDAAgD,oCAAoC,4VAA4V,YAAY,qBAAqB,8JAA8J,sBAAsB,YAAY,gDAAgD,cAAc,0XAA0X,YAAY,oBAAoB,6KAA6K,YAAY,4EAA4E,MAAM,mBAAmB,qrDAAqrD,iEAAiE,gBAAgB,4OAA4O,upCAAupC,eAAe,0DAA0D,6BAA6B,uWAAuW,wCAAwC,oJAAoJ,6BAA6B,wEAAwE,6BAA6B,kFAAkF,sBAAsB,mfAAmf,wKAAwK,gG;;;;;;;;;;;;;;;;;;;;;;;;;;;ACU3tc;AAE2B;AACH;AAGiB;AACH;AACA;AAC7B;AACS;AAWzC;IAeE,8BAAoB,cAA8B,EAAU,cAA8B,EAAU,eAAgC,EAAU,cAA8B,EAAU,KAAqB;QAAvL,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAgB;QARnM,SAAI,GAAG,EAAE,CAAC;QAGX,gBAAW,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QACjC,aAAQ,GAAa,IAAI,yDAAQ,CAAC,OAAO,CAAC,CAAC;QAE3C,kBAAa,GAAY,KAAK,CAAC;IAGtC,CAAC;IAED,0CAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC;QACzD,CAAC;IACH,CAAC;IAED,uCAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YACpD,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACxB,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACpC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,WAAW,CAAC;gBAChC,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC;gBAC9C,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,OAAO,CAAC,UAAU,GAAG,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;gBAClE,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACtE,CAAC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,0CAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,iDAAkB,GAAlB;QACE,4BAA4B;QAC5B,wBAAwB;QACxB,EAAE;QACF,IAAI;IACN,CAAC;IAED,8CAAe,GAAf;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IAED,0CAAW,GAAX;QAAA,iBA6BC;QA5BC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;YACnD,UAAU,EAAE,UAAC,MAAM;gBACjB,IAAI,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;gBAClD,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBACrC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;gBAC9C,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACvB,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;oBACtC,IAAI,IAAI,GAAG;wBACT,GAAG,EAAE,GAAG;wBACR,KAAK,EAAE,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,GAAG,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC;qBAC9F;oBAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAElB,KAAI,CAAC,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC;yBACtC,SAAS,CACR,UAAC,GAAG;wBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC,EACD,UAAC,GAAG;wBACF,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;oBACrC,CAAC,CACF;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,GAAG,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,GAAG,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;gBAC5G,CAAC;YACH,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAKD,6CAAc,GAAd,UAAe,EAAU;QAAzB,iBAoDC;QAnDC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;aAC9C,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,KAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;YACvB,KAAI,CAAC,OAAO,CAAC,WAAW,GAAG,EAAE,CAAC;YAC9B,mBAAmB;YACnB,gDAAM,CAAC,KAAI,CAAC,OAAO,CAAC,WAAW,EAAE,UAAC,IAAI;gBACpC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC;qBACrC,SAAS,CACR,UAAC,GAAG;oBACF,GAAG,CAAC,iBAAiB,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;oBAC1E,KAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACnC,KAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAI,CAAC,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,iBAAiB,CAAC,CAAC;oBACjE,KAAI,CAAC,OAAO,CAAC,UAAU,GAAG,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC;gBAC/C,CAAC,EAAE,UAAC,GAAG;gBAEP,CAAC,EAAE;oBACD,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBAClD,gDAAM,CAAC,KAAI,CAAC,OAAO,CAAC,qBAAqB,EAAE,UAAC,IAAI;4BAC9C,KAAI,CAAC,OAAO,CAAC,UAAU,GAAG,KAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACrE,CAAC,CAAC,CAAC;oBACL,CAAC;oBACD,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;wBAClC,KAAI,CAAC,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;oBAC9B,CAAC;oBACD,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,OAAO,CAAC,UAAU,GAAG,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;oBAClE,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACtE,CAAC,CACF;YACL,CAAC,CAAC,CAAC;YAGH,mBAAmB;YACnB,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,KAAI,CAAC,OAAO,CAAC,WAAW,CAAC;iBAC9D,SAAS,CACR,UAAC,GAAG;gBACF,KAAI,CAAC,OAAO,CAAC,YAAY,GAAG,GAAG,CAAC;YAClC,CAAC,EACD,UAAC,GAAG;YAEJ,CAAC,EACD;gBACE,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,CAAC,CACF;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF;IACL,CAAC;IAED,8CAAe,GAAf,UAAgB,CAAC,EAAE,qBAAqB;QAEtC,IAAI,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,EACvB,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC;QAElF,IAAI,GAAG,GAAG,qBAAqB,IAAI,KAAK,CAAC;QAEzC,qBAAqB;QACrB,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QAED,6BAA6B;QAC7B,KAAK,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAEnM,4BAA4B;QAC5B,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAE9F,8BAA8B;QAC9B,MAAM,GAAG,CAAC,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,cAAc,EAAE,cAAc,EAAE,qBAAqB,EAAE,eAAe,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,EAAE,gBAAgB,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;QAEzV,gEAAgE;QAChE,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QACtB,MAAM,GAAG,EAAE,CAAC;QACZ,OAAO,KAAK,GAAG,CAAC,EAAE,CAAC;YACjB,GAAG,GAAG,KAAK,CAAC;YACZ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACnE,CAAC;QAED,wFAAwF;QACxF,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;QAC1B,EAAE,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QACD,0CAA0C;QAC1C,KAAK,GAAG,EAAE,CAAC;QACX,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/B,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,mDAAmD;gBACnD,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAErD,iEAAiE;gBACjE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClB,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBAChB,CAAC;gBAED,+DAA+D;gBAC/D,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;gBAED,wCAAwC;gBACxC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;gBAED,wCAAwC;gBACxC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC3B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;gBAED,sDAAsD;gBACtD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,2EAA2E;oBAC3E,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC;wBAC/B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClB,CAAC;gBACH,CAAC;gBAED,4CAA4C;gBAC5C,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5B,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC;QACH,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IA9NwB;QAAxB,gEAAS,CAAC,YAAY,CAAC;kCAAa,yDAAU;4DAAC;IACvC;QAAR,4DAAK,EAAE;;6DAAkB;IAHf,oBAAoB;QALhC,gEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAgBoC,gFAAc,EAA0B,gFAAc,EAA2B,mFAAe,EAA0B,wEAAc,EAAiB,+DAAc;OAfhM,oBAAoB,CAiOhC;IAAD,2BAAC;CAAA;AAjOgC;;;;;;;;AC/BjC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,yYAAyY,8BAA8B,yfAAyf,qCAAqC,6dAA6d,oBAAoB,gPAAgP,wjCAAwjC,aAAa,++BAA++B,opBAAopB,kEAAkE,yBAAyB,kCAAkC,2BAA2B,kCAAkC,2BAA2B,wCAAwC,2BAA2B,wCAAwC,4FAA4F,8CAA8C,8DAA8D,8CAA8C,4EAA4E,4CAA4C,uGAAuG,6CAA6C,mDAAmD,uBAAuB,2BAA2B,wCAAwC,2BAA2B,kBAAkB,kHAAkH,kBAAkB,oGAAoG,kBAAkB,8GAA8G,qCAAqC,4IAA4I,oCAAoC,+FAA+F,6BAA6B,w7CAAw7C,0XAA0X,yBAAyB,6EAA6E,8BAA8B,6PAA6P,kBAAkB,uFAAuF,aAAa,4mDAA4mD,oF;;;;;;;;;;;;;;;;;;;;;;;;;;ACAz9T;AAES;AACE;AAElB;AAE6B;AACT;AACY;AAOhE;IAcE,gCAAoB,eAAgC,EAAU,MAAc,EAAU,cAA8B,EAAU,cAA8B,EAAU,WAAwB;QAA1K,oBAAe,GAAf,eAAe,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAbvL,gBAAW,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QACjC,gBAAW,GAAc,EAAE,CAAC;QAC5B,eAAU,GAAG,UAAU,CAAC;QAIxB,mBAAc,GAAY,KAAK,CAAC;QAChC,mBAAc,GAAY,KAAK,CAAC;QAChC,2BAAsB,GAAY,KAAK,CAAC;QAExC,cAAS,GAAG,CAAC,CAAC;QACrB,uBAAkB,GAAW,CAAC,CAAC;IAG/B,CAAC;IAED,yCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE;aACzC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,KAAK,CAAC;QACtC,CAAC,CACF;QACH,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,6BAA6B;IAC/B,CAAC;IAED,uBAAuB;IACvB,mDAAkB,GAAlB;QAAA,iBAWC;QAVC,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE;aAC/B,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gBACf,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,CAAC;QACH,CAAC,CACF;IACL,CAAC;IAED,uBAAuB;IACvB,mDAAkB,GAAlB;QAAA,iBAOC;QANC,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;aACpC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,yBAAyB,EAAE,CAAC;QACnC,CAAC,CACF;IACL,CAAC;IAED,mDAAkB,GAAlB;QAAA,iBA6CC;QA5CC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC;aACnD,SAAS,CACR,UAAC,GAAc;YACb,gDAAM,CAAC,GAAG,EAAE,UAAC,OAAgB;gBAC3B,IAAI,QAAkB,CAAC;gBACvB,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,WAAW,CAAC;qBACzD,SAAS,CACR,UAAC,GAAa;oBACZ,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAClB,QAAQ,GAAG,GAAG,CAAC;wBACf,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC1B,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACnC,gDAAM,CAAC,OAAO,CAAC,WAAW,EAAE,UAAC,OAAO;gCAClC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;qCACxC,SAAS,CACR,UAAC,GAAY;oCACX,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCACpC,CAAC,CACF;4BACL,CAAC,CAAC,CAAC;wBACL,CAAC;wBACD,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;6BACxC,SAAS,CACR,UAAC,GAAG;4BACF,QAAQ,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;wBAC7B,CAAC,CACF;wBACH,OAAO,CAAC,YAAY,GAAG,QAAQ,CAAC;wBAChC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACjC,CAAC;gBACH,CAAC,CACF;YACL,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,EACD;YACE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACjD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC,CACF;IACL,CAAC;IAED,0DAAyB,GAAzB;QAAA,iBAUC;QATC,IAAI,CAAC,cAAc,CAAC,yBAAyB,EAAE;aAC5C,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACzC,CAAC,CACF;IACL,CAAC;IAED,kDAAiB,GAAjB,UAAkB,OAAgB;QAChC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,OAAO,CAAC;aAC3C,SAAS,CACR,UAAC,GAAG;QACJ,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,6CAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,4CAAW,GAAX,UAAY,KAAU;QACpB,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,MAAM,CAAC;QACT,CAAC;QACD,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACjC,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC;YAClC,gDAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,IAAI;gBAC5B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC9B,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,eAAe,CAAC,CAAC,CAAC;YAC5C,gDAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,IAAI;gBAC5B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC9B,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,CAAC,CAAC;YACnC,gDAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,IAAI;gBAC5B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC9B,CAAC;IACH,CAAC;IAED,6CAAY,GAAZ,UAAa,MAAc,EAAE,OAAgB;QAC3C,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;YACjC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;YACxB,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC/B,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;QACzB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;YAC3B,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;YACvB,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC;YACnC,OAAO,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,gBAAgB,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAChC,CAAC;QAED,OAAO,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,OAAO,CAAC;aAC7C,SAAS,CACR,UAAC,GAAG;QACJ,CAAC,CACF;IACL,CAAC;IAED,mDAAkB,GAAlB,UAAmB,OAAgB;QACjC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,OAAO,CAAC;aAC5C,SAAS,CACR,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CACF;IACL,CAAC;IAED,mDAAkB,GAAlB,UAAmB,KAAU;QAA7B,iBAaC;QAZC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC;QACT,CAAC;QACD,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,gDAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,IAAI;YAC5B,EAAE,CAAC,CAAC,mDAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC/C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAED,+CAAc,GAAd;QAAA,iBAkBC;QAjBC,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;YAC9B,qBAAqB,EAAE,IAAI,CAAC,UAAU;SACvC;QAED,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC;aACrC,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAC5B,CAAC;QACH,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,uCAAM,GAAN,UAAO,UAAU;QACf,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,mDAAkB,GAAlB,UAAmB,MAAM;QAAzB,iBAmBC;QAlBC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC;iBAC/C,SAAS,CACR,UAAC,GAAG;gBACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,WAAW,GAAG,mDAAS,CAAC,KAAI,CAAC,WAAW,EAAE,qDAAW,CAAC,KAAI,CAAC,WAAW,EAAE;wBAC3E,GAAG,EAAE,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC;qBAC5B,CAAC,CAAC,CAAC;oBACJ,KAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;gBACtC,CAAC;YACH,CAAC,EACD,UAAC,GAAG;YACJ,CAAC,CACF;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACtC,CAAC;IACH,CAAC;IAED,kBAAkB;IAClB,2CAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAlQU,sBAAsB;QALlC,gEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAeqC,mFAAe,EAAkB,uDAAM,EAA0B,wEAAc,EAA0B,gFAAc,EAAuB,uEAAW;OAdnL,sBAAsB,CAoQlC;IAAD,6BAAC;CAAA;AApQkC;;;;;;;;;;;;;;;;;;AChBM;AACc;AAEvD,IAAM,aAAa,GAAG,EACrB,CAAC;AASF;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QARhC,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,6DAAY,CAAC,QAAQ,CAAC,aAAa,CAAC;aACvC;YACD,OAAO,EAAE;gBACL,6DAAY;aACf;SACJ,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;ACbjC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,mQAAmQ,qCAAqC,sjBAAsjB,+sBAA+sB,kCAAkC,2BAA2B,kCAAkC,2BAA2B,wCAAwC,2BAA2B,wCAAwC,8FAA8F,8CAA8C,8DAA8D,8CAA8C,4EAA4E,4CAA4C,yGAAyG,6CAA6C,mDAAmD,uBAAuB,2BAA2B,wCAAwC,2BAA2B,kBAAkB,kHAAkH,kBAAkB,oGAAoG,kBAAkB,8GAA8G,qCAAqC,sEAAsE,uCAAuC,mIAAmI,oCAAoC,+FAA+F,6BAA6B,4vDAA4vD,0XAA0X,yBAAyB,6EAA6E,8BAA8B,6PAA6P,kBAAkB,uFAAuF,aAAa,kmEAAkmE,oBAAoB,cAAc,sTAAsT,wBAAwB,UAAU,uBAAuB,0P;;;;;;;;;;;;;;;;;;;;;;;;;ACA/xQ;AAEE;AAGE;AACY;AACH;AAC7B;AAOhC;IASE,gCAAoB,eAAgC,EAAU,cAA8B,EAAU,cAA8B,EAAU,WAAwB;QAAlJ,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAP/J,kBAAa,GAAU,EAAE,CAAC;QAC1B,gBAAW,GAAc,EAAE,CAAC;QAI5B,2BAAsB,GAAY,KAAK,CAAC;IAG/C,CAAC;IAED,yCAAQ,GAAR;IACA,CAAC;IAGD,8CAAa,GAAb,UAAc,KAAU;QACtB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,gCAAgC,EAAE,CAAC;IAC1C,CAAC;IAGD,iEAAgC,GAAhC;QAAA,iBAOC;QANC,IAAI,CAAC,cAAc,CAAC,6BAA6B,CAAC,IAAI,CAAC,UAAU,CAAC;aAC/D,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QAC3B,CAAC,CACF;IACL,CAAC;IAED,iDAAgB,GAAhB,UAAiB,IAAI;QAArB,iBA+CC;QA9CC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,EAAE,CAAC;aAC3C,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,OAAgB;gBAC3B,IAAI,QAAkB,CAAC;gBAEvB,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC;oBACxB,OAAO,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;gBAC7B,CAAC;gBAED,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,WAAW,CAAC;qBACzD,SAAS,CACR,UAAC,GAAa;oBACZ,QAAQ,GAAG,GAAG,CAAC;oBACf,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACvB,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC1B,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACnC,gDAAM,CAAC,OAAO,CAAC,WAAW,EAAE,UAAC,OAAO;gCAClC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;qCACxC,SAAS,CACR,UAAC,GAAY;oCACX,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCACpC,CAAC,CACF;4BACL,CAAC,CAAC;wBACJ,CAAC;wBAED,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;6BACxC,SAAS,CACR,UAAC,GAAG;4BACF,QAAQ,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;wBAC7B,CAAC,CACF;wBACH,OAAO,CAAC,YAAY,GAAG,QAAQ,CAAC;wBAChC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACjC,CAAC;gBACH,CAAC,CACF;YACL,CAAC,CAAC;QACJ,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QAC3C,CAAC,CACF;IACL,CAAC;IAGD,6CAAY,GAAZ,UAAa,MAAc,EAAE,OAAgB;QAC3C,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;YACjC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;YACxB,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAC/B,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;QACzB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;YAC3B,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;YACvB,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC;YACnC,OAAO,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,gBAAgB,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAChC,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;YAChC,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;QAC1B,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,OAAO,CAAC;aAC7C,SAAS,CACR,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,mDAAkB,GAAlB,UAAmB,OAAgB;QACjC,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,OAAO,CAAC;aAC5C,SAAS,CACR,UAAC,GAAG;YACF,oBAAoB;QACtB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CACF;IACL,CAAC;IAED,+CAAc,GAAd,UAAe,OAAgB;QAA/B,iBAkBC;QAjBC,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;YAC9B,qBAAqB,EAAE,IAAI,CAAC,UAAU;SACvC;QAED,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC;aACrC,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,KAAI,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,OAAO,CAAC,WAAW,EAAC,CAAC,CAAC;YACpD,CAAC;QACH,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,uCAAM,GAAN,UAAO,OAAgB;QACrB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;IAC5B,CAAC;IAGD,mDAAkB,GAAlB,UAAmB,MAAM;QAAzB,iBAoBC;QAnBC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC;iBAC/C,SAAS,CACR,UAAC,GAAG;gBACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,WAAW,GAAG,mDAAS,CAAC,KAAI,CAAC,WAAW,EAAE,qDAAW,CAAC,KAAI,CAAC,WAAW,EAAE;wBAC3E,GAAG,EAAE,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC;qBAC5B,CAAC,CAAC,CAAC;oBACJ,KAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;gBACtC,CAAC;YACH,CAAC,EACD,UAAC,GAAG;YAEJ,CAAC,CACF;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACtC,CAAC;IACH,CAAC;IAtKU,sBAAsB;QALlC,gEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAUqC,mFAAe,EAA0B,wEAAc,EAA0B,gFAAc,EAAuB,uEAAW;OAT3J,sBAAsB,CAyKlC;IAAD,6BAAC;CAAA;AAzKkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfI;AACM;AAEM;AACN;AACmB;AACF;AACU;AACS;AAChC;AACgC;AACvB;AACT;AAC0B;AACA;AACd;AACH;AACyB;AA8BnF;IAAA;IACA,CAAC;IADY,aAAa;QA5BzB,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,6DAAY;gBACZ,mEAAmB;gBACnB,6DAAY;gBACZ,2DAAW;gBACX,mEAAmB;gBACnB,qFAAoB;aACrB;YACD,YAAY,EAAE;gBACZ,+FAAmB;gBACnB,wGAAsB;gBACtB,wGAAsB;gBACtB,mGAAoB;gBACpB,mGAAoB;gBACpB,yGAAsB;aACvB;YACD,OAAO,EAAE;gBACP,mGAAoB;aACrB;YACD,SAAS,EAAE;gBACT,wEAAc;gBACd,iFAAc;gBACd,wEAAW;gBACX,oFAAe;gBACf,iFAAc;aACf;SACF,CAAC;OACW,aAAa,CACzB;IAAD,oBAAC;CAAA;AADyB;;;;;;;;;;;;;;;;;;;;;;;AC/Ce;AACgB;AACE;AAC5B;AAG/B;IAIE,wBAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAFnC,eAAU,GAAG,8EAAW,CAAC,UAAU,GAAG,UAAU,CAAC;IAGzD,CAAC;IAED,sCAAa,GAAb,UAAc,OAAO;QACnB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC/D,CAAC;IAED,+CAAsB,GAAtB,UAAuB,EAAE;QACvB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,iBAAiB,GAAG,EAAE,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,sDAA6B,GAA7B,UAA8B,KAAK;QACjC,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,4BAA4B,GAAG,KAAK,CAAC;QACjE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,wCAAe,GAAf,UAAgB,IAAI;QAClB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,sCAAa,GAAb,UAAc,SAAS;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,WAAW,GAAG,SAAS,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,yCAAgB,GAAhB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,qCAAY,GAAZ,UAAa,IAAS;QACpB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,oCAAW,GAAX,UAAY,IAAS;QACnB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,uCAAc,GAAd,UAAe,IAAY,EAAE,EAAU;QACrC,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,MAAM,GAAG,EAAE,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,yCAAgB,GAAhB,UAAiB,IAAS;QACxB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,0CAAiB,GAAjB,UAAkB,IAAS;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,0CAAiB,GAAjB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,mDAA0B,GAA1B;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,uBAAuB,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,2CAAkB,GAAlB,UAAmB,SAAiB;QAClC,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,8BAA8B,GAAG,SAAS,CAAC;QACvE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,qCAAY,GAAZ;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,eAAe,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,4CAAmB,GAAnB,UAAoB,IAAS;QAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,eAAe,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3D,CAAC;IAED,2CAA2C;IAC3C,iCAAQ,GAAR,UAAS,IAAS;QAChB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,oBAAoB,CAAC;QACjD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,kDAAyB,GAAzB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,uBAAuB,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,uCAAc,GAAd,UAAe,IAAS;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,yBAAyB,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,iDAAwB,GAAxB,UAAyB,IAAS;QAChC,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,qBAAqB,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,sCAAa,GAAb,UAAc,OAAO;QACnB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC/D,CAAC;IAED,2CAAkB,GAAlB,UAAmB,OAAO;QACxB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,uBAAuB,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC/D,CAAC;IAED,2CAAkB,GAAlB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,uBAAuB,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,2CAAkB,GAAlB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,yCAAgB,GAAhB,UAAiB,IAAS;QACxB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAnIU,cAAc;QAD1B,iEAAU,EAAE;yCAKe,+EAAiB;OAJhC,cAAc,CAoI1B;IAAD,qBAAC;CAAA;AApI0B;;;;;;;;ACN3B;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,wBAAwB,KAAK;;AAElG;;;AAGA;AACA,2C;;;;;;;ACXA,wmBAAwmB,4NAA4N,mCAAmC,uBAAuB,gBAAgB,yBAAyB,gBAAgB,yBAAyB,oBAAoB,yBAAyB,eAAe,yBAAyB,uBAAuB,q1B;;;;;;;;;;;;;;;;;;;;ACA/9B;AACzC;AAQpD;IAIE,6BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAHzC,aAAQ,GAAc,EAAE,CAAC;QACxB,iBAAY,GAA0B,IAAI,2DAAY,EAAW,CAAC;QAClE,iBAAY,GAAyB,IAAI,2DAAY,EAAU,CAAC;IACpB,CAAC;IAEvD,sCAAQ,GAAR;IACA,CAAC;IAGD,0CAAY,GAAZ,UAAa,EAAE,EAAE,MAAM;QAAvB,iBAmBC;QAlBC,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,EAAE;YACN,MAAM,EAAE,CAAC,MAAM;SAChB,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC;aAChC,SAAS,CACV,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gBACf,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC;QACH,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACvC,CAAC,CACA;IACL,CAAC;IAGD,yCAAW,GAAX,UAAY,EAAE;QACZ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAjCQ;QAAR,4DAAK,EAAE;;yDAA0B;IACxB;QAAT,6DAAM,EAAE;kCAAe,2DAAY;6DAAwC;IAClE;QAAT,6DAAM,EAAE;kCAAe,2DAAY;6DAAsC;IAH/D,mBAAmB;QAL/B,gEAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAKoC,wEAAc;OAJvC,mBAAmB,CAsC/B;IAAD,0BAAC;CAAA;AAtC+B;;;;;;;;ACThC;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,wBAAwB,KAAK,kBAAkB,yBAAyB,GAAG;;AAEhJ;;;AAGA;AACA,2C;;;;;;;ACXA,o2BAAo2B,kvG;;;;;;;;;;;;;;;;;;;;;ACAlzB;AACkB;AAEhB;AAOpD;IAsBE,gCAAoB,EAAe,EAAU,cAA8B;QAAvD,OAAE,GAAF,EAAE,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAnBpE,aAAQ,GAAc,EAAE,CAAC;QAEhC,gBAAW,GAAY,KAAK,CAAC;QAC7B,cAAS,GAAY,KAAK,CAAC;QAC3B,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAY,KAAK,CAAC;QAE5B,kBAAa,GAAY,KAAK,CAAC;QAC/B,SAAI,GAAQ,EAAE,CAAC;QACf,SAAI,GAAW,MAAM,CAAC;QACtB,UAAK,GAAQ,EAAE,CAAC;QAChB,UAAK,GAAQ,EAAE,CAAC;QAChB,SAAI,GAAQ,EAAE,CAAC;QACf,UAAK,GAAQ,EAAE,CAAC;QAChB,UAAK,GAAQ,EAAE,CAAC;QAChB,SAAI,GAAQ,EAAE,CAAC;QACf,UAAK,GAAQ,EAAE,CAAC;QAChB,QAAG,GAAK,EAAE,CAAC;IAEoE,CAAC;IAEhF,yCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,aAAa;IACb,CAAC;IAGF,0CAAS,GAAT;QAEG,IAAI,GAAG,GAAG,uDAAuD,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IACD,yCAAQ,GAAR;QAEE,IAAI,GAAG,GAAG,mDAAmD;QAC9D,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IACD,0CAAS,GAAT;QAEA,qBAAqB;QACnB,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACrB,sBAAsB;QACtB,+BAA+B;QAC/B,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC;IACD,wCAAO,GAAP;IAGA,CAAC;IACH,oCAAG,GAAH;QAEA,mBAAmB;QACnB,uBAAuB;QACvB,KAAK,CAAC,eAAe,CAAC,CAAC;IACvB,CAAC;IAGD,8CAAa,GAAb,UAAc,GAAG;QAEjB,aAAa;QACb,IAAI,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE3B,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EACvC,CAAC;YACA,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YACpE,mCAAmC;YACjC,EAAE,EAAC,CAAC,IAAE,CAAC,CAAC,CACR,CAAC;gBACE,IAAI,CAAC,KAAK,GAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YACrC,CAAC;YACF,IAAI,CAAC,EAAE,EAAC,CAAC,IAAE,CAAC,CAAC,CACb,CAAC;gBACR,IAAI,CAAC,KAAK,GAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC5B,CAAC;YACD,IAAI,CAAC,EAAE,EAAC,CAAC,IAAE,CAAC,CAAC,CACb,CAAC;gBACL,IAAI,CAAC,IAAI,GAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAE9B,CAAC;YACD,IAAI,CAAC,EAAE,EAAC,CAAC,IAAE,CAAC,CAAC,CACb,CAAC;gBACR,IAAI,CAAC,IAAI,GAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC3B,CAAC;YACD,IAAI,CAAC,EAAE,EAAC,CAAC,IAAE,CAAC,CAAC,CACb,CAAC;gBACR,IAAI,CAAC,KAAK,GAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAC5B,CAAC;QACH,CAAC;IACP,CAAC;IAGC,0CAAS,GAAT;QACE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACrC,IAAI,EAAE,CAAC,EAAE,EAAE,0DAAU,CAAC,QAAQ,CAAC;YAC/B,IAAI,EAAE,CAAC,EAAE,EAAE,0DAAU,CAAC,QAAQ,CAAC;YAC/B,QAAQ,EAAE,CAAC,EAAE,EAAE,0DAAU,CAAC,QAAQ,CAAC;YACnC,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,MAAM,EAAE,CAAC,IAAI,CAAC;YACd,GAAG,EAAE,CAAC,EAAE,CAAC;YACT,EAAE,EAAC,CAAC,gBAAgB,CAAC;YACrB,IAAI,EAAC,CAAC,IAAI,CAAC;SACZ,CAAC,CAAC;IACL,CAAC;IAED,wDAAuB,GAAvB;QAAA,iBA+CC;QA9CC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,6CAA6C;QAC7C,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI;YACvC,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI;YACvC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ;YAC/C,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,WAAW;YACrD,MAAM,EAAE,IAAI;YACZ,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG;SAGtC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC;iBACpC,SAAS,CACV,UAAC,GAAG;gBACF,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;oBACf,KAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxB,KAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACxB,CAAC;YACH,CAAC,EACD,UAAC,GAAG;gBACF,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;gBACxC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACxB,CAAC,CACA;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC;iBACpC,SAAS,CACV,UAAC,GAAG;gBACF,oBAAoB;gBACpB,KAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,KAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;gBAC/B,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACxB,CAAC,EACD,UAAC,GAAG;YAEJ,CAAC,CACA;QACL,CAAC;IACH,CAAC;IAGD,8CAAa,GAAb;QAAA,iBAUC;QATC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;aAChC,SAAS,CACV,UAAC,GAAG;YACF,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACtB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,CACA;IACL,CAAC;IAED,8CAAa,GAAb,UAAc,KAAU;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,6CAAY,GAAZ,UAAa,KAAK;QAAlB,iBAoBC;QAnBC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;QAChB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC;aACtC,SAAS,CACV,UAAC,GAAG;YACF,KAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;gBAChC,IAAI,EAAE,GAAG,CAAC,IAAI;gBACd,IAAI,EAAE,GAAG,CAAC,IAAI;gBACd,QAAQ,EAAE,GAAG,CAAC,QAAQ;gBACtB,WAAW,EAAE,GAAG,CAAC,WAAW;gBAC5B,MAAM,EAAE,GAAG,CAAC,MAAM;gBAClB,GAAG,EAAE,GAAG,CAAC,GAAG;aACb,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACA;IACL,CAAC;IAGD,2CAAU,GAAV;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;QAC/B,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAID,6CAAY,GAAZ;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;IACjC,CAAC;IAlNU,sBAAsB;QALlC,gEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAuBwB,2DAAW,EAA0B,wEAAc;OAtBhE,sBAAsB,CAmNlC;IAAD,6BAAC;CAAA;AAnNkC;;;;;;;;;;;;;;;;;;ACVM;AACc;AAEvD,IAAM,aAAa,GAAG,EACrB,CAAC;AASF;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QARhC,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,6DAAY,CAAC,QAAQ,CAAC,aAAa,CAAC;aACvC;YACD,OAAO,EAAE;gBACL,6DAAY;aACf;SACJ,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbQ;AACM;AAEM;AACN;AACmB;AAEF;AACmB;AAChC;AACuB;AAsB1E;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAnBzB,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,6DAAY;gBACZ,qFAAoB;gBACpB,mEAAmB;gBACnB,6DAAY;gBACZ,2DAAW;gBACX,mEAAmB;aACtB;YACD,YAAY,EAAE;gBACV,wGAAsB;gBACtB,+FAAmB;aAAC;YACxB,OAAO,EAAE,EAER;YACD,SAAS,EAAE;gBACP,wEAAc;aACjB;SACJ,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;AChCiB;AACgB;AACE;AAC9B;AAI/B;IAGE,wBAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QADnC,eAAU,GAAG,8EAAW,CAAC,UAAU,GAAG,UAAU,CAAC;IACV,CAAC;IAChD,sCAAa,GAAb,UAAc,IAAS;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAGD,sCAAa,GAAb;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,kCAAS,GAAT,UAAU,IAAS;QACjB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3D,CAAC;IACD,uCAAc,GAAd,UAAe,EAAO;QACpB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,KAAK,GAAG,EAAE,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IACD,sCAAa,GAAb,UAAc,IAAS;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3D,CAAC;IACD,qCAAY,GAAZ,UAAa,IAAS;QACpB,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,cAAc,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IA9BU,cAAc;QAD1B,iEAAU,EAAE;yCAIe,+EAAiB;OAHhC,cAAc,CA+B1B;IAAD,qBAAC;CAAA;AA/B0B;;;;;;;;ACP3B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,gtBAAgtB,oBAAoB,2QAA2Q,mnCAAmnC,aAAa,uqDAAuqD,kEAAkE,6BAA6B,mCAAmC,+BAA+B,mCAAmC,+BAA+B,yCAAyC,+BAA+B,yCAAyC,iGAAiG,+CAA+C,+DAA+D,+CAA+C,gFAAgF,6CAA6C,mHAAmH,8CAA8C,+DAA+D,wBAAwB,sCAAsC,0CAA0C,kCAAkC,mBAAmB,+HAA+H,mBAAmB,yGAAyG,mBAAmB,mHAAmH,0CAA0C,qFAAqF,wCAAwC,qJAAqJ,qCAAqC,mHAAmH,8BAA8B,m4CAAm4C,mZAAmZ,0BAA0B,iFAAiF,+BAA+B,8QAA8Q,kBAAkB,2FAA2F,aAAa,mwDAAmwD,wG;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxxT;AACT;AACa;AAIA;AACY;AACH;AAC7B;AAOhC;IAOE,8BAAoB,eAAgC,EAAU,MAAc,EAAU,eAAgC,EAAU,cAA8B,EAAU,WAAwB;QAA5K,oBAAe,GAAf,eAAe,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QALzL,iBAAY,GAAe,EAAE,CAAC;QAErC,uBAAkB,GAAW,CAAC,CAAC;QACxB,cAAS,GAAG,CAAC,CAAC;IAGrB,CAAC;IAED,uCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,eAAe,CAAC,mBAAmB,EAAE;aACvC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,KAAK,CAAC;QACtC,CAAC,CACF,CAAC;QACJ,IAAI,CAAC,cAAc,EAAE,CAAC;IAExB,CAAC;IAED,6CAAc,GAAd;QAAA,iBA2CC;QA1CC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC;aAChD,SAAS,CACR,UAAC,GAAe;YACd,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACzB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,gDAAM,CAAC,GAAG,EAAE,UAAC,QAAkB;oBAC7B,IAAI,QAAkB,CAAC;oBACvB,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC;yBAC1D,SAAS,CACR,UAAC,GAAa;wBACZ,QAAQ,GAAG,GAAG,CAAC;wBACf,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC1B,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACpC,gDAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAC,OAAO;gCACnC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;qCACxC,SAAS,CACR,UAAC,GAAY;oCACX,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCACpC,CAAC,CACF;4BACL,CAAC,CAAC,CAAC;wBACL,CAAC;wBAED,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;6BACxC,SAAS,CACR,UAAC,GAAG;4BACF,QAAQ,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;wBAC7B,CAAC,CACF;wBACD,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC;wBACnC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACnC,CAAC,CACF;gBACL,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACzC,CAAC,CACF;IACL,CAAC;IAED,iDAAkB,GAAlB,UAAmB,KAAU;QAC3B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IAED,2CAAY,GAAZ,UAAa,KAAU;IAEvB,CAAC;IAED,0CAAW,GAAX,UAAY,KAAU;IAEtB,CAAC;IAEF;;;;;;;;;;;;;;;;;;;;;;QAsBI;IAEH,kBAAkB;IAClB,yCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAGD,iDAAkB,GAAlB,UAAmB,QAAkB;QACnC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC;aAC9C,SAAS,CACR,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CACF;IACL,CAAC;IAvHU,oBAAoB;QALhC,gEAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAQqC,mFAAe,EAAkB,uDAAM,EAA2B,0EAAe,EAA0B,gFAAc,EAAuB,uEAAW;OAPrL,oBAAoB,CAyHhC;IAAD,2BAAC;CAAA;AAzHgC;;;;;;;;AChBjC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,k9CAAk9C,gBAAgB,0CAA0C,qBAAqB,oBAAoB,qBAAqB,spLAAspL,6MAA6M,sFAAsF,OAAO,4TAA4T,eAAe,iCAAiC,gBAAgB,UAAU,gBAAgB,usBAAusB,k5B;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/nR;AACM;AACO;AACT;AACY;AAEhC;AAKoB;AAOpD;IAgBE,iCAAoB,eAAgC,EAAU,EAAe,EAAU,eAAgC,EAAU,cAA8B,EAAU,WAAwB;QAA7K,oBAAe,GAAf,eAAe,CAAiB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAd1L,gBAAW,GAAU,EAAE,CAAC;QAC/B,gBAAW,GAAY,KAAK,CAAC;QAC7B,cAAS,GAAY,KAAK,CAAC;QAEpB,iBAAY,GAAe,EAAE,CAAC;QAI9B,sBAAiB,GAAG,CAAC,CAAC;QACtB,gBAAW,GAAU,EAAE,CAAC;QACxB,YAAO,GAAY,KAAK,CAAC;IAKhC,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,2CAAS,GAAT;QACE,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACtC,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACvB,oBAAoB;YACnB,KAAK,EAAE,CAAC,EAAE,CAAC;YACb,kBAAkB;YAChB,IAAI,EAAE,CAAC,IAAI,CAAC;YACb,mBAAmB;YAClB,WAAW,EAAE,EAAE;SAChB,CAAC,CAAC;IACL,CAAC;IAED,iDAAe,GAAf;QAAA,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,KAAK,CAAC;aACxC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QAC1B,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF,CAAC;IACN,CAAC;IAED,6CAAW,GAAX,UAAY,KAAU;QAAtB,iBA8BC;QA7BC,IAAI,CAAC,WAAW,GAAG,gDAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,IAAI;YACzD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YACjC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;YAC7B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;YAC3B,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc;YAC/C,gBAAgB,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB;SACpD,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,EAAE,CAAC;QAClC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;iBAChD,SAAS,CACR,UAAC,GAAS;gBACR,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,GAAG,CAAC;gBAChC,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;oBACjC,IAAI,EAAE,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI;iBACrC,CAAC,CAAC;YACL,CAAC,EACD,UAAC,GAAG;YAEJ,CAAC,CACF;QACL,CAAC;IACH,CAAC;IAED,gDAAc,GAAd;QAAA,iBAqBC;QApBC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;aAChC,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,IAAI;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,EACD;YACE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;gBACjC,KAAK,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;aAChC,CAAC;QACJ,CAAC,CACF;IACL,CAAC;IAGD,+CAAa,GAAb,UAAc,KAAK;QACjB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,4CAAU,GAAV;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClC,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,iDAAe,GAAf,UAAgB,KAAU,EAAE,KAAK;QAC/B,IAAI,MAAM,GAAG,gDAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,IAAI;YAClD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC3C,CAAC,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;QACjC,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,6CAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACjC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,6CAAW,GAAX;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,gDAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,OAAO;YAC/B,KAAK,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YACjC,KAAK,EAAE,KAAK;SACb,CAAC;IACJ,CAAC;IAED,0DAAwB,GAAxB;QAAA,iBAcC;QAbC,IAAI,YAAY,GAAG,iDAAO,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YACjC,WAAW,EAAE,YAAY;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;SACrC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;aAClE,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,cAAc,GAAG,GAAG,CAAC;YAC1B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CACF;IACL,CAAC;IAtKU,uBAAuB;QALnC,gEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAiBqC,0EAAe,EAAc,2DAAW,EAA2B,mFAAe,EAA0B,gFAAc,EAAuB,uEAAW;OAhBtL,uBAAuB,CAuKnC;IAAD,8BAAC;CAAA;AAvKmC;;;;;;;;AClBpC;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,wBAAwB,KAAK,kBAAkB,yBAAyB,GAAG;;AAEhJ;;;AAGA;AACA,2C;;;;;;;ACXA,2FAA2F,0IAA0I,mCAAmC,6CAA6C,qCAAqC,i6JAAi6J,mBAAmB,qGAAqG,mBAAmB,uGAAuG,mBAAmB,mpCAAmpC,oHAAoH,OAAO,yHAAyH,kBAAkB,iFAAiF,aAAa,osGAAosG,iGAAiG,OAAO,sdAAsd,eAAe,mCAAmC,gBAAgB,UAAU,gBAAgB,qUAAqU,iGAAiG,wEAAwE,wYAAwY,eAAe,mCAAmC,gBAAgB,UAAU,gBAAgB,umBAAumB,qjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAr2Y;AAC8B;AACnB;AACL;AAGR;AACe;AACO;AACG;AAChC;AACoB;AAOpD;IAqBE,+BAAoB,WAAwB,EAAU,eAAgC,EAAU,UAAsB,EAAU,cAA8B,EAAU,EAAe,EAAU,eAAgC,EAAU,KAAqB,EAAU,MAAc;QAApQ,gBAAW,GAAX,WAAW,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAlBjR,gBAAW,GAAU,EAAE,CAAC;QACxB,uBAAkB,GAAU,EAAE,CAAC;QAC/B,sBAAiB,GAAW,CAAC,CAAC;QAC9B,mBAAc,GAAU,EAAE,CAAC;QAG3B,uBAAkB,GAAU,EAAE,CAAC;QAM/B,gBAAW,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QACjC,aAAQ,GAAa,IAAI,yDAAQ,CAAC,OAAO,CAAC,CAAC;QAC3C,kBAAa,GAAW,KAAK,CAAC;QAC9B,aAAQ,GAAY,KAAK,CAAC;IAKjC,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YACpD,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,eAAe,CAAC,eAAe,CAAC,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,EAAE,CAAC;qBACrD,SAAS,CACR,UAAC,GAAG;oBACF,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;oBACpB,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;oBAChD,KAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC,EACD,UAAC,GAAG;gBAEJ,CAAC,CACF;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAS,GAAT;QAAA,iBAgDC;QA/CC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;aAC/D,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,GAAG,CAAC;YACjC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;YAC7C,gCAAgC;YAC/B,gDAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAC,IAAI;gBACrC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC;qBACrC,SAAS,CACR,UAAC,GAAG;oBACF,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACnD,CAAC,CACF;gBACJ,0CAA0C;YAC3C,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACtC,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC3B,KAAK,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrB,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC3B,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC3B,IAAI,EAAE,CAAC,EAAE,CAAC;gBACV,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACnB,cAAc,EAAE,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBACvC,gBAAgB,EAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBAC3C,gBAAgB,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;gBACrD,UAAU,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;gBACzC,MAAM,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACjC,KAAK,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC/B,QAAQ,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBACrC,qBAAqB,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;gBAC/D,SAAS,EAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;aAExC,CAAC,CAAC;YAEH,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;iBACtC,SAAS,CACR,UAAC,GAAG;gBACF,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;oBACjC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC;iBAClB,CAAC,CAAC;YACL,CAAC,CACF;YACH,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CACF;IAEL,CAAC;IAED,qDAAqB,GAArB,UAAsB,KAAU;QAAhC,iBAcC;QAbC,IAAI,IAAI,GAAG;YACT,IAAI,EAAE,KAAK,CAAC,KAAK;SAClB;QAED,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC;aACnC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAChC,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,8CAAc,GAAd;QAAA,iBAeC;QAdC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;aAChC,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,IAAI;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,CACF;IACL,CAAC;IAED,0CAAU,GAAV;QACE,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,6CAAa,GAAb,UAAc,KAAK;QACjB,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,+CAAe,GAAf,UAAgB,KAAU,EAAE,KAAK,EAAE,IAAI;QACrC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACjB,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC;QAChE,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,sDAAsB,GAAtB;QAAA,iBAqBC;QApBC,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,GAAG;YACL,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,UAAU;YACpD,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,KAAK;YAC1C,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,QAAQ;YAChD,WAAW,EAAE,IAAI,CAAC,cAAc;YACjC,8DAA8D;YAC7D,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB;QAED,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC,IAAI,CAAC;aACjD,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,EAAE,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3E,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,CACF;IACL,CAAC;IAGD,4CAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,MAAM,CAAC,CAAC,CAAC;YACjC,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC;YACjE,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;gBACjC,SAAS,EAAE,WAAW;aACvB,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,gDAAgB,GAAhB,UAAiB,KAAU;QACzB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YACjC,qBAAqB,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;YACzC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK;SAC1D,CAAC,CAAC;IACL,CAAC;IAED,2CAAW,GAAX,UAAY,KAAU;QACpB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YACjC,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK;SACrE,CAAC,CAAC;IACL,CAAC;IAED,8CAAc,GAAd;QAAA,iBAYC;QAXC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,gDAAM,CAAC,IAAI,CAAC,cAAc,EAAE,UAAC,IAAI;YAC/B,IAAI,OAAO,GAAG,qDAAW,CAAC,KAAI,CAAC,WAAW,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;YACzD,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC;YACjC,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,KAAK;SAClB,CAAC,CAAC;IACL,CAAC;IAjN8B;QAA9B,gEAAS,CAAC,kBAAkB,CAAC;kCAAmB,yDAAU;mEAAC;IADjD,qBAAqB;QALjC,gEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAsBiC,uEAAW,EAA2B,mFAAe,EAAsB,yDAAU,EAA0B,gFAAc,EAAc,2DAAW,EAA2B,0EAAe,EAAiB,+DAAc,EAAkB,uDAAM;OArB7Q,qBAAqB,CAmNjC;IAAD,4BAAC;CAAA;AAnNiC;;;;;;;;AClBlC;AACA;;;AAGA;AACA,wCAAyC,2BAA2B,oBAAoB,uBAAuB,wBAAwB,GAAG,qBAAqB,2BAA2B,oBAAoB,GAAG,mBAAmB,qBAAqB,sBAAsB,iBAAiB,kBAAkB,GAAG,iBAAiB,qCAAqC,GAAG,mBAAmB,qBAAqB,GAAG;;AAEzZ;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,iBAAiB,45BAA45B,YAAY,oKAAoK,gBAAgB,+CAA+C,wHAAwH,kBAAkB,YAAY,cAAc,iBAAiB,+GAA+G,kBAAkB,gBAAgB,cAAc,gBAAgB,+FAA+F,mCAAmC,mDAAmD,mCAAmC,gDAAgD,+BAA+B,yFAAyF,yCAAyC,6CAA6C,gCAAgC,iDAAiD,+BAA+B,0LAA0L,+DAA+D,gBAAgB,wJAAwJ,wBAAwB,WAAW,WAAW,aAAa,4BAA4B,gBAAgB,8EAA8E,yCAAyC,8BAA8B,2GAA2G,oKAAoK,4KAA4K,wBAAwB,WAAW,WAAW,aAAa,4BAA4B,gBAAgB,gFAAgF,gNAAgN,qEAAqE,yCAAyC,kHAAkH,qXAAqX,cAAc,iBAAiB,0EAA0E,YAAY,6PAA6P,uEAAuE,uKAAuK,mIAAmI,iBAAiB,sCAAsC,iBAAiB,kCAAkC,gBAAgB,wIAAwI,WAAW,gEAAgE,0BAA0B,WAAW,UAAU,gCAAgC,yRAAyR,mJAAmJ,0BAA0B,UAAU,sCAAsC,kBAAkB,4IAA4I,gMAAgM,iBAAiB,gHAAgH,YAAY,+ZAA+Z,oJAAoJ,0BAA0B,4CAA4C,qBAAqB,mXAAmX,kJAAkJ,0BAA0B,ubAAub,YAAY,mBAAmB,0KAA0K,YAAY,mBAAmB,+CAA+C,sCAAsC,qeAAqe,kBAAkB,gYAAgY,YAAY,oBAAoB,6KAA6K,YAAY,4EAA4E,MAAM,mBAAmB,qrDAAqrD,iEAAiE,gBAAgB,4OAA4O,upCAAupC,eAAe,0DAA0D,8BAA8B,wWAAwW,yCAAyC,sJAAsJ,8BAA8B,wEAAwE,8BAA8B,kFAAkF,uBAAuB,mfAAmf,wKAAwK,gG;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUhgc;AAE6B;AACL;AAGiB;AACH;AACA;AAC7B;AACS;AAWzC;IAeE,+BAAoB,cAA8B,EAAU,cAA8B,EAAU,eAAgC,EAAU,eAAgC,EAAU,KAAqB;QAAzL,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,UAAK,GAAL,KAAK,CAAgB;QARrM,SAAI,GAAG,EAAE,CAAC;QAGX,gBAAW,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QACjC,aAAQ,GAAa,IAAI,yDAAQ,CAAC,OAAO,CAAC,CAAC;QAE3C,mBAAc,GAAY,KAAK,CAAC;IAGvC,CAAC;IAED,2CAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC;QAC3D,CAAC;IACH,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YACpD,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACrC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,YAAY,CAAC;gBAClC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC;gBAC/C,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBACpE,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACvE,CAAC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,2CAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,kDAAkB,GAAlB;QACE,6BAA6B;QAC7B,wBAAwB;QACxB,EAAE;QACF,IAAI;IACN,CAAC;IAED,+CAAe,GAAf;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IAED,2CAAW,GAAX;QAAA,iBA6BC;QA5BC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE;YACpD,UAAU,EAAE,UAAC,MAAM;gBACjB,IAAI,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;gBAClD,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBACrC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;gBAC9C,EAAE,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBACxB,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;oBACtC,IAAI,IAAI,GAAG;wBACT,GAAG,EAAE,GAAG;wBACR,KAAK,EAAE,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,GAAG,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC;qBAC/F;oBAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAElB,KAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC;yBACxC,SAAS,CACR,UAAC,GAAG;wBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC,EACD,UAAC,GAAG;wBACF,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;oBACrC,CAAC,CACF;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,GAAG,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,GAAG,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;gBAC7G,CAAC;YACH,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAGD,+CAAe,GAAf,UAAgB,EAAU;QAA1B,iBAoDC;QAnDC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;aAChD,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,KAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC;YACxB,KAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;YAC/B,mBAAmB;YACnB,gDAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAC,IAAI;gBACrC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC;qBACrC,SAAS,CACR,UAAC,GAAG;oBACF,GAAG,CAAC,iBAAiB,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;oBAC1E,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACpC,KAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC,iBAAiB,CAAC,CAAC;oBACnE,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;gBACjD,CAAC,EAAE,UAAC,GAAG;gBAEP,CAAC,EAAE;oBACD,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBACnD,gDAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,UAAC,IAAI;4BAC/C,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;wBACvE,CAAC,CAAC,CAAC;oBACL,CAAC;oBACD,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;wBACnC,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;oBAC/B,CAAC;oBACD,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;oBACpE,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACvE,CAAC,CACF;YACL,CAAC,CAAC,CAAC;YAGH,mBAAmB;YACnB,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;iBAC/D,SAAS,CACR,UAAC,GAAG;gBACF,KAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,GAAG,CAAC;YACnC,CAAC,EACD,UAAC,GAAG;YAEJ,CAAC,EACD;gBACE,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,CAAC,CACF;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF;IACL,CAAC;IAED,+CAAe,GAAf,UAAgB,CAAC,EAAE,qBAAqB;QAEtC,IAAI,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,EACvB,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC;QAElF,IAAI,GAAG,GAAG,qBAAqB,IAAI,KAAK,CAAC;QAEzC,qBAAqB;QACrB,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QAED,6BAA6B;QAC7B,KAAK,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAEnM,4BAA4B;QAC5B,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAE9F,8BAA8B;QAC9B,MAAM,GAAG,CAAC,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,cAAc,EAAE,cAAc,EAAE,qBAAqB,EAAE,eAAe,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,EAAE,gBAAgB,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;QAEzV,gEAAgE;QAChE,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QACtB,MAAM,GAAG,EAAE,CAAC;QACZ,OAAO,KAAK,GAAG,CAAC,EAAE,CAAC;YACjB,GAAG,GAAG,KAAK,CAAC;YACZ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACnE,CAAC;QAED,wFAAwF;QACxF,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;QAC1B,EAAE,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QACD,0CAA0C;QAC1C,KAAK,GAAG,EAAE,CAAC;QACX,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/B,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,mDAAmD;gBACnD,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAErD,iEAAiE;gBACjE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClB,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBAChB,CAAC;gBAED,+DAA+D;gBAC/D,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;gBAED,wCAAwC;gBACxC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;gBAED,wCAAwC;gBACxC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC3B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;gBAED,sDAAsD;gBACtD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,2EAA2E;oBAC3E,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC;wBAC/B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClB,CAAC;gBACH,CAAC;gBAED,4CAA4C;gBAC5C,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5B,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC;QACH,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IA5NyB;QAAzB,gEAAS,CAAC,aAAa,CAAC;kCAAc,yDAAU;8DAAC;IACzC;QAAR,4DAAK,EAAE;;+DAAmB;IAHhB,qBAAqB;QALjC,gEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAgBoC,gFAAc,EAA0B,gFAAc,EAA2B,mFAAe,EAA2B,0EAAe,EAAiB,+DAAc;OAflM,qBAAqB,CA+NjC;IAAD,4BAAC;CAAA;AA/NiC;;;;;;;;AC/BlC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,8YAA8Y,8BAA8B,4fAA4f,sCAAsC,6dAA6d,oBAAoB,iPAAiP,wjCAAwjC,aAAa,i/BAAi/B,spBAAspB,kEAAkE,yBAAyB,mCAAmC,2BAA2B,mCAAmC,2BAA2B,yCAAyC,2BAA2B,yCAAyC,6FAA6F,+CAA+C,+DAA+D,+CAA+C,4EAA4E,6CAA6C,uGAAuG,8CAA8C,mDAAmD,wBAAwB,2BAA2B,0CAA0C,2BAA2B,mBAAmB,mHAAmH,mBAAmB,qGAAqG,mBAAmB,+GAA+G,sCAAsC,8IAA8I,qCAAqC,gGAAgG,8BAA8B,87CAA87C,2XAA2X,0BAA0B,6EAA6E,+BAA+B,8PAA8P,kBAAkB,uFAAuF,aAAa,6mDAA6mD,oF;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3gU;AAES;AACI;AAEpB;AAE6B;AACT;AACY;AAOhE;IAcE,iCAAoB,eAAgC,EAAU,MAAc,EAAU,eAAgC,EAAU,cAA8B,EAAU,WAAwB;QAA5K,oBAAe,GAAf,eAAe,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAbzL,gBAAW,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QACjC,iBAAY,GAAe,EAAE,CAAC;QAC9B,eAAU,GAAG,UAAU,CAAC;QAIxB,oBAAe,GAAY,KAAK,CAAC;QACjC,oBAAe,GAAY,KAAK,CAAC;QACjC,2BAAsB,GAAY,KAAK,CAAC;QAExC,cAAS,GAAG,CAAC,CAAC;QACrB,uBAAkB,GAAW,CAAC,CAAC;IAG/B,CAAC;IAED,0CAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE;aACzC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,KAAK,CAAC;QACtC,CAAC,CACF;QACH,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,8BAA8B;IAChC,CAAC;IAED,uBAAuB;IACvB,qDAAmB,GAAnB;QAAA,iBAWC;QAVC,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE;aACjC,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gBACf,KAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,CAAC;QACH,CAAC,CACF;IACL,CAAC;IAED,uBAAuB;IACvB,qDAAmB,GAAnB;QAAA,iBAOC;QANC,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE;aACtC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,0BAA0B,EAAE,CAAC;QACpC,CAAC,CACF;IACL,CAAC;IAED,qDAAmB,GAAnB;QAAA,iBA6CC;QA5CC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC;aACrD,SAAS,CACR,UAAC,GAAe;YACd,gDAAM,CAAC,GAAG,EAAE,UAAC,QAAkB;gBAC7B,IAAI,QAAkB,CAAC;gBACvB,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC;qBAC1D,SAAS,CACR,UAAC,GAAa;oBACZ,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAClB,QAAQ,GAAG,GAAG,CAAC;wBACf,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC1B,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACpC,gDAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAC,OAAO;gCACnC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;qCACxC,SAAS,CACR,UAAC,GAAY;oCACX,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCACpC,CAAC,CACF;4BACL,CAAC,CAAC,CAAC;wBACL,CAAC;wBACD,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;6BACxC,SAAS,CACR,UAAC,GAAG;4BACF,QAAQ,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;wBAC7B,CAAC,CACF;wBACD,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC;wBACnC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACnC,CAAC;gBACH,CAAC,CACF;YACL,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,EACD;YACE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAClD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC,CACF;IACL,CAAC;IAED,4DAA0B,GAA1B;QAAA,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,0BAA0B,EAAE;aAC9C,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACzC,CAAC,CACF;IACL,CAAC;IAED,oDAAkB,GAAlB,UAAmB,QAAkB;QACnC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC;aAC9C,SAAS,CACR,UAAC,GAAG;QACJ,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,8CAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,6CAAW,GAAX,UAAY,KAAU;QACpB,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,MAAM,CAAC;QACT,CAAC;QACD,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACjC,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC;YAClC,gDAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,IAAI;gBAC7B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,eAAe,CAAC,CAAC,CAAC;YAC5C,gDAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,IAAI;gBAC7B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,CAAC,CAAC;YACnC,gDAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,IAAI;gBAC7B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QAC/B,CAAC;IACH,CAAC;IAED,8CAAY,GAAZ,UAAa,MAAc,EAAE,QAAkB;QAC7C,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAClC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;YACzB,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAChC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;YAC3B,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;YACxB,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC;YACrC,QAAQ,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,gBAAgB,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;QAClC,CAAC;QAED,QAAQ,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,QAAQ,CAAC;aAChD,SAAS,CACR,UAAC,GAAG;QACJ,CAAC,CACF;IACL,CAAC;IAED,oDAAkB,GAAlB,UAAmB,QAAkB;QACnC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC;aAC9C,SAAS,CACR,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CACF;IACL,CAAC;IAED,oDAAkB,GAAlB,UAAmB,KAAU;QAA7B,iBAaC;QAZC,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC;QACT,CAAC;QACD,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,gDAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAC,IAAI;YAC7B,EAAE,CAAC,CAAC,mDAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC/C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;IAC/B,CAAC;IAED,gDAAc,GAAd;QAAA,iBAkBC;QAjBC,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;YAC/B,qBAAqB,EAAE,IAAI,CAAC,UAAU;SACvC;QAED,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC;aACtC,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,KAAI,CAAC,mBAAmB,EAAE,CAAC;YAC7B,CAAC;QACH,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,wCAAM,GAAN,UAAO,WAAW;QAChB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAED,oDAAkB,GAAlB,UAAmB,MAAM;QAAzB,iBAmBC;QAlBC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC;iBAClD,SAAS,CACR,UAAC,GAAG;gBACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,YAAY,GAAG,mDAAS,CAAC,KAAI,CAAC,YAAY,EAAE,qDAAW,CAAC,KAAI,CAAC,YAAY,EAAE;wBAC9E,GAAG,EAAE,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC;qBAC7B,CAAC,CAAC,CAAC;oBACJ,KAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;gBACtC,CAAC;YACH,CAAC,EACD,UAAC,GAAG;YACJ,CAAC,CACF;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACtC,CAAC;IACH,CAAC;IAED,kBAAkB;IAClB,4CAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAlQU,uBAAuB;QALnC,gEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAeqC,mFAAe,EAAkB,uDAAM,EAA2B,0EAAe,EAA0B,gFAAc,EAAuB,uEAAW;OAdrL,uBAAuB,CAoQnC;IAAD,8BAAC;CAAA;AApQmC;;;;;;;;;;;;;;;;;;AChBK;AACc;AAEvD,IAAM,cAAc,GAAG,EACtB,CAAC;AASF;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QARjC,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,6DAAY,CAAC,QAAQ,CAAC,cAAc,CAAC;aACxC;YACD,OAAO,EAAE;gBACL,6DAAY;aACf;SACJ,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;ACblC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,qQAAqQ,sCAAsC,yjBAAyjB,wuBAAwuB,mCAAmC,2BAA2B,mCAAmC,2BAA2B,yCAAyC,2BAA2B,yCAAyC,yFAAyF,+CAA+C,+DAA+D,+CAA+C,4EAA4E,6CAA6C,wGAAwG,8CAA8C,0DAA0D,wBAAwB,kCAAkC,0CAA0C,8BAA8B,mBAAmB,uHAAuH,mBAAmB,qGAAqG,mBAAmB,+GAA+G,sCAAsC,yEAAyE,wCAAwC,yIAAyI,qCAAqC,mGAAmG,8BAA8B,6wDAA6wD,2XAA2X,0BAA0B,6EAA6E,+BAA+B,8PAA8P,kBAAkB,uFAAuF,aAAa,omEAAomE,oBAAoB,cAAc,sTAAsT,wBAAwB,UAAU,uBAAuB,0P;;;;;;;;;;;;;;;;;;;;;;;;;ACAv4Q;AAEI;AAGA;AACY;AACH;AAC7B;AAOhC;IASE,iCAAoB,eAAgC,EAAU,eAAgC,EAAU,cAA8B,EAAU,WAAwB;QAApJ,oBAAe,GAAf,eAAe,CAAiB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAPjK,kBAAa,GAAU,EAAE,CAAC;QAC1B,iBAAY,GAAe,EAAE,CAAC;QAI9B,2BAAsB,GAAY,KAAK,CAAC;IAG/C,CAAC;IAED,0CAAQ,GAAR;IACA,CAAC;IAGD,+CAAa,GAAb,UAAc,KAAU;QACtB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,iCAAiC,EAAE,CAAC;IAC3C,CAAC;IAGD,mEAAiC,GAAjC;QAAA,iBAOC;QANC,IAAI,CAAC,eAAe,CAAC,8BAA8B,CAAC,IAAI,CAAC,UAAU,CAAC;aACjE,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QAC3B,CAAC,CACF;IACL,CAAC;IAED,kDAAgB,GAAhB,UAAiB,IAAI;QAArB,iBA+CC;QA9CC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,EAAE,CAAC;aAC7C,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,QAAkB;gBAC7B,IAAI,QAAkB,CAAC;gBAEvB,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC;oBACzB,QAAQ,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;gBAC9B,CAAC;gBAED,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC;qBAC1D,SAAS,CACR,UAAC,GAAa;oBACZ,QAAQ,GAAG,GAAG,CAAC;oBACf,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACvB,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC1B,EAAE,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACpC,gDAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAC,OAAO;gCACnC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;qCACxC,SAAS,CACR,UAAC,GAAY;oCACX,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCACpC,CAAC,CACF;4BACL,CAAC,CAAC;wBACJ,CAAC;wBAED,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;6BACxC,SAAS,CACR,UAAC,GAAG;4BACF,QAAQ,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;wBAC7B,CAAC,CACF;wBACD,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC;wBACnC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACnC,CAAC;gBACH,CAAC,CACF;YACL,CAAC,CAAC;QACJ,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QAC3C,CAAC,CACF;IACL,CAAC;IAGD,8CAAY,GAAZ,UAAa,MAAc,EAAE,QAAkB;QAC7C,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAClC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;YACzB,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YAChC,QAAQ,CAAC,UAAU,GAAG,CAAC,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;YAC3B,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;YACxB,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,KAAK,CAAC;YACrC,QAAQ,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,gBAAgB,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;QAClC,CAAC;QAED,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;YACjC,QAAQ,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;QAC3B,CAAC;QACD,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAC,QAAQ,CAAC;aAChD,SAAS,CACR,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,oDAAkB,GAAlB,UAAmB,QAAkB;QACnC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,QAAQ,CAAC;aAC9C,SAAS,CACR,UAAC,GAAG;YACF,oBAAoB;QACtB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CACF;IACL,CAAC;IAED,gDAAc,GAAd,UAAe,QAAkB;QAAjC,iBAkBC;QAjBC,IAAI,IAAI,GAAG;YACT,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;YAC/B,qBAAqB,EAAE,IAAI,CAAC,UAAU;SACvC;QAED,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC;aACtC,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,UAAU,GAAG,CAAC,CAAC;gBACpB,KAAI,CAAC,gBAAgB,CAAC,EAAC,GAAG,EAAE,QAAQ,CAAC,WAAW,EAAC,CAAC,CAAC;YACrD,CAAC;QACH,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,wCAAM,GAAN,UAAO,QAAkB;QACvB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;IAC9B,CAAC;IAGD,oDAAkB,GAAlB,UAAmB,MAAM;QAAzB,iBAoBC;QAnBC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC;iBAClD,SAAS,CACR,UAAC,GAAG;gBACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,YAAY,GAAG,mDAAS,CAAC,KAAI,CAAC,YAAY,EAAE,qDAAW,CAAC,KAAI,CAAC,YAAY,EAAE;wBAC9E,GAAG,EAAE,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC;qBAC7B,CAAC,CAAC,CAAC;oBACJ,KAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;gBACtC,CAAC;YACH,CAAC,EACD,UAAC,GAAG;YAEJ,CAAC,CACF;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACtC,CAAC;IACH,CAAC;IAtKU,uBAAuB;QALnC,gEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAUqC,mFAAe,EAA2B,0EAAe,EAA0B,gFAAc,EAAuB,uEAAW;OAT7J,uBAAuB,CAyKnC;IAAD,8BAAC;CAAA;AAzKmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfG;AACM;AAEM;AACN;AACmB;AACA;AACW;AACS;AACjC;AACiC;AAC1B;AACT;AAC6B;AACA;AACjB;AACH;AAC4B;AA8BtF;IAAA;IACA,CAAC;IADY,cAAc;QA5B1B,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,6DAAY;gBACZ,mEAAmB;gBACnB,6DAAY;gBACZ,2DAAW;gBACX,mEAAmB;gBACnB,uFAAqB;aACtB;YACD,YAAY,EAAE;gBACZ,kGAAoB;gBACpB,2GAAuB;gBACvB,2GAAuB;gBACvB,sGAAqB;gBACrB,sGAAqB;gBACrB,4GAAuB;aACxB;YACD,OAAO,EAAE;gBACP,sGAAqB;aACtB;YACD,SAAS,EAAE;gBACT,0EAAe;gBACf,iFAAc;gBACd,wEAAW;gBACX,oFAAe;gBACf,iFAAc;aACf;SACF,CAAC;OACW,cAAc,CAC1B;IAAD,qBAAC;CAAA;AAD0B;;;;;;;;;;;;;;;;;;;;;;;AC/Cc;AACgB;AACE;AAC5B;AAG/B;IAIE,yBAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAFnC,gBAAW,GAAG,8EAAW,CAAC,UAAU,GAAG,WAAW,CAAC;IAG3D,CAAC;IAED,wCAAc,GAAd,UAAe,QAAQ;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChE,CAAC;IAED,iDAAuB,GAAvB,UAAwB,EAAE;QACxB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,iBAAiB,GAAG,EAAE,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,wDAA8B,GAA9B,UAA+B,KAAK;QAClC,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,4BAA4B,GAAG,KAAK,CAAC;QAClE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,0CAAgB,GAAhB,UAAiB,IAAI;QACnB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,wCAAc,GAAd,UAAe,SAAS;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,WAAW,GAAG,SAAS,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,2CAAiB,GAAjB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,uCAAa,GAAb,UAAc,IAAS;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,qCAAW,GAAX,UAAY,IAAS;QACnB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,yCAAe,GAAf,UAAgB,IAAY,EAAE,EAAU;QACtC,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,MAAM,GAAG,EAAE,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,0CAAgB,GAAhB,UAAiB,IAAS;QACxB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,4CAAkB,GAAlB,UAAmB,IAAS;QAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,4CAAkB,GAAlB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,qDAA2B,GAA3B;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,wBAAwB,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,6CAAmB,GAAnB,UAAoB,SAAiB;QACnC,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,+BAA+B,GAAG,SAAS,CAAC;QACzE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,uCAAa,GAAb;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,8CAAoB,GAApB,UAAqB,IAAS;QAC5B,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3D,CAAC;IAED,2CAA2C;IAC3C,kCAAQ,GAAR,UAAS,IAAS;QAChB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,oDAA0B,GAA1B;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,wCAAc,GAAd,UAAe,IAAS;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,yBAAyB,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,mDAAyB,GAAzB,UAA0B,IAAS;QACjC,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,qBAAqB,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,wCAAc,GAAd,UAAe,QAAQ;QACrB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChE,CAAC;IAED,4CAAkB,GAAlB,UAAmB,QAAQ;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAChE,CAAC;IAED,4CAAkB,GAAlB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,6CAAmB,GAAnB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,2CAAiB,GAAjB,UAAkB,IAAS;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAnIU,eAAe;QAD3B,iEAAU,EAAE;yCAKe,+EAAiB;OAJhC,eAAe,CAoI3B;IAAD,sBAAC;CAAA;AApI2B;;;;;;;;ACN5B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,mtBAAmtB,oBAAoB,4QAA4Q,mnCAAmnC,aAAa,4qDAA4qD,mEAAmE,6BAA6B,oCAAoC,+BAA+B,oCAAoC,+BAA+B,0CAA0C,+BAA+B,0CAA0C,8FAA8F,gDAAgD,gEAAgE,gDAAgD,gFAAgF,8CAA8C,oHAAoH,+CAA+C,kEAAkE,yBAAyB,+BAA+B,4CAA4C,kCAAkC,oBAAoB,gIAAgI,oBAAoB,0GAA0G,oBAAoB,oHAAoH,2CAA2C,qFAAqF,yCAAyC,uJAAuJ,sCAAsC,gHAAgH,+BAA+B,q4CAAq4C,oZAAoZ,2BAA2B,iFAAiF,gCAAgC,+QAA+Q,kBAAkB,2FAA2F,aAAa,owDAAowD,wG;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxzT;AACT;AACe;AAIF;AACY;AACH;AAC7B;AAOhC;IAOE,+BAAoB,eAAgC,EAAU,MAAc,EAAU,gBAAkC,EAAU,cAA8B,EAAU,WAAwB;QAA9K,oBAAe,GAAf,eAAe,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAL3L,kBAAa,GAAgB,EAAE,CAAC;QAEvC,wBAAmB,GAAW,CAAC,CAAC;QACzB,cAAS,GAAG,CAAC,CAAC;IAGrB,CAAC;IAED,wCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,EAAE;aACzC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC,KAAK,CAAC;QACvC,CAAC,CACF,CAAC;QACJ,IAAI,CAAC,eAAe,EAAE,CAAC;IAEzB,CAAC;IAED,+CAAe,GAAf;QAAA,iBA2CC;QA1CC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC;aAClD,SAAS,CACR,UAAC,GAAgB;YACf,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YAC1B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,gDAAM,CAAC,GAAG,EAAE,UAAC,SAAoB;oBAC/B,IAAI,QAAkB,CAAC;oBACvB,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC;yBAC3D,SAAS,CACR,UAAC,GAAa;wBACZ,QAAQ,GAAG,GAAG,CAAC;wBACf,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC1B,EAAE,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACrC,gDAAM,CAAC,SAAS,CAAC,WAAW,EAAE,UAAC,OAAO;gCACpC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;qCACxC,SAAS,CACR,UAAC,GAAY;oCACX,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCACpC,CAAC,CACF;4BACL,CAAC,CAAC,CAAC;wBACL,CAAC;wBAED,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;6BACxC,SAAS,CACR,UAAC,GAAG;4BACF,QAAQ,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;wBAC7B,CAAC,CACF;wBACH,SAAS,CAAC,YAAY,GAAG,QAAQ,CAAC;wBAClC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACrC,CAAC,CACF;gBACL,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QAC1C,CAAC,CACF;IACL,CAAC;IAED,kDAAkB,GAAlB,UAAmB,KAAU;QAC3B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrB,CAAC;IAED,4CAAY,GAAZ,UAAa,KAAU;IAEvB,CAAC;IAED,2CAAW,GAAX,UAAY,KAAU;IAEtB,CAAC;IAED;;;;;;;;;;;;;;;;;;;;;;OAsBG;IAEH,kBAAkB;IAClB,0CAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAGD,kDAAkB,GAAlB,UAAmB,SAAoB;QACrC,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,SAAS,CAAC;aAChD,SAAS,CACR,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CACF;IACL,CAAC;IAvHU,qBAAqB;QALjC,gEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAQqC,mFAAe,EAAkB,uDAAM,EAA4B,4EAAgB,EAA0B,gFAAc,EAAuB,uEAAW;OAPvL,qBAAqB,CAyHjC;IAAD,4BAAC;CAAA;AAzHiC;;;;;;;;AChBlC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,u9CAAu9C,gBAAgB,0CAA0C,qBAAqB,oBAAoB,qBAAqB,smLAAsmL,ykBAAykB,sFAAsF,OAAO,4TAA4T,eAAe,iCAAiC,gBAAgB,UAAU,gBAAgB,usBAAusB,s5B;;;;;;;;;;;;;;;;;;;;;;;;;;ACAh9R;AACM;AACO;AACT;AACY;AAEhC;AAKsB;AAOtD;IAgBE,kCAAoB,gBAAkC,EAAU,EAAe,EAAU,eAAgC,EAAU,cAA8B,EAAU,WAAwB;QAA/K,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAd5L,gBAAW,GAAU,EAAE,CAAC;QAC/B,gBAAW,GAAY,KAAK,CAAC;QAC7B,cAAS,GAAY,KAAK,CAAC;QAEpB,iBAAY,GAAe,EAAE,CAAC;QAI9B,sBAAiB,GAAG,CAAC,CAAC;QACtB,gBAAW,GAAU,EAAE,CAAC;QACxB,YAAO,GAAY,KAAK,CAAC;IAKhC,CAAC;IAED,2CAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,4CAAS,GAAT;QACE,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACvC,WAAW,EAAE,CAAC,EAAE,CAAC;YACjB,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,IAAI,EAAE,CAAC,EAAE,CAAC;YACV,cAAc,EAAE,CAAC,EAAE,CAAC;YACpB,gBAAgB,EAAE,CAAC,EAAE,CAAC;YACtB,mBAAmB;YACnB,KAAK,EAAE,CAAC,EAAE,CAAC;YACX,QAAQ,EAAE,CAAC,CAAC,CAAC;YACb,IAAI,EAAE,CAAC,IAAI,CAAC;YACb,mBAAmB;YAClB,WAAW,EAAE,EAAE;SAChB,CAAC,CAAC;IACL,CAAC;IAED,kDAAe,GAAf;QAAA,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,KAAK,CAAC;aACxC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QAC1B,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF,CAAC;IACN,CAAC;IAED,8CAAW,GAAX,UAAY,KAAU;QAAtB,iBA8BC;QA7BC,IAAI,CAAC,WAAW,GAAG,gDAAM,CAAC,IAAI,CAAC,YAAY,EAAE,UAAU,IAAI;YACzD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;YAClC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;YAC7B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YACnC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI;YAC3B,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc;YAC/C,gBAAgB,EAAE,IAAI,CAAC,WAAW,CAAC,gBAAgB;SACpD,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,EAAE,CAAC;QAClC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;iBAChD,SAAS,CACR,UAAC,GAAS;gBACR,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,GAAG,CAAC;gBAChC,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;oBAClC,IAAI,EAAE,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI;iBACrC,CAAC,CAAC;YACL,CAAC,EACD,UAAC,GAAG;YAEJ,CAAC,CACF;QACL,CAAC;IACH,CAAC;IAED,iDAAc,GAAd;QAAA,iBAqBC;QApBC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;aAChC,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,IAAI;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,EACD;YACE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;gBAClC,KAAK,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;aAChC,CAAC;QACJ,CAAC,CACF;IACL,CAAC;IAGD,gDAAa,GAAb,UAAc,KAAK;QACjB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,6CAAU,GAAV;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClC,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,kDAAe,GAAf,UAAgB,KAAU,EAAE,KAAK;QAC/B,IAAI,MAAM,GAAG,gDAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAU,IAAI;YAClD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC3C,CAAC,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;QACjC,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,8CAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACjC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,8CAAW,GAAX;QACE,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,gDAAM,CAAC,IAAI,CAAC,WAAW,EAAE,UAAC,OAAO;YAC/B,KAAK,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;YAClC,KAAK,EAAE,KAAK;SACb,CAAC;IACJ,CAAC;IAED,4DAAyB,GAAzB;QAAA,iBAcC;QAbC,IAAI,YAAY,GAAG,iDAAO,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;YAClC,WAAW,EAAE,YAAY;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;SACrC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;aACrE,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC;YAC3B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,CACF;IACL,CAAC;IAtKU,wBAAwB;QALpC,gEAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAiBsC,4EAAgB,EAAc,2DAAW,EAA2B,mFAAe,EAA0B,gFAAc,EAAuB,uEAAW;OAhBxL,wBAAwB,CAuKpC;IAAD,+BAAC;CAAA;AAvKoC;;;;;;;;AClBrC;AACA;;;AAGA;AACA,2CAA4C,yBAAyB,wBAAwB,KAAK,kBAAkB,yBAAyB,GAAG;;AAEhJ;;;AAGA;AACA,2C;;;;;;;ACXA,2FAA2F,2IAA2I,oCAAoC,6CAA6C,sCAAsC,y6JAAy6J,oBAAoB,sGAAsG,oBAAoB,wGAAwG,oBAAoB,qpCAAqpC,oHAAoH,OAAO,yHAAyH,kBAAkB,iFAAiF,aAAa,2sGAA2sG,iGAAiG,OAAO,sdAAsd,eAAe,mCAAmC,gBAAgB,UAAU,gBAAgB,qUAAqU,iGAAiG,yEAAyE,wYAAwY,eAAe,mCAAmC,gBAAgB,UAAU,gBAAgB,ymBAAymB,sjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj4Y;AAC8B;AACjB;AACP;AAGR;AACe;AACO;AACG;AAChC;AACoB;AAOpD;IAqBE,gCAAoB,WAAwB,EAAU,eAAgC,EAAU,UAAsB,EAAU,cAA8B,EAAU,EAAe,EAAU,gBAAkC,EAAU,KAAqB,EAAU,MAAc;QAAtQ,gBAAW,GAAX,WAAW,CAAa;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAlBnR,gBAAW,GAAU,EAAE,CAAC;QACxB,uBAAkB,GAAU,EAAE,CAAC;QAC/B,sBAAiB,GAAW,CAAC,CAAC;QAC9B,mBAAc,GAAU,EAAE,CAAC;QAG3B,uBAAkB,GAAU,EAAE,CAAC;QAM/B,gBAAW,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QACjC,aAAQ,GAAa,IAAI,yDAAQ,CAAC,OAAO,CAAC,CAAC;QAC3C,kBAAa,GAAW,KAAK,CAAC;QAC9B,aAAQ,GAAY,KAAK,CAAC;IAKjC,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YACpD,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,EAAE,CAAC;qBACvD,SAAS,CACR,UAAC,GAAG;oBACF,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;oBACrB,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC;oBACjD,KAAI,CAAC,SAAS,EAAE,CAAC;gBACnB,CAAC,EACD,UAAC,GAAG;gBAEJ,CAAC,CACF;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAS,GAAT;QAAA,iBAgDC;QA/CC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;aAChE,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,SAAS,CAAC,YAAY,GAAG,GAAG,CAAC;YAClC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;YAC9C,gCAAgC;YAC/B,gDAAM,CAAC,KAAI,CAAC,SAAS,CAAC,WAAW,EAAE,UAAC,IAAI;gBACtC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC;qBACrC,SAAS,CACR,UAAC,GAAG;oBACF,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACpD,CAAC,CACF;gBACL,2CAA2C;YAC3C,CAAC,CAAC,CAAC;YAEH,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACvC,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC3B,KAAK,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrB,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC3B,QAAQ,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAC3B,IAAI,EAAE,CAAC,EAAE,CAAC;gBACV,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACnB,cAAc,EAAE,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBACvC,gBAAgB,EAAE,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBAC3C,gBAAgB,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;gBACtD,UAAU,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;gBAC1C,MAAM,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBAClC,KAAK,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBAChC,QAAQ,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;gBACtC,sBAAsB,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC;gBAClE,SAAS,EAAE,CAAC,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aAEzC,CAAC,CAAC;YAEH,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;iBACtC,SAAS,CACR,UAAC,GAAG;gBACF,KAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;oBAClC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC;iBAClB,CAAC,CAAC;YACL,CAAC,CACF;YACH,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CACF;IAEL,CAAC;IAED,sDAAqB,GAArB,UAAsB,KAAU;QAAhC,iBAcC;QAbC,IAAI,IAAI,GAAG;YACT,IAAI,EAAE,KAAK,CAAC,KAAK;SAClB;QAED,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC;aACnC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAChC,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,+CAAc,GAAd;QAAA,iBAeC;QAdC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;aAChC,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,IAAI;gBACf,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,CACF;IACL,CAAC;IAED,2CAAU,GAAV;QACE,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,8CAAa,GAAb,UAAc,KAAK;QACjB,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,gDAAe,GAAf,UAAgB,KAAU,EAAE,KAAK,EAAE,IAAI;QACrC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACjB,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC,MAAM,CAAC;QACjE,CAAC;QACD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,wDAAuB,GAAvB;QAAA,iBAqBC;QApBC,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,GAAG;YACL,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,UAAU,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,UAAU;YACrD,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK;YAC3C,QAAQ,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,QAAQ;YACjD,WAAW,EAAE,IAAI,CAAC,cAAc;YAChC,8DAA8D;YAC9D,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB;QAED,IAAI,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,IAAI,CAAC;aACnD,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,EAAE,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5E,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACxC,CAAC,CACF;IACL,CAAC;IAGD,6CAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,MAAM,CAAC,CAAC,CAAC;YACjC,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC;YACjE,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;gBAClC,SAAS,EAAE,WAAW;aACvB,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,iDAAgB,GAAhB,UAAiB,KAAU;QACzB,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;YAClC,qBAAqB,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;YACzC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK;SAC3D,CAAC,CAAC;IACL,CAAC;IAED,4CAAW,GAAX,UAAY,KAAU;QACpB,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;YAClC,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK;SACtE,CAAC,CAAC;IACL,CAAC;IAED,+CAAc,GAAd;QAAA,iBAYC;QAXC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,gDAAM,CAAC,IAAI,CAAC,cAAc,EAAE,UAAC,IAAI;YAC/B,IAAI,OAAO,GAAG,qDAAW,CAAC,KAAI,CAAC,WAAW,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;YACzD,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;YAClC,KAAK,EAAE,KAAK;YACZ,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,KAAK;SAClB,CAAC,CAAC;IACL,CAAC;IAjN8B;QAA9B,gEAAS,CAAC,kBAAkB,CAAC;kCAAmB,yDAAU;oEAAC;IADjD,sBAAsB;QALlC,gEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAsBiC,uEAAW,EAA2B,mFAAe,EAAsB,yDAAU,EAA0B,gFAAc,EAAc,2DAAW,EAA4B,4EAAgB,EAAiB,+DAAc,EAAkB,uDAAM;OArB/Q,sBAAsB,CAmNlC;IAAD,6BAAC;CAAA;AAnNkC;;;;;;;;AClBnC;AACA;;;AAGA;AACA,yCAA0C,2BAA2B,oBAAoB,uBAAuB,wBAAwB,GAAG,sBAAsB,2BAA2B,mBAAmB,GAAG,mBAAmB,qBAAqB,sBAAsB,iBAAiB,kBAAkB,GAAG,iBAAiB,qCAAqC,GAAG,oBAAoB,qBAAqB,GAAG,aAAa,mBAAmB,gBAAgB,kBAAkB,4BAA4B,+BAA+B,wBAAwB,GAAG,mBAAmB,iBAAiB,KAAK;;AAE5lB;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,iBAAiB,m5BAAm5B,YAAY,oKAAoK,gBAAgB,+CAA+C,wHAAwH,kBAAkB,YAAY,cAAc,iBAAiB,+GAA+G,kBAAkB,gBAAgB,cAAc,gBAAgB,gGAAgG,oCAAoC,mDAAmD,oCAAoC,gDAAgD,gCAAgC,yFAAyF,0CAA0C,6CAA6C,iCAAiC,iDAAiD,gCAAgC,0LAA0L,+DAA+D,gBAAgB,yJAAyJ,wBAAwB,WAAW,WAAW,aAAa,4BAA4B,gBAAgB,8EAA8E,yCAAyC,+BAA+B,2GAA2G,oKAAoK,6KAA6K,wBAAwB,WAAW,WAAW,aAAa,4BAA4B,gBAAgB,gFAAgF,iNAAiN,qEAAqE,0CAA0C,kHAAkH,uXAAuX,cAAc,iBAAiB,0EAA0E,YAAY,0OAA0O,uEAAuE,wKAAwK,oIAAoI,iBAAiB,kCAAkC,gBAAgB,uCAAuC,iBAAiB,4DAA4D,WAAW,gEAAgE,0BAA0B,WAAW,UAAU,gCAAgC,sPAAsP,mJAAmJ,0BAA0B,UAAU,sCAAsC,mBAAmB,6IAA6I,gMAAgM,iBAAiB,gHAAgH,YAAY,sVAAsV,kJAAkJ,0BAA0B,4CAA4C,sBAAsB,gUAAgU,YAAY,mBAAmB,0KAA0K,YAAY,mBAAmB,+CAA+C,mBAAmB,seAAse,mBAAmB,iUAAiU,YAAY,oBAAoB,6KAA6K,YAAY,4EAA4E,MAAM,mBAAmB,qrDAAqrD,iEAAiE,gBAAgB,4OAA4O,upCAAupC,eAAe,0DAA0D,+BAA+B,yWAAyW,0CAA0C,wJAAwJ,+BAA+B,wEAAwE,+BAA+B,kFAAkF,wBAAwB,mfAAmf,wKAAwK,gG;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUhma;AAE+B;AACP;AAGiB;AACH;AACA;AAC7B;AACS;AAWzC;IAgBE,gCAAoB,cAA8B,EAAU,cAA8B,EAAU,eAAgC,EAAU,gBAAkC,EAAU,KAAqB;QAA3L,mBAAc,GAAd,cAAc,CAAgB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAgB;QARvM,SAAI,GAAG,EAAE,CAAC;QAGX,gBAAW,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QACjC,aAAQ,GAAa,IAAI,yDAAQ,CAAC,OAAO,CAAC,CAAC;QAE3C,oBAAe,GAAY,KAAK,CAAC;IAGxC,CAAC;IAED,4CAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC;QAC7D,CAAC;IACH,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YACpD,KAAI,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACvB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBAC1B,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACtC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,aAAa,CAAC;gBACpC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC;gBAChD,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC;gBACrC,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;gBACtE,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACxE,CAAC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,mDAAkB,GAAlB;QACE,8BAA8B;QAC9B,wBAAwB;QACxB,EAAE;QACF,IAAI;IACN,CAAC;IAED,gDAAe,GAAf;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IAED,4CAAW,GAAX;QAAA,iBA6BC;QA5BC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAE;YACrD,UAAU,EAAE,UAAC,MAAM;gBACjB,IAAI,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;gBAClD,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBACrC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;gBAC9C,EAAE,CAAC,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC;oBACzB,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;oBACtC,IAAI,IAAI,GAAG;wBACT,GAAG,EAAE,GAAG;wBACR,KAAK,EAAE,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,GAAG,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC;qBAChG;oBAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAElB,KAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC;yBAC1C,SAAS,CACR,UAAC,GAAG;wBACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC,EACD,UAAC,GAAG;wBACF,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;oBACrC,CAAC,CACF;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,GAAG,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,GAAG,GAAG,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;gBAC9G,CAAC;YACH,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAGD,iDAAgB,GAAhB,UAAiB,EAAU;QAA3B,iBAyDC;QAxDC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;aAClD,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;YAEzB,KAAI,CAAC,SAAS,CAAC,WAAW,GAAG,EAAE,CAAC;YAChC,mBAAmB;YACnB,gDAAM,CAAC,KAAI,CAAC,SAAS,CAAC,WAAW,EAAE,UAAC,IAAI;gBACtC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC;qBACrC,SAAS,CACR,UAAC,GAAG;oBAEF,GAAG,CAAC,iBAAiB,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;oBAC1E,iCAAiC;oBACjC,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACrC,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,GAAG,CAAC,iBAAiB,CAAC,CAAC;oBACrE,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC;gBAGnD,CAAC,EAAE,UAAC,GAAG;gBAEP,CAAC,EAAE;oBACF,yDAAyD;oBACxD,4DAA4D;oBAC9D,+EAA+E;oBAC9E,QAAQ;oBACR,IAAI;oBACH,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;wBACpC,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;oBAChC,CAAC;oBACD,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;oBACtE,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACxE,CAAC,CACF;YACL,CAAC,CAAC,CAAC;YAGH,mBAAmB;YACnB,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,KAAI,CAAC,SAAS,CAAC,WAAW,CAAC;iBAChE,SAAS,CACR,UAAC,GAAG;gBACF,KAAI,CAAC,SAAS,CAAC,YAAY,GAAG,GAAG,CAAC;YACpC,CAAC,EACD,UAAC,GAAG;YAEJ,CAAC,EACD;gBACE,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;YAC9B,CAAC,CACF;QACL,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF;IACL,CAAC;IAED,gDAAe,GAAf,UAAgB,CAAC,EAAE,qBAAqB;QAEtC,IAAI,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,EACvB,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC;QAElF,IAAI,GAAG,GAAG,qBAAqB,IAAI,KAAK,CAAC;QAEzC,qBAAqB;QACrB,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC;QAED,6BAA6B;QAC7B,KAAK,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAEnM,4BAA4B;QAC5B,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAE9F,8BAA8B;QAC9B,MAAM,GAAG,CAAC,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,cAAc,EAAE,cAAc,EAAE,qBAAqB,EAAE,eAAe,EAAE,cAAc,EAAE,kBAAkB,EAAE,eAAe,EAAE,gBAAgB,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;QAEzV,gEAAgE;QAChE,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QACtB,MAAM,GAAG,EAAE,CAAC;QACZ,OAAO,KAAK,GAAG,CAAC,EAAE,CAAC;YACjB,GAAG,GAAG,KAAK,CAAC;YACZ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACnE,CAAC;QAED,wFAAwF;QACxF,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;QAC1B,EAAE,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QACD,0CAA0C;QAC1C,KAAK,GAAG,EAAE,CAAC;QACX,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/B,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,mDAAmD;gBACnD,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;gBAErD,iEAAiE;gBACjE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClB,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBAChB,CAAC;gBAED,+DAA+D;gBAC/D,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;gBAED,wCAAwC;gBACxC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;gBAED,wCAAwC;gBACxC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC3B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;gBAED,sDAAsD;gBACtD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvB,2EAA2E;oBAC3E,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC;wBAC/B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAClB,CAAC;gBACH,CAAC;gBAED,4CAA4C;gBAC5C,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5B,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC;gBAChC,CAAC;YACH,CAAC;QACH,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IAnO0B;QAA1B,gEAAS,CAAC,cAAc,CAAC;kCAAe,yDAAU;gEAAC;IAC3C;QAAR,4DAAK,EAAE;;iEAAoB;IAHjB,sBAAsB;QALlC,gEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAiBoC,gFAAc,EAA0B,gFAAc,EAA2B,mFAAe,EAA4B,4EAAgB,EAAiB,+DAAc;OAhBpM,sBAAsB,CAsOlC;IAAD,6BAAC;CAAA;AAtOkC;;;;;;;;AC/BnC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wEAAwE,iZAAiZ,8BAA8B,+fAA+f,uCAAuC,6dAA6d,oBAAoB,kPAAkP,wjCAAwjC,aAAa,m/BAAm/B,wpBAAwpB,kEAAkE,yBAAyB,oCAAoC,2BAA2B,oCAAoC,2BAA2B,0CAA0C,2BAA2B,0CAA0C,8FAA8F,gDAAgD,gEAAgE,gDAAgD,4EAA4E,8CAA8C,uGAAuG,+CAA+C,mDAAmD,yBAAyB,2BAA2B,4CAA4C,2BAA2B,oBAAoB,oHAAoH,oBAAoB,sGAAsG,oBAAoB,gHAAgH,uCAAuC,gJAAgJ,sCAAsC,iGAAiG,+BAA+B,o8CAAo8C,4XAA4X,2BAA2B,6EAA6E,gCAAgC,+PAA+P,kBAAkB,uFAAuF,aAAa,8mDAA8mD,oF;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3jU;AAES;AACM;AAEtB;AAE6B;AACT;AACY;AAOhE;IAcE,kCAAoB,eAAgC,EAAU,MAAc,EAAU,gBAAkC,EAAU,cAA8B,EAAU,WAAwB;QAA9K,oBAAe,GAAf,eAAe,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAb3L,gBAAW,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QACjC,kBAAa,GAAgB,EAAE,CAAC;QAChC,eAAU,GAAG,UAAU,CAAC;QAIxB,qBAAgB,GAAY,KAAK,CAAC;QAClC,qBAAgB,GAAY,KAAK,CAAC;QAClC,2BAAsB,GAAY,KAAK,CAAC;QAExC,cAAS,GAAG,CAAC,CAAC;QACrB,uBAAkB,GAAW,CAAC,CAAC;IAG/B,CAAC;IAED,2CAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE;aACzC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,KAAK,CAAC;QACtC,CAAC,CACF;QACH,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,+BAA+B;IACjC,CAAC;IAED,uBAAuB;IACvB,uDAAoB,GAApB;QAAA,iBAWC;QAVC,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE;aACnC,SAAS,CACR,UAAC,GAAG;YACF,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;gBACf,KAAI,CAAC,oBAAoB,EAAE,CAAC;YAC9B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,oBAAoB,EAAE,CAAC;YAC9B,CAAC;QACH,CAAC,CACF;IACL,CAAC;IAED,uBAAuB;IACvB,uDAAoB,GAApB;QAAA,iBAOC;QANC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAE;aACxC,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,2BAA2B,EAAE,CAAC;QACrC,CAAC,CACF;IACL,CAAC;IAED,uDAAoB,GAApB;QAAA,iBA6CC;QA5CC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC;aACvD,SAAS,CACR,UAAC,GAAgB;YACf,gDAAM,CAAC,GAAG,EAAE,UAAC,SAAoB;gBAC/B,IAAI,QAAkB,CAAC;gBACvB,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC;qBAC3D,SAAS,CACR,UAAC,GAAa;oBACZ,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBAClB,QAAQ,GAAG,GAAG,CAAC;wBACf,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC1B,EAAE,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACrC,gDAAM,CAAC,SAAS,CAAC,WAAW,EAAE,UAAC,OAAO;gCACpC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;qCACxC,SAAS,CACR,UAAC,GAAY;oCACX,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCACpC,CAAC,CACF;4BACL,CAAC,CAAC,CAAC;wBACL,CAAC;wBACD,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;6BACxC,SAAS,CACR,UAAC,GAAG;4BACF,QAAQ,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;wBAC7B,CAAC,CACF;wBACH,SAAS,CAAC,YAAY,GAAG,QAAQ,CAAC;wBAClC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACrC,CAAC;gBACH,CAAC,CACF;YACL,CAAC,CAAC,CAAC;QACL,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,EACD;YACE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACnD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC,CACF;IACL,CAAC;IAED,8DAA2B,GAA3B;QAAA,iBAUC;QATC,IAAI,CAAC,gBAAgB,CAAC,2BAA2B,EAAE;aAChD,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,oBAAoB,EAAE,CAAC;QAC9B,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACzC,CAAC,CACF;IACL,CAAC;IAED,sDAAmB,GAAnB,UAAoB,SAAoB;QACtC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,SAAS,CAAC;aACjD,SAAS,CACR,UAAC,GAAG;QACJ,CAAC,EACD,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,+CAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,8CAAW,GAAX,UAAY,KAAU;QACpB,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,MAAM,CAAC;QACT,CAAC;QACD,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACjC,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC;YAClC,gDAAM,CAAC,IAAI,CAAC,aAAa,EAAE,UAAC,IAAI;gBAC9B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC/C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;QAChC,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,eAAe,CAAC,CAAC,CAAC;YAC5C,gDAAM,CAAC,IAAI,CAAC,aAAa,EAAE,UAAC,IAAI;gBAC9B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;oBACrD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;QAChC,CAAC;QACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,CAAC,CAAC;YACnC,gDAAM,CAAC,IAAI,CAAC,aAAa,EAAE,UAAC,IAAI;gBAC9B,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBACvD,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;QAChC,CAAC;IACH,CAAC;IAED,+CAAY,GAAZ,UAAa,MAAc,EAAE,SAAoB;QAC/C,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;YACnC,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;YAC3B,oCAAoC;YACnC,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;YAC3B,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC;YACzB,SAAS,CAAC,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC;YACvC,uCAAuC;QACzC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,gBAAgB,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;QACpC,CAAC;QAED,SAAS,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;QAC7B,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,SAAS,CAAC;aACnD,SAAS,CACR,UAAC,GAAG;QACJ,CAAC,CACF;IACL,CAAC;IAED,qDAAkB,GAAlB,UAAmB,SAAoB;QACrC,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,SAAS,CAAC;aAChD,SAAS,CACR,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CACF;IACL,CAAC;IAED,qDAAkB,GAAlB,UAAmB,KAAU;QAA7B,iBAaC;QAZC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC;QACT,CAAC;QACD,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,gDAAM,CAAC,IAAI,CAAC,aAAa,EAAE,UAAC,IAAI;YAC9B,EAAE,CAAC,CAAC,mDAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;gBAC/C,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;IAChC,CAAC;IAED;;;;;;;;;;;;;;;;;;OAkBG;IAEH,yCAAM,GAAN,UAAO,YAAY;QACjB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAED,qDAAkB,GAAlB,UAAmB,MAAM;QAAzB,iBAmBC;QAlBC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC;iBACrD,SAAS,CACR,UAAC,GAAG;gBACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,aAAa,GAAG,mDAAS,CAAC,KAAI,CAAC,aAAa,EAAE,qDAAW,CAAC,KAAI,CAAC,aAAa,EAAE;wBACjF,GAAG,EAAE,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC;qBAC9B,CAAC,CAAC,CAAC;oBACJ,KAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;gBACtC,CAAC;YACH,CAAC,EACD,UAAC,GAAG;YACJ,CAAC,CACF;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAC9B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACtC,CAAC;IACH,CAAC;IAED,kBAAkB;IAClB,6CAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAlQU,wBAAwB;QALpC,gEAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAeqC,mFAAe,EAAkB,uDAAM,EAA4B,4EAAgB,EAA0B,gFAAc,EAAuB,uEAAW;OAdvL,wBAAwB,CAoQpC;IAAD,+BAAC;CAAA;AApQoC;;;;;;;;;;;;;;;;;;AChBI;AACc;AAEvD,IAAM,eAAe,GAAG,EACvB,CAAC;AASF;IAAA;IAAsC,CAAC;IAA1B,sBAAsB;QARlC,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,6DAAY,CAAC,QAAQ,CAAC,eAAe,CAAC;aACzC;YACD,OAAO,EAAE;gBACL,6DAAY;aACf;SACJ,CAAC;OACW,sBAAsB,CAAI;IAAD,6BAAC;CAAA;AAAJ;;;;;;;;ACbnC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,uQAAuQ,uCAAuC,0jBAA0jB,0vBAA0vB,oCAAoC,2BAA2B,oCAAoC,2BAA2B,0CAA0C,2BAA2B,0CAA0C,0FAA0F,gDAAgD,gEAAgE,gDAAgD,4EAA4E,8CAA8C,wGAAwG,+CAA+C,0DAA0D,yBAAyB,kCAAkC,4CAA4C,8BAA8B,oBAAoB,wHAAwH,oBAAoB,sGAAsG,oBAAoB,gHAAgH,uCAAuC,yEAAyE,yCAAyC,2IAA2I,sCAAsC,iGAAiG,+BAA+B,mxDAAmxD,4XAA4X,2BAA2B,6EAA6E,gCAAgC,+PAA+P,kBAAkB,uFAAuF,aAAa,smEAAsmE,oBAAoB,cAAc,sTAAsT,wBAAwB,UAAU,uBAAuB,0P;;;;;;;;;;;;;;;;;;;;;;;;;ACAh8Q;AAEM;AAGF;AACY;AACH;AAC7B;AAOhC;IASE,kCAAoB,eAAgC,EAAU,gBAAkC,EAAU,cAA8B,EAAU,WAAwB;QAAtJ,oBAAe,GAAf,eAAe,CAAiB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;QAPnK,kBAAa,GAAU,EAAE,CAAC;QAC1B,kBAAa,GAAgB,EAAE,CAAC;QAIhC,2BAAsB,GAAY,KAAK,CAAC;IAG/C,CAAC;IAED,2CAAQ,GAAR;IACA,CAAC;IAGD,gDAAa,GAAb,UAAc,KAAU;QACtB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,kCAAkC,EAAE,CAAC;IAC5C,CAAC;IAGD,qEAAkC,GAAlC;QAAA,iBAOC;QANC,IAAI,CAAC,gBAAgB,CAAC,+BAA+B,CAAC,IAAI,CAAC,UAAU,CAAC;aACnE,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;QAC3B,CAAC,CACF;IACL,CAAC;IAED,mDAAgB,GAAhB,UAAiB,IAAI;QAArB,iBA+CC;QA9CC,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,EAAE,CAAC;aAC/C,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,SAAoB;gBAC/B,IAAI,QAAkB,CAAC;gBAEvB,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC;oBAC1B,SAAS,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;gBAC/B,CAAC;gBAED,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC;qBAC3D,SAAS,CACR,UAAC,GAAa;oBACZ,QAAQ,GAAG,GAAG,CAAC;oBACf,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;wBACvB,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC1B,EAAE,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACrC,gDAAM,CAAC,SAAS,CAAC,WAAW,EAAE,UAAC,OAAO;gCACpC,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,OAAO,CAAC;qCACxC,SAAS,CACR,UAAC,GAAY;oCACX,QAAQ,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gCACpC,CAAC,CACF;4BACL,CAAC,CAAC;wBACJ,CAAC;wBAED,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;6BACxC,SAAS,CACR,UAAC,GAAG;4BACF,QAAQ,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;wBAC7B,CAAC,CACF;wBACD,SAAS,CAAC,YAAY,GAAG,QAAQ,CAAC;wBACpC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBACrC,CAAC;gBACH,CAAC,CACF;YACL,CAAC,CAAC;QACJ,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QAC3C,CAAC,CACF;IACL,CAAC;IAGD,+CAAY,GAAZ,UAAa,MAAc,EAAE,SAAoB;QAC/C,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;YACnC,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;YAC1B,mCAAmC;YACnC,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;YAC3B,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC;YACzB,SAAS,CAAC,UAAU,GAAG,SAAS,CAAC,KAAK,CAAC;YACxC,wCAAwC;QACzC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,IAAI,gBAAgB,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;QACpC,CAAC;QAED,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC;YAClC,SAAS,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,SAAS,CAAC;aACnD,SAAS,CACR,UAAC,GAAG;QAEJ,CAAC,CACF;IACL,CAAC;IAED,qDAAkB,GAAlB,UAAmB,SAAoB;QACrC,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,SAAS,CAAC;aAChD,SAAS,CACR,UAAC,GAAG;YACF,oBAAoB;QACtB,CAAC,EACD,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC7C,CAAC,CACF;IACL,CAAC;IAEF;;;;;;;;;;;;;;;;;;QAkBI;IAEH,yCAAM,GAAN,UAAO,SAAoB;QACzB,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;IAChC,CAAC;IAGD,qDAAkB,GAAlB,UAAmB,MAAM;QAAzB,iBAoBC;QAnBC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC;iBACrD,SAAS,CACR,UAAC,GAAG;gBACF,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,aAAa,GAAG,mDAAS,CAAC,KAAI,CAAC,aAAa,EAAE,qDAAW,CAAC,KAAI,CAAC,aAAa,EAAE;wBACjF,GAAG,EAAE,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC;qBAC9B,CAAC,CAAC,CAAC;oBACJ,KAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;gBACtC,CAAC;YACH,CAAC,EACD,UAAC,GAAG;YAEJ,CAAC,CACF;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAC9B,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;QACtC,CAAC;IACH,CAAC;IAtKU,wBAAwB;QALpC,gEAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAUqC,mFAAe,EAA4B,4EAAgB,EAA0B,gFAAc,EAAuB,uEAAW;OAT/J,wBAAwB,CAyKpC;IAAD,+BAAC;CAAA;AAzKoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfE;AACM;AAEM;AACN;AACmB;AACE;AACY;AACS;AAClC;AACkC;AAC7B;AACT;AACgC;AACA;AACpB;AACH;AAC+B;AA8BzF;IAAA;IACA,CAAC;IADY,eAAe;QA5B3B,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,6DAAY;gBACZ,mEAAmB;gBACnB,6DAAY;gBACZ,2DAAW;gBACX,mEAAmB;gBACnB,yFAAsB;aACvB;YACD,YAAY,EAAE;gBACZ,qGAAqB;gBACrB,8GAAwB;gBACxB,8GAAwB;gBACxB,yGAAsB;gBACtB,yGAAsB;gBACtB,+GAAwB;aACzB;YACD,OAAO,EAAE;gBACP,yGAAsB;aACvB;YACD,SAAS,EAAE;gBACT,4EAAgB;gBAChB,iFAAc;gBACd,wEAAW;gBACX,oFAAe;gBACf,iFAAc;aACf;SACF,CAAC;OACW,eAAe,CAC3B;IAAD,sBAAC;CAAA;AAD2B;;;;;;;;;;;;;;;;;;;;;;;AC/Ca;AACgB;AACE;AAC5B;AAG/B;IAIE,0BAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAFnC,iBAAY,GAAG,8EAAW,CAAC,UAAU,GAAG,YAAY,CAAC;IAG7D,CAAC;IAED,0CAAe,GAAf,UAAgB,SAAS;QACvB,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC;QACjD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACjE,CAAC;IAED,mDAAwB,GAAxB,UAAyB,EAAE;QACzB,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,iBAAiB,GAAG,EAAE,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,0DAA+B,GAA/B,UAAgC,KAAK;QACnC,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,4BAA4B,GAAG,KAAK,CAAC;QACnE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,4CAAiB,GAAjB,UAAkB,IAAI;QACpB,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,0CAAe,GAAf,UAAgB,SAAS;QACvB,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,WAAW,GAAG,SAAS,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,6CAAkB,GAAlB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,yCAAc,GAAd,UAAe,IAAS;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,sCAAW,GAAX,UAAY,IAAS;QACnB,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC;QAC7C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,2CAAgB,GAAhB,UAAiB,IAAY,EAAE,EAAU;QACvC,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,MAAM,GAAG,EAAE,CAAC;QACjD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,2CAAgB,GAAhB,UAAiB,IAAS;QACxB,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,kBAAkB,CAAC;QACjD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,8CAAmB,GAAnB,UAAoB,IAAS;QAC3B,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,8CAAmB,GAAnB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,iBAAiB,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,uDAA4B,GAA5B;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,yBAAyB,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,+CAAoB,GAApB,UAAqB,SAAiB;QACpC,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,gCAAgC,GAAG,SAAS,CAAC;QAC3E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,yCAAc,GAAd;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,iBAAiB,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACnD,CAAC;IAED,gDAAqB,GAArB,UAAsB,IAAS;QAC7B,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC3D,CAAC;IAED,2CAA2C;IAC3C,mCAAQ,GAAR,UAAS,IAAS;QAChB,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,sDAA2B,GAA3B;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,uBAAuB,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAEF;;;QAGI;IAEH,qDAA0B,GAA1B,UAA2B,IAAS;QAClC,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAED,0CAAe,GAAf,UAAgB,SAAS;QACvB,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACjE,CAAC;IAED,6CAAkB,GAAlB,UAAmB,SAAS;QAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,uBAAuB,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACjE,CAAC;IAED,6CAAkB,GAAlB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,uBAAuB,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,+CAAoB,GAApB;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,6CAAkB,GAAlB,UAAmB,IAAS;QAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5D,CAAC;IAnIU,gBAAgB;QAD5B,iEAAU,EAAE;yCAKe,+EAAiB;OAJhC,gBAAgB,CAoI5B;IAAD,uBAAC;CAAA;AApI4B;;;;;;;;ACN7B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,soBAAsoB,0BAA0B,0KAA0K,YAAY,KAAK,aAAa,qqBAAqqB,mBAAmB,2BAA2B,oBAAoB,2BAA2B,mBAAmB,2BAA2B,sBAAsB,2BAA2B,uBAAuB,2BAA2B,oBAAoB,yI;;;;;;;;;;;;;;;;;;;;;;;;ACA/tD;AACI;AAEJ;AACf;AACD;AAMhC;IAKE,oCAAoB,WAAwB,EAAU,aAA4B;QAA9D,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAJ3E,aAAQ,GAAW,EAAE,CAAC;QAEtB,eAAU,GAAa,EAAE,CAAC;IAGjC,CAAC;IAED,6CAAQ,GAAR;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,iDAAY,GAAZ,UAAa,EAAE;QAAf,iBAgCC;QA/BC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC;aACrC,SAAS,CACR,UAAC,GAAG;YACF,gDAAM,CAAC,GAAG,EAAE,UAAC,QAAQ;gBACnB,IAAI,MAAM,GAAG,IAAI,uDAAM,EAAE,CAAC;gBAC1B,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;gBACvC,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAC;gBAC9C,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;gBACvC,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;qBAC1C,SAAS,CACR,UAAC,GAAG;oBACF,MAAM,CAAC,WAAW,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC;oBACxC,MAAM,CAAC,YAAY,GAAG,GAAG,CAAC,cAAc,CAAC,CAAC;oBAC1C,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC;oBACpC,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAC1B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC,EACD,UAAC,GAAG;oBACF,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;gBACpC,CAAC,CACF;YACL,CAAC,CAAC;QACJ,CAAC,EACD,UAAC,GAAG;QACJ,CAAC,EACD;YACE,gCAAgC;QAClC,CAAC,CACF;IACL,CAAC;IAED,mDAAc,GAAd;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;aAC1B,SAAS,CACR,UAAC,GAAG;YACF,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACtB,CAAC,CACF;IACL,CAAC;IArDU,0BAA0B;QALtC,gEAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;;;SAGpC,CAAC;yCAMiC,uEAAW,EAAyB,sEAAa;OALvE,0BAA0B,CAwDtC;IAAD,iCAAC;CAAA;AAxDsC;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACM;AACkD;AAChD;AACE;AACE;AAgBnD;IAAA;IACA,CAAC;IADY,YAAY;QAdxB,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,6DAAY;gBACZ,mEAAmB;aACpB;YACD,YAAY,EAAE;gBACZ,sHAA0B;aAC3B;YACD,OAAO,EAAE,EAAE;YACX,SAAS,EAAE;gBACT,sEAAa;gBACb,uEAAW;aACZ;SACF,CAAC;OACW,YAAY,CACxB;IAAD,mBAAC;CAAA;AADwB;;;;;;;;;;;;;;;;;;;;;;;ACrBgB;AACgB;AACE;AAC5B;AAG/B;IAGE,uBAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAFnC,cAAS,GAAG,8EAAW,CAAC,UAAU,GAAG,SAAS,CAAC;IAGvD,CAAC;IAED,8CAAsB,GAAtB,UAAuB,EAAE;QACvB,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,yBAAyB,GAAG,EAAE,CAAC;QAC1D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,yCAAiB,GAAjB,UAAkB,EAAE;QAClB,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,mBAAmB,GAAG,EAAE,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAED,iCAAS,GAAT,UAAU,EAAE;QACV,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,uBAAuB,GAAG,EAAE,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrD,CAAC;IAnBU,aAAa;QADzB,iEAAU,EAAE;yCAIe,+EAAiB;OAHhC,aAAa,CAqBzB;IAAD,oBAAC;CAAA;AArByB;;;;;;;;;ACN1B;AAAA;IAAA;QAGE,gBAAW,GAAW,CAAC,CAAC;QACxB,iBAAY,GAAW,CAAC,CAAC;QACzB,cAAS,GAAW,CAAC,CAAC;IAExB,CAAC;IAAD,aAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;ACPwC;AACM;AAgB/C;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAb1B,+DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,6DAAY;aACf;YACD,YAAY,EAAE,EACb;YACD,OAAO,EAAE,EAER;YACD,SAAS,EAAE,EAEV;SACJ,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBc;AACE;AACV;AAIjC;IAOE;QAAA,iBAIC;QAPO,aAAQ,GAAW,CAAC,CAAC;QAI3B,IAAI,CAAC,SAAS,GAAG,IAAI,mEAAU,CAAC,kBAAQ;YACtC,KAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;sBAXU,aAAa;IAcjB,+BAAO,GAAd,UAAe,KAAU;QACvB,IAAI,SAAS,GAAU,EAAE,CAAC;QAC1B,IAAM,QAAQ,GAAa,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC9C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACzC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC;QACD,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAEY,kCAAU,GAAvB,UAAwB,WAAW,EAAE,SAAS;;;;;;;wBAE5C,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;4BACtB,MAAM,gBAAC;wBACT,CAAC;wBACD,IAAI,CAAC,WAAW,EAAE;6BACf,SAAS,CAAC,kBAAQ;4BACjB,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;wBACjC,CAAC,CAAC,CAAC;;;;wBAGM,qBAAM,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC;;wBAAlD,MAAM,GAAG,SAAyC,CAAC;wBACnD,sBAAO,IAAI,EAAC;;;wBAEZ,OAAO,CAAC,GAAG,CAAC,OAAK,CAAC,CAAC;wBACnB,sBAAO,KAAK,EAAC;;;;;KAEhB;IAEM,mCAAW,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAEM,8BAAM,GAAb,UAAc,GAAW,EAAE,KAAa;QAAxC,iBA6BC;QA5BC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,IAAI,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;YACxC,IAAI,GAAG,GAAmB,IAAI,cAAc,EAAE,CAAC;YAE/C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACtC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACxD,CAAC;YAED,GAAG,CAAC,kBAAkB,GAAG;gBACvB,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC;oBACzB,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;wBACvB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACxB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACvB,CAAC;gBACH,CAAC;YACH,CAAC,CAAC;YAEF,eAAa,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;YAE3C,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;YAC5B,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEnB,GAAG,CAAC,MAAM,CAAC,UAAU,GAAG,UAAC,KAAK;gBAC5B,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;gBAC7D,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC5C,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAEM,qCAAuB,GAA9B,UAA+B,QAAgB;QAC7C,WAAW,CAAC;QACZ,CAAC,EAAE,QAAQ,CAAC,CAAC;IACf,CAAC;IAhFU,aAAa;QADzB,iEAAU,EAAE;;OACA,aAAa,CAmFzB;IAAD,oBAAC;;CAAA;AAnFyB;;;;;;;;;;ACNnB,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,0CAA0C;IAC1C,UAAU,EAAE,iCAAiC;CAC9C,CAAC;AAGF,+DAA+D;AAE/D,iCAAiC;;;;;;;;;;;;;;ACTc;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,qEAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"app/general/general.module\": [\n\t\t\"../../../../../src/app/general/general.module.ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: 'dashboard',\n        pathMatch: 'full'\n    },\n    {\n        path: 'dashboard',\n        loadChildren: 'app/general/general.module#GeneralModule'\n    }\n    \n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"!isLoggedIn()\\\" class=\\\"container-fluid\\\">\\n\\n\\n  <nav class=\\\"navbar navbar-default navbar-fixed-top\\\" style=\\\"background-color: rgb(255, 255, 255)\\\" >\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" style=\\\"color: #fff; margin-top:20px;\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\">\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n        </button>\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\" style=\\\"color: #fff; height:25%;\\\"> <img src=\\\"../../../assets/dist/img/Aquality.jpg\\\" style=\\\"height:30%; width:180px; margin-top:8px; margin-left:15px;\\\" />  </a> \\n      </div>\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"myNavbar\\\">\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <form class=\\\"form-inline pull-right\\\" style=\\\"margin-top:20px; padding: 2px;\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"sr-only\\\" for=\\\"username\\\">Username:</label>\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Enter username\\\"  #username>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"sr-only\\\" for=\\\"pwd\\\">Password:</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"pwd\\\" placeholder=\\\"Enter password\\\" #password>\\n            </div>\\n            \\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"login(username.value,password.value)\\\">Log in</button>\\n          </form>\\n        </ul>\\n      </div>\\n    </div>\\n    <div class=\\\"clearfix\\\"></div>\\n  </nav>\\n\\n\\n<div id=\\\"myCarousel\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\" style=\\\"margin-top: 90px;\\\">\\n      <!-- Indicators -->\\n      <ol class=\\\"carousel-indicators\\\">\\n        <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n        <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"1\\\"></li>\\n        <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"2\\\"></li>\\n      </ol>\\n  \\n      <!-- Wrapper for slides -->\\n      <div class=\\\"carousel-inner\\\" role=\\\"listbox\\\">\\n        <div class=\\\"item active\\\">\\n          <img src=\\\"../../../assets/dist/img/yourstory-renewable-energy.jpg\\\" style=\\\"height:400px; width: 100%;\\\" alt=\\\"Image\\\">\\n        </div>\\n  \\n        <div class=\\\"item\\\">\\n          <img src=\\\"../../../assets/dist/img/drop.jpg\\\" style=\\\"height:400px; width:100%;\\\" alt=\\\"Image\\\">\\n        </div>\\n  \\n        <div class=\\\"item\\\">\\n          <img src=\\\"../../../assets/dist/img/green_city_green.gif\\\" style=\\\"height:400px; width: 100%;\\\" alt=\\\"Image\\\">\\n        </div>\\n      </div>\\n  \\n      <!-- Left and right controls -->\\n      <a class=\\\"left carousel-control\\\" href=\\\"#myCarousel\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\n        <span class=\\\"glyphicon glyphicon-chevron-left\\\" aria-hidden=\\\"true\\\"></span>\\n        <span class=\\\"sr-only\\\">Previous</span>\\n      </a>\\n      <a class=\\\"right carousel-control\\\" href=\\\"#myCarousel\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\n        <span class=\\\"glyphicon glyphicon-chevron-right\\\" aria-hidden=\\\"true\\\"></span>\\n        <span class=\\\"sr-only\\\">Next</span>\\n      </a>\\n  </div>\\n\\n  <div class=\\\"container text-center\\\">\\n    <br>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <img src=\\\"../../../assets/dist/img/sustainable_1_lg.jpg\\\" class=\\\"img-responsive\\\" style=\\\"width:100%; height: 100%\\\" alt=\\\"Image\\\">\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <img src=\\\"../../../assets/dist/img/climateactionprogramme-org.jpg\\\" class=\\\"img-responsive\\\" style=\\\"width:100%; height: 100%\\\" alt=\\\"Image\\\">\\n      </div>\\n      <div class=\\\"col-sm-4\\\" style=\\\"font-weight: bold;font-style: italic;font-size: 16px; color: #6495ED;  text-align:  justify;\\\">\\n        <div class=\\\"well\\\">\\n         <p>We believe that innovation holds the key to growth and sustainability of any organization.</p>\\n        </div>\\n        <div class=\\\"well\\\">\\n         <p>As an entrepreneurial firm in an era of extreme competitiveness we move ahead by creating value rather than pursuing business</p>\\n        </div>\\n        <div class=\\\"well\\\">\\n         <p>The price of success is hard work, dedication to the job at hand, and the determination that whether we win or lose, we have applied the best of ourselves to the task at hand.</p>\\n        </div>\\n        <div class=\\\"well\\\">\\n         <p>Water and air, the two essential fluids on which all life depends.</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div><br>\\n\\n<!--Footer-->\\n<footer class=\\\"page-footer center-on-small-only unique-color-dark pt-0\\\" style=\\\"background-color: #212529;\\\">\\n\\n    <div style=\\\"background-color: #6495ED;\\\">\\n        <div class=\\\"container\\\">\\n            <!--Grid row-->\\n            <div class=\\\"row py-4 d-flex align-items-center\\\">\\n\\n                <!--Grid column-->\\n                <div class=\\\"col-md-6 col-lg-5 text-center text-md-left mb-4 mb-md-0\\\" style=\\\"margin-top: 7px; color:#fff;\\\">\\n                    <h4 class=\\\"mb-0 white-text\\\">Get connected with us on social networks!</h4>\\n                </div>\\n                <!--Grid column-->\\n\\n                <!--Grid column-->\\n                <div class=\\\"col-md-6 col-lg-7 text-center text-md-right\\\" style=\\\"margin-top:4px;\\\">\\n                  <!--Facebook-->\\n                  <a href=\\\"#\\\" class=\\\"icons-sm fb-ic ml-0\\\"><i class=\\\"fa fa-facebook white-text mr-lg-6\\\" style=\\\"font-size: 25px; padding: 15px;\\\"> </i></a>\\n                  <!--Twitter-->\\n                  <a href=\\\"#\\\" class=\\\"icons-sm tw-ic\\\"><i class=\\\"fa fa-twitter white-text mr-lg-6\\\" style=\\\"font-size: 25px; padding: 15px;\\\"> </i></a>\\n                  <!--Linkedin-->\\n                  <a href=\\\"#\\\" class=\\\"icons-sm li-ic\\\"><i class=\\\"fa fa-linkedin white-text mr-lg-4\\\" style=\\\"font-size: 25px;  padding: 15px;\\\"> </i></a>\\n                  <a href=\\\"#\\\" class=\\\"icons-sm ins-ic\\\"><i class=\\\"fa fa-youtube white-text mr-lg-4\\\" style=\\\"font-size: 25px; padding: 15px;\\\"> </i></a>\\n                  <a href=\\\"#\\\" class=\\\"icons-sm ins-ic\\\"><i class=\\\"fa fa-pinterest white-text mr-lg-4\\\" style=\\\"font-size: 25px; padding: 15px;\\\"> </i></a>\\n              </div>\\n                <!--Grid column-->\\n\\n            </div>\\n            <!--Grid row-->\\n        </div>\\n    </div>\\n\\n    <!--Footer Links-->\\n    <div class=\\\"container-fluid mt-5 mb-4 text-md-left\\\" style=\\\"background-color: #365264; opacity: 0.8; color: #fff; font-size: 16px;\\\">\\n      <div class=\\\"row mt-3\\\">\\n\\n          <!--First column-->\\n          <div class=\\\"col-md-3 col-lg-4 col-xl-3 mb-r\\\">\\n              <h4 class=\\\"title font-bold\\\"><strong>Aquality</strong></h4>\\n              <hr class=\\\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\\\" >\\n              <p style=\\\"text-align: justify;\\\">We believe that innovation holds the key to growth and sustainability of any organization. While high growth remains a key parameter to success but that in itself may not ensure community development and environmental replenishment</p>\\n          </div>\\n          <!--/.First column-->\\n\\n          <!--Second column-->\\n          <div class=\\\"col-md-2 col-lg-2 col-xl-2 mx-auto mb-r\\\" style=\\\"color:#fff;\\\">\\n              <h4 class=\\\"title font-bold\\\"><strong>Products</strong></h4>\\n              <hr class=\\\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\\\">\\n              <p><a style=\\\"color:#fff;\\\" href=\\\"air.html\\\">Air</a></p>\\n              <p><a style=\\\"color:#fff;\\\" href=\\\"water.html\\\">Water</a></p>\\n              <p><a style=\\\"color:#fff;\\\" href=\\\"energysolutions.html\\\">Energy</a></p>\\n            </div>\\n\\n          <!--Third column-->\\n          <div class=\\\"col-md-3 col-lg-2 col-xl-2 mx-auto\\\" style=\\\"color:#fff;\\\">\\n              <h4 class=\\\"title font-bold\\\"><strong>Useful links</strong></h4>\\n              <hr class=\\\"accent-2 mb-4 mt-0 d-inline-block mx-auto color: #fff;\\\">\\n              <div class=\\\"v1\\\">\\n              <p><a style=\\\"color:#fff;\\\" href=\\\"#!\\\">Log in</a></p>\\n              <p><a  style=\\\"color:#fff;\\\" href=\\\"#!\\\">Billing Application</a></p>\\n              <p><a style=\\\"color:#fff;\\\" href=\\\"aqualityhome.html\\\">About Us</a></p>\\n              <p><a style=\\\"color:#fff;\\\" href=\\\"#!\\\">Help</a></p>\\n            </div>\\n          </div>\\n          <!--/.Third column-->\\n\\n          <!--Fourth column-->\\n          <div class=\\\"col-md-4 col-lg-3 col-xl-3\\\">\\n              <h4 class=\\\"title font-bold\\\"><strong>Contact</strong></h4>\\n              <hr class=\\\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\\\">\\n              <p><i class=\\\"fa fa-home mr-3\\\"></i> # 8-1-284/OU/385/1&2 </p>\\n              <p><i class=\\\"fa fa-home mr-3\\\"></i> 4th Floor Bait-ul-Rida</p>\\n              <p><i class=\\\"fa fa-home mr-3\\\"></i> OU Colony Shaikpet, Lanco hills Lane</p>\\n              <p><i class=\\\"fa fa-home mr-3\\\"></i> Hyderabad, Telangana 500 008, India</p>\\n              <p><i class=\\\"fa fa-envelope mr-3\\\"></i> info@aquality.in | accounts@aquality.in</p>\\n              <p><i class=\\\"fa fa-phone mr-3\\\"></i> + 91 40 6888 8486 | + 91 709 389 8486</p>\\n          </div>\\n          <!--/.Fourth column-->\\n\\n      </div>\\n  </div>\\n    <!--/.Footer Links-->\\n\\n    <!-- Copyright-->\\n    <div class=\\\"footer-copyright\\\">\\n        <div class=\\\"container-fluid\\\" style=\\\" text-align:center; padding: 12px;\\\">\\n          \\n            <span style=\\\"color: #fff ;\\\">\\n            © 2018 Copyright:</span> <a href=\\\"http://aquality.co.in\\\" target=\\\"_blank\\\" style=\\\"color: #fff;\\\"> www.aquality.co.in</a>\\n          \\n        </div>\\n    </div>\\n    <!--/.Copyright -->\\n\\n</footer>\\n<!--/.Footer-->\\n\\n\\n</div>\\n\\n<!--<nav class=\\\"navbar navbar-fixed-top\\\" style=\\\"background-color:#2g2g2g;\\\">\\n\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Aquality Billing Software</a>\\n    </div>\\n    <form class=\\\"form-inline pull-right\\\" style=\\\"margin-top:6px; padding: 2px;\\\">\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"sr-only\\\" for=\\\"username\\\">Username:</label>\\n        <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Enter username\\\"  #username>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"sr-only\\\" for=\\\"pwd\\\">Password:</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"pwd\\\" placeholder=\\\"Enter password\\\" #password>\\n      </div>\\n      <div class=\\\"checkbox\\\">\\n        <label><input type=\\\"checkbox\\\" name=\\\"remember\\\" style=\\\"color:white;\\\"> Remember me</label>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"login(username.value,password.value)\\\">Log in</button>\\n    </form>\\n\\n    <div class=\\\"clearfix\\\"></div>\\n\\n    <div class=\\\"container-fluid\\\">\\n\\n      <div id=\\\"myCarousel\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">-->\\n        <!-- Indicators -->\\n        <!--<ol class=\\\"carousel-indicators\\\">\\n          <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n          <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"1\\\"></li>\\n          <li data-target=\\\"#myCarousel\\\" data-slide-to=\\\"2\\\"></li>\\n        </ol>-->\\n\\n        <!-- Wrapper for slides -->\\n        <!--<div class=\\\"carousel-inner\\\">\\n          <div class=\\\"item active\\\">\\n            <img src=\\\"../assets/dist/img/photo2.png\\\" alt=\\\"Los Angeles\\\" style=\\\"width:100%;\\\">\\n          </div>\\n\\n          <div class=\\\"item\\\">\\n            <img src=\\\"../assets/dist/img/photo2.png\\\" alt=\\\"Chicago\\\" style=\\\"width:100%;\\\">\\n          </div>\\n\\n          <div class=\\\"item\\\">\\n            <img src=\\\"../assets/dist/img/photo1.png\\\" alt=\\\"\\\" style=\\\"width:100%;\\\">\\n          </div>\\n        </div>-->\\n\\n        <!-- Left and right controls -->\\n        <!--<a class=\\\"left carousel-control\\\" href=\\\"#myCarousel\\\" data-slide=\\\"prev\\\">\\n          <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n          <span class=\\\"sr-only\\\">Previous</span>\\n        </a>\\n        <a class=\\\"right carousel-control\\\" href=\\\"#myCarousel\\\" data-slide=\\\"next\\\">\\n          <span class=\\\"glyphicon glyphicon-chevron-right\\\"></span>\\n          <span class=\\\"sr-only\\\">Next</span>\\n        </a>\\n      </div>\\n    </div>\\n</nav>-->\\n\\n\\n\\n\\n\\n\\n<!--<div *ngIf=\\\"!isLoggedIn()\\\" class=\\\"container\\\">\\n  <h1 style=\\\"text-align: center\\\" class=\\\"jumbotron\\\">CSBD Invoice App</h1>\\n  <hr>\\n  <br>\\n  <form class=\\\"form-horizontal\\\">\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-sm-2 control-label\\\">Username</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" #username>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-sm-2 control-label\\\">Password</label>\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" #password>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n        <div class=\\\"checkbox\\\">\\n          <label>\\n            <input type=\\\"checkbox\\\"> Remember me\\n          </label>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"login(username.value,password.value)\\\">Log in</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>-->\\n<app-dashboard *ngIf=\\\"isLoggedIn()\\\"></app-dashboard>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from './auth.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private authService: AuthService, private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n\n  login(username, password) {\n    if (username == 'admin' && password == 'admin') {\n      this.authService.setLogin(true);\n      localStorage.setItem('csbd-username', 'admin');\n      localStorage.setItem('csbd-password', 'admin');\n      location.reload()\n    } else {\n      this.authService.setLogin(false);\n      localStorage.setItem('csbd-username', '');\n      localStorage.setItem('csbd-password', '');\n    }\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {AppComponent} from './app.component';\nimport {GeneralModule} from \"./general/general.module\";\nimport {AppRoutingModule} from './app-routing.module';\nimport { NgxQRCodeModule } from 'ngx-qrcode2';\n// services\nimport {AuthService} from './auth.service';\nimport {CustomHttpService} from \"./custom-http.service\";\nimport {AutoCompleteModule, PickListModule, ConfirmDialogModule, SharedModule} from 'primeng/primeng';\nimport {UploadService} from './upload.service';\nimport { QRCodeModule } from 'angularx-qrcode';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    //routing module\n    AppRoutingModule,\n    //user defines modules\n    GeneralModule,\n    NgxQRCodeModule,\n    QRCodeModule,\n    AutoCompleteModule, PickListModule, ConfirmDialogModule, SharedModule,\n    NgbModule.forRoot()\n  ],\n  providers: [\n    AuthService,\n    CustomHttpService,\n    UploadService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content-wrapper {\\n    min-height: 1200px;\\n    /*font-size: 20px;*/\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/area/area-all/area-all.component.css\n// module id = ../../../../../src/app/area/area-all/area-all.component.css\n// module chunks = main","module.exports = \"\\n<section class=\\\"content-header\\\">\\n    <div class=\\\"col-xs-12\\\">\\n        <h2>\\n            All Areas\\n        </h2>\\n    </div>\\n</section>\\n<section class=\\\"content\\\">\\n    <!--  Page Content Here -->\\n\\n    <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"box box-primary\\\">\\n            <div class=\\\"box-header\\\">\\n                <h3 class=\\\"box-title\\\">List Of All Areas</h3>\\n                <br>\\n            </div>\\n            <!-- /.box-header -->\\n            <div class=\\\"box-body table-responsive no-padding\\\">\\n                <table class=\\\"table table-hover\\\">\\n                    <tbody>\\n                        <tr>\\n                            <th>Name</th>\\n                            <!--<th>Status</th>-->\\n                            <th>Action</th>\\n                        </tr>\\n                        <tr *ngFor=\\\"let area of areas | paginate: { itemsPerPage: 15, currentPage: p }\\\">\\n                            <td>{{ area.name }}</td>\\n                            <!--<td *ngIf=\\\"area.status\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\" (click)=\\\"toggleStatus(area._id,area.status)\\\"> Active</button>\\n                            </td>\\n                            <td *ngIf=\\\"!area.status\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"toggleStatus(area._id,area.status)\\\"> Inactive</button>\\n                            </td>-->\\n                            <td>\\n                                <a type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\" (click)=\\\"editArea(area._id)\\\"> Edit</a>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n\\n                </table>\\n            </div>\\n            <!-- /.box-body -->\\n        </div>\\n        <!-- /.box -->\\n        <div class=\\\"col-md-offset-4\\\">\\n            <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n        </div>\\n    </div>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/area/area-all/area-all.component.html\n// module id = ../../../../../src/app/area/area-all/area-all.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter, SimpleChange } from '@angular/core';\nimport { AreaService } from '../area.service';\nimport { Area } from '../area';\n\n@Component({\n  selector: 'app-area-all',\n  templateUrl: './area-all.component.html',\n  styleUrls: ['./area-all.component.css']\n})\nexport class AreaAllComponent implements OnInit {\n  @Input() areas: Area[] = [];\n  @Output() statusChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() showEditForm: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private areaService: AreaService) { }\n\n  ngOnInit() {\n  }\n\n  toggleStatus(id, status) {\n    let data = {\n      id: id,\n      status: !status\n    };\n\n    this.areaService.setStatus(data)\n      .subscribe(\n      (res) => {\n        if (res.status) {\n          this.statusChange.emit(true);\n        } else {\n          this.statusChange.emit(false);\n        }\n      },\n      (err) => {\n        console.log('Error in toggleStatus');\n      }\n      )\n  }\n\n  editArea(id) {\n    this.showEditForm.emit(id);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/area/area-all/area-all.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content-wrapper {\\n    min-height: 1200px;\\n    /*font-size: 20px;*/\\n}\\n\\n.box-primary {\\n    padding: 30px 30px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/area/area-create/area-create.component.css\n// module id = ../../../../../src/app/area/area-create/area-create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height:1000px\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"showSuccess\\\">New Area Added Successfully !!</div>\\n    <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"showError\\\">ERROR !! Please Try Again.</div>\\n\\n    <ol class=\\\"breadcrumb \\\">\\n      <li><a [routerLink]=\\\"[ '/dashboard/home' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Sofkul</a></li>\\n      <li><a [routerLink]=\\\"[ '/dashboard/area' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Area</a></li>\\n      <li class=\\\"active \\\">New</li>\\n    </ol>\\n  </div>\\n  <section class=\\\" content-header \\\">\\n    <div class=\\\"col-md-12\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\"\\n              (click)=\\\"createModeOn()\\\">\\n        <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> &nbsp;New Area\\n      </button>\\n      <h2 *ngIf=\\\"!editMode && createMode\\\">\\n        Add New Area\\n      </h2>\\n      <h2 *ngIf=\\\"editMode && !createMode\\\">\\n        Update Area\\n      </h2>\\n    </div>\\n  </section>\\n  <section class=\\\"content \\\" *ngIf=\\\"createMode || editMode\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"box box-primary\\\">\\n        <!--  Page Content Here -->\\n        <form class=\\\"form-horizontal \\\" [formGroup]=\\\"areaCreateForm\\\" (submit)=\\\"submitCreateAreaForm()\\\">\\n          <!--name-->\\n          <div class=\\\" form-group\\\">\\n            <label for=\\\"name\\\" class=\\\"col-sm-2 control-label \\\">Name</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input formControlName=\\\"name\\\" type=\\\"text \\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"area name \\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group \\\">\\n            <div class=\\\"col-sm-offset-2 col-sm-10 \\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"!editMode\\\">Save</button>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-warning\\\" *ngIf=\\\"editMode\\\">Update</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" *ngIf=\\\"editMode || createMode\\\" (click)=\\\"cancelEdit()\\\">Cancel</button>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n    </div>\\n  </section>\\n  <app-area-all (showEditForm)=\\\"showEditForm($event)\\\" (statusChange)=\\\"statusChanged($event)\\\"\\n                [areas]=\\\"areas\\\"></app-area-all>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/area/area-create/area-create.component.html\n// module id = ../../../../../src/app/area/area-create/area-create.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {FormGroup, FormBuilder, Validators} from \"@angular/forms\";\nimport {AreaService} from '../area.service';\nimport {Area} from '../area';\n\n@Component({\n  selector: 'app-area-create',\n  templateUrl: './area-create.component.html',\n  styleUrls: ['./area-create.component.css']\n})\nexport class AreaCreateComponent implements OnInit {\n\n  showSuccess: boolean = false;\n  showError: boolean = false;\n  public areaCreateForm: FormGroup;\n  public areas: Area[] = [];\n  editMode: boolean = false;\n  createMode: boolean = false;\n  private id: any;\n\n  constructor(private areaService: AreaService, private fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n    this.buildForm();\n    this.getAllArea();\n  }\n\n  buildForm() {\n    this.areaCreateForm = this.fb.group({\n      name: ['', Validators.required]\n    });\n  }\n\n  submitCreateAreaForm() {\n    this.showError = false;\n    this.showSuccess = false;\n    let data = {\n      id: this.id,\n      name: this.areaCreateForm.value.name,\n      status: true\n    }\n\n    if (!this.editMode) {\n      this.areaService.createArea(data)\n        .subscribe(\n          (res) => {\n            if (res.status) {\n              this.getAllArea();\n              this.showSuccess = true;\n              this.areaCreateForm.reset();\n            } else {\n              this.showError = true;\n            }\n          },\n          (err) => {\n            console.log(\"ERROR from createArea\");\n            this.showError = true;\n          }\n        )\n    } else {\n      this.areaService.updateArea(data)\n        .subscribe(\n          (res) => {\n            // console.log(res);\n            this.getAllArea();\n            this.areaCreateForm.reset();\n            this.editMode = false;\n          },\n          (err) => {\n\n          }\n        )\n    }\n\n\n  }\n\n\n  getAllArea() {\n    this.areaService.getAllArea()\n      .subscribe(\n        (res) => {\n          this.areas = res;\n        },\n        (err) => {\n          console.log(err);\n        }\n      )\n  }\n\n  statusChanged(event: any) {\n    this.getAllArea();\n  }\n\n  cancelEdit() {\n    this.editMode = false;\n    this.createMode = false;\n    this.areaCreateForm.reset();\n    this.getAllArea();\n  }\n\n\n  showEditForm(event) {\n    this.editMode = true;\n    this.createMode = false;\n    this.id = event;\n    this.areaService.getAreaById(event)\n      .subscribe(\n        (res) => {\n          this.areaCreateForm.patchValue({\n            name: [res.name]\n          });\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  createModeOn(){\n    this.editMode = false;\n    this.createMode = true;\n    this.areaCreateForm.reset();\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/area/area-create/area-create.component.ts","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { AreaCreateComponent } from './area-create/area-create.component';\n\n\nconst areaRoutes = [\n];\n@NgModule({\n    imports: [\n        RouterModule.forChild(areaRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class AreaRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/area/area-routing.module.ts","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Ng2PaginationModule } from 'ng2-pagination';\nimport { DialogModule } from 'primeng/primeng';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AreaCreateComponent } from './area-create/area-create.component';\nimport { AreaRoutingModule } from './area-routing.module';\nimport { AreaService } from './area.service';\nimport { AreaAllComponent } from './area-all/area-all.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        Ng2PaginationModule,\n        DialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        AreaRoutingModule\n    ],\n    declarations: [\n        AreaCreateComponent,\n        AreaAllComponent\n    ],\n    exports: [\n\n    ],\n    providers: [\n        AreaService\n    ]\n})\nexport class AreaModule { }\n\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/area/area.module.ts","import { Injectable } from '@angular/core';\nimport { CustomHttpService } from \"../custom-http.service\";\nimport { environment } from \"../../environments/environment\";\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class AreaService {\n\n  private areaUrl = environment.api_server + 'area/';\n\n  constructor(private http: CustomHttpService) { }\n\n  createArea(data: any) {\n    let url = this.areaUrl + 'create/';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  getAllArea() {\n    let url = this.areaUrl + 'all/';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  setStatus(data: any) {\n    let url = this.areaUrl + 'status_change/';\n    return this.http.put(url, data).map((res) => res.json());\n  }\n\n  getAreaById(id: any) {\n    let url = this.areaUrl + 'id/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  updateArea(data: any) {\n    let url = this.areaUrl + 'update/';\n    return this.http.put(url, data).map((res) => res.json());\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/area/area.service.ts","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class AuthService {\n  private loggedIn: boolean = false;\n\n  constructor() {\n  }\n\n  isLoggedIn() {\n    if (localStorage.getItem('csbd-username') == 'admin' && localStorage.getItem('csbd-password') == 'admin') {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  setLogin(status: boolean) {\n    this.loggedIn = status;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers } from \"@angular/http\";\n\n@Injectable()\nexport class CustomHttpService {\n\n  constructor(private http: Http) { }\n\n  get(url: string) {\n    let headers = new Headers();\n    return this.http.get(url, { headers: headers });\n  }\n\n  post(url: string, d: any) {\n    let headers = new Headers();\n    return this.http.post(url, d, { headers: headers });\n  }\n\n  put(url: string, d: any) {\n    let headers = new Headers();\n    return this.http.put(url, d, { headers: headers });\n  }\n\n  delete(url: string) {\n    let headers = new Headers();\n    return this.http.delete(url, { headers: headers });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/custom-http.service.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content-wrapper {\\n    min-height: 1200px;\\n    /*font-size: 15px;*/\\n}\\n\\n.box-header {\\n    margin-bottom: 20px;\\n    margin-top: 20px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-all/customer-all.component.css\n// module id = ../../../../../src/app/customer/customer-all/customer-all.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 3500px;\\\">\\n  <div *ngIf=\\\"autoGenerateList\\\">\\n    <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isAutoGenerateError\\\">\\n      Error in saving auto invoices\\n    </div>\\n    <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isAutoGenerateSuccess\\\">\\n      Auto Invoices saved successfully !!\\n    </div>\\n  </div>\\n\\n  <app-customer-search></app-customer-search>\\n\\n  <section class=\\\"content-header\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        All Customers\\n      </h1>\\n      <ol class=\\\"breadcrumb\\\">\\n        <li><a [routerLink]=\\\"[ '/dashboard/home' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Sofkul</a></li>\\n        <li><a [routerLink]=\\\"[ '/dashboard/customer/all' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Customer</a></li>\\n        <li class=\\\"active\\\">All</li>\\n      </ol>\\n    </div>\\n  </section>\\n\\n  <section class=\\\"content\\\">\\n    <!--  Page Content Here -->\\n\\n    <div class=\\\"col-xs-12\\\">\\n\\n      <div class=\\\"box box-primary\\\">\\n        <div class=\\\"box-header\\\">\\n          <h3 class=\\\"box-title\\\">List Of All Customers</h3>\\n          <br>\\n          <div class=\\\"box-tools\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-lg-4\\\" style=\\\"float:right\\\">\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-btn\\\">\\n                    <select style=\\\"font-size: 15px;height: 34px;\\\" (change)=\\\"filterChange($event.target.value)\\\">\\n                      <option value=\\\"username\\\">Username</option>\\n                      <option value=\\\"mobile_number\\\">Mobile Number</option>\\n                      <option value=\\\"area\\\">Area</option>\\n                    </select>\\n                  </div>\\n                  <!-- /btn-group -->\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"...\\\"\\n                         placeholder=\\\"Filter Customers List in this page\\\"\\n                         (keyup)=\\\"quickSearch($event.target.value)\\\">\\n                </div>\\n                <br>\\n                <button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"generateAutoInvoice()\\\">Generate Invoice\\n                </button>\\n                <!-- /input-group -->\\n              </div>\\n            </div>\\n            <!-- /.row -->\\n            <!-- /.row -->\\n            <div class=\\\"col-md-offset-4\\\">\\n              <pagination-controls (pageChange)=\\\"onPaginate($event);p=$event\\\"></pagination-controls>\\n            </div>\\n          </div>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body table-responsive no-padding\\\" style=\\\"margin-top:100px\\\">\\n          <table class=\\\"table table-hover\\\">\\n            <tbody>\\n            <tr>\\n              <th>Username</th>\\n              <th>Email</th>\\n              <th>Fullname</th>\\n              <th>Product</th>\\n              <th>Mobile</th>\\n              <th>Location</th>\\n              <th>Area</th>\\n              <th>City</th>\\n              <th>Status</th>\\n              <th>Action</th>\\n              <th>Auto generate <br> invoice monthly</th>\\n            </tr>\\n            <tr\\n              *ngFor=\\\"let customer of customers | paginate: { itemsPerPage: 40, currentPage: p,totalItems:totalCustomerCount }\\\">\\n              <td>{{ customer.username }}</td>\\n              <td>{{ customer.email }}</td>\\n              <td>{{ customer.fullname }}</td>\\n              <!--<td><span *ngIf=\\\"customer.productData?.length>0\\\"> {{ customer.productData[0]?.name }} - <em *ngIf=\\\"customer.productData[0]?.rate\\\">{{ customer.productData[0]?.rate }} INR/month</em> </span><small class=\\\"label bg-blue\\\">{{ customer.productData.length }}</small></td>-->\\n              <td>\\n                <small class=\\\"label bg-blue\\\">{{ customer.productData.length }}</small>\\n              </td>\\n              <td>{{ customer.mobile_primary }}</td>\\n              <td>{{ customer.location }}</td>\\n              <td>{{ customer.areaData?.name }}</td>\\n              <td>{{ customer.city }}</td>\\n              <td *ngIf=\\\"customer.status\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\" (click)=\\\"toggleStatus(customer)\\\"> Active</button>\\n              </td>\\n              <td *ngIf=\\\"!customer.status\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"toggleStatus(customer)\\\"> Inactive</button>\\n              </td>\\n              <td>\\n                <a type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\" [routerLink]=\\\"['/customer/detail',customer._id]\\\">\\n                  Edit</a>\\n              </td>\\n              <td>\\n                <input [attr.checked]=\\\"customer.isGenerateInvoiceMonthly ? 'checked' : null\\\"\\n                       style=\\\"zoom: 1.5;margin-left: 10px;\\\" type=\\\"checkbox\\\"\\n                       name=\\\"customer._id\\\" value=\\\"customer._id\\\" (click)=\\\"checkGenerateInvoice(customer)\\\">\\n              </td>\\n            </tr>\\n            </tbody>\\n\\n          </table>\\n        </div>\\n        <!-- /.box-body -->\\n      </div>\\n      <!-- /.box -->\\n      <div class=\\\"col-md-offset-4\\\">\\n        <pagination-controls (pageChange)=\\\"onPaginate($event);p=$event\\\"></pagination-controls>\\n      </div>\\n    </div>\\n\\n  </section>\\n  <!--for generating invoice-->\\n</div>\\n<div class=\\\"col-md-12\\\" style=\\\"margin-top:-20px\\\">\\n  <div *ngFor=\\\"let autoInvoice of autoGenerateList\\\">\\n    <app-invoice-html [autoInvoice]=\\\"autoInvoice\\\"></app-invoice-html>\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-all/customer-all.component.html\n// module id = ../../../../../src/app/customer/customer-all/customer-all.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {CustomerService} from '../customer.service';\nimport {Customer} from '../customer';\nimport * as _ from 'underscore';\nimport {ProductService} from '../../product/product.service';\nimport {Product} from '../../product/product';\nimport {AreaService} from '../../area/area.service';\nimport {Area} from '../../area/area';\n\n@Component({\n  selector: 'app-customer-all',\n  templateUrl: './customer-all.component.html',\n  styleUrls: ['./customer-all.component.css']\n})\nexport class CustomerAllComponent implements OnInit {\n  public customers: Customer[] = [];\n  public filterByTitle: string;\n  display: boolean = false;\n  public productList: Product[] = [];\n  public searchMode = 'username';\n  totalCustomerCount: number = 0;\n  public paginator = 1;\n  public autoGenerateList: any[] = [];\n  public isAutoGenerateSuccess: boolean = false;\n  public isAutoGenerateError: boolean = false;\n\n  // public tempCustomer:Customer;\n\n\n  constructor(private customerService: CustomerService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  public options = [\n    {\n      measure: 'length',\n      display: 'Length'\n    },\n    {\n      measure: 'area',\n      display: 'Area'\n    },\n    {\n      measure: 'volume',\n      display: 'volume'\n    },\n    {\n      measure: 'time',\n      display: 'Time'\n    },\n    {\n      measure: 'current',\n      display: 'Current'\n    },\n    {\n      measure: 'energy',\n      display: 'Energy'\n    },\n\n  ]\n\n\n  ngOnInit() {\n    this.isAutoGenerateSuccess = false;\n    this.customerService.getTotalCustomerCount()\n      .subscribe(\n        (res) => {\n          this.totalCustomerCount = res.count;\n        }\n      )\n    this.getAllCustomer(this.paginator);\n  }\n\n  getAllCustomer(paginator: number) {\n    this.customers = [];\n    this.customerService.getAllCustomers(paginator)\n      .subscribe(\n        (res) => {\n          let data: Customer[] = [];\n          data = res;\n          // getting products\n          _.each(data, (item: Customer) => {\n            item.productData = [];\n            _.each(item.productList, (element) => {\n              this.productService.getProductById(element)\n                .subscribe(\n                  (res: Product) => {\n                    item.productData.push(res);\n                  },\n                  (err) => {\n                  }\n                )\n            });\n\n            if (item.area) {\n              this.areaService.getAreaById(item.area)\n                .subscribe(\n                  (res: Area) => {\n                    item.areaData = res;\n                  },\n                  (err) => {\n\n                  }\n                )\n            }\n\n            this.customers.push(item);\n          });\n        },\n        (err) => {\n          console.log(\"Error In getAllCustomer\");\n        }\n      )\n  }\n\n  toggleStatus(customer) {\n    let data = {\n      id: customer['_id'],\n      status: !customer['status']\n    };\n\n    this.customerService.setStatus(data)\n      .subscribe(\n        (res) => {\n          if (res['status']) {\n            customer['status'] = !customer['status']\n          }\n        },\n        (err) => {\n          console.log('Error in toggleStatus');\n        }\n      )\n  }\n\n  showDialog() {\n    this.display = true;\n  }\n\n  getCustomerDetails(id) {\n    this.customerService.getCustomerDetails(id)\n      .subscribe(\n        (res) => {\n\n        },\n        (err) => {\n          console.log(err);\n        }\n      )\n  }\n\n  quickSearch(event: any) {\n    if (event == '') {\n      this.getAllCustomer(this.paginator);\n      return;\n    }\n    let data = {\n      text: event\n    }\n\n    if (this.searchMode == 'username') {\n      let reg = new RegExp(event, \"i\");\n      let resArray = [];\n      _.each(this.customers, (item) => {\n        if (reg.test(item['username'])) {\n          resArray.push(item);\n        }\n      });\n      this.customers = resArray;\n    }\n    else if (this.searchMode == 'mobile_number') {\n      let reg = new RegExp(event, \"i\");\n      let resArray = [];\n      _.each(this.customers, (item) => {\n        if (reg.test(item['mobile_primary'])) {\n          resArray.push(item);\n        }\n      });\n      this.customers = resArray;\n    }\n    else if (this.searchMode == 'area') {\n      let reg = new RegExp(event, \"i\");\n      let resArray = [];\n      _.each(this.customers, (item) => {\n        if (reg.test(item['areaData'].name)) {\n          resArray.push(item);\n        }\n      });\n      this.customers = resArray;\n    }\n  }\n\n  buildSearchResult(customerList: Customer[]) {\n    this.customers = [];\n    // getting products\n    _.each(customerList, (item: Customer) => {\n      item.productData = [];\n\n      _.each(item.productList, (element) => {\n        this.productService.getProductById(element)\n          .subscribe(\n            (res: Product) => {\n              item.productData.push(res);\n            },\n            (err) => {\n            }\n          )\n      });\n\n      if (item.area) {\n        this.areaService.getAreaById(item.area)\n          .subscribe(\n            (res: Area) => {\n              item.areaData = res;\n            },\n            (err) => {\n\n            }\n          )\n      }\n      this.customers.push(item);\n    });\n  }\n\n  //change search filter\n  filterChange(event: any) {\n    this.searchMode = event;\n  }\n\n  checkGenerateInvoice(customer) {\n    let data = {\n      id: customer['_id'],\n      isGenerateInvoiceMonthly: !customer['isGenerateInvoiceMonthly']\n    };\n\n    this.customerService.setCheckGenerateInvoice(data)\n      .subscribe(\n        (res) => {\n          if (res['status']) {\n            customer['isGenerateInvoiceMonthly'] = !customer['isGenerateInvoiceMonthly'];\n          }\n        },\n        (err) => {\n          console.log(\"Error in setCheckGenerateInvoice\");\n        }\n      );\n  }\n\n\n//  for pagination\n  onPaginate(event: any) {\n    this.paginator = event;\n    this.getAllCustomer(this.paginator);\n  }\n\n//  click event triggered for auto generate invoice\n  generateAutoInvoice() {\n    this.isAutoGenerateSuccess = false;\n    this.isAutoGenerateError = false;\n    this.autoGenerateList = [];\n    _.each(this.customers, (customer) => {\n      if (customer.isGenerateInvoiceMonthly == true) {\n        this.customerService.generateAutoInvoice(customer['_id'])\n          .subscribe(\n            (res) => {\n              this.autoGenerateList.push(res);\n            },\n            (err) => {\n              this.isAutoGenerateSuccess = false;\n              this.isAutoGenerateError = true;\n            },\n            () => {\n              this.isAutoGenerateSuccess = true;\n            }\n          );\n      }\n    })\n  }\n\n  // this.customerService.getAutoGenerateList()\n  //   .subscribe(\n  //     (res) => {\n  //       _.each(res, (customer) => {\n  //\n  //       });\n  //\n  //     },\n  //     (err) => {\n  //       this.isAutoGenerateSuccess = false;\n  //       this.isAutoGenerateError = true;\n  //     },\n  //     () => {\n  //       this.isAutoGenerateSuccess = true;\n  //     }\n  //   )\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-all/customer-all.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content-wrapper {\\n    min-height: 1200px;\\n    /*font-size: 20px;*/\\n}\\n\\n.box-primary {\\n    padding: 30px 30px;\\n}\\n\\n.productSelectBox {\\n    margin-bottom: 10px\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-create/customer-create.component.css\n// module id = ../../../../../src/app/customer/customer-create/customer-create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 1500px;\\\">\\n  <section class=\\\" content-header \\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        Create New Customer\\n      </h1>\\n      <ol class=\\\"breadcrumb \\\">\\n        <li><a [routerLink]=\\\"[ '/dashboard/home' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Sofkul</a></li>\\n        <li><a [routerLink]=\\\"[ '/dashboard/customer/create' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Customer</a></li>\\n        <li class=\\\"active \\\">Create</li>\\n      </ol>\\n    </div>\\n  </section>\\n  <section class=\\\"content \\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n      <div class=\\\"box box-primary\\\">\\n        <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"showSuccess\\\">New Customer Created Successfully !!</div>\\n        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"showError\\\">ERROR !! Please Try Again.</div>\\n        <!--  Page Content Here -->\\n        <form class=\\\"form-horizontal \\\" [formGroup]=\\\"customerCreateForm\\\" (submit)=\\\"submitCustomerCreateForm()\\\">\\n          <!--username-->\\n          <div class=\\\" form-group \\\">\\n            <label for=\\\"username \\\" class=\\\"col-sm-2 control-label \\\">Username</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input formControlName=\\\"username\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"username \\\"\\n                     placeholder=\\\"Username \\\" required>\\n            </div>\\n          </div>\\n\\n          <!--NID-->\\n          <div class=\\\" form-group \\\">\\n            <label for=\\\"nid\\\" class=\\\"col-sm-2 control-label \\\">NID</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input formControlName=\\\"nid\\\" type=\\\"number\\\" class=\\\"form-control \\\" id=\\\"nid \\\" placeholder=\\\"NID \\\" required>\\n            </div>\\n          </div>\\n          <!--email-->\\n          <div class=\\\"form-group \\\">\\n            <label for=\\\"email \\\" class=\\\"col-sm-2 control-label \\\">Email</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input formControlName=\\\"email\\\" type=\\\"email \\\" class=\\\"form-control \\\" id=\\\"email \\\" placeholder=\\\"Email \\\">\\n            </div>\\n          </div>\\n          <!--fullname-->\\n          <div class=\\\"form-group \\\">\\n            <label for=\\\"fullname \\\" class=\\\"col-sm-2 control-label \\\">Fullname</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input formControlName=\\\"fullname\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"fullname \\\"\\n                     placeholder=\\\"Fullname \\\">\\n            </div>\\n          </div>\\n          <!--customer_currency-->\\n          <!--<div class=\\\"form-group \\\">\\n          <label for=\\\"customer_currency \\\" class=\\\"col-sm-2 control-label \\\">Customer Currency</label>\\n          <div class=\\\"col-sm-10 \\\">\\n              <input formControlName=\\\"customer_currency\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"customer_currency \\\" placeholder=\\\"Customer Currency \\\">\\n          </div>\\n      </div>-->\\n\\n          <!--mobile_primary-->\\n          <div class=\\\"form-group \\\">\\n            <label for=\\\"mobile_primary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Primary</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input formControlName=\\\"mobile_primary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_primary \\\"\\n                     placeholder=\\\"Mobile primary \\\">\\n            </div>\\n          </div>\\n\\n          <!--mobile_secondary-->\\n          <div class=\\\"form-group \\\">\\n            <label for=\\\"mobile_secondary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Secondary</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input formControlName=\\\"mobile_secondary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_secondary \\\"\\n                     placeholder=\\\"Mobile secondary \\\">\\n            </div>\\n          </div>\\n\\n          <!--website-->\\n          <div class=\\\"form-group \\\">\\n            <label for=\\\"website \\\" class=\\\"col-sm-2 control-label \\\">Website</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input type=\\\"text\\\" formControlName=\\\"website\\\" class=\\\"form-control \\\" id=\\\"website \\\" placeholder=\\\"website \\\">\\n            </div>\\n          </div>\\n\\n          <!--country-->\\n          <!--<div class=\\\"form-group \\\">\\n              <label for=\\\"country \\\" class=\\\"col-sm-2 control-label \\\">Country</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                  <input type=\\\"text\\\" formControlName=\\\"country\\\" class=\\\"form-control \\\" id=\\\"country \\\" placeholder=\\\"country \\\">\\n              </div>\\n          </div>-->\\n\\n          <!--location-->\\n          <div class=\\\"form-group \\\">\\n            <label for=\\\"location \\\" class=\\\"col-sm-2 control-label \\\">Location</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input type=\\\"text \\\" formControlName=\\\"location\\\" class=\\\"form-control \\\" id=\\\"location \\\"\\n                     placeholder=\\\"location \\\">\\n            </div>\\n          </div>\\n\\n          <!--area list-->\\n          <div class=\\\"form-group \\\">\\n            <label for=\\\"area \\\" class=\\\"col-sm-2 control-label \\\">Area</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <select required *ngIf=\\\"areaList\\\" class=\\\"form-control\\\" formControlName=\\\"area\\\">\\n                <option *ngFor=\\\"let area of areaList\\\" value=\\\"{{ area._id }}\\\">{{ area.name }}</option>\\n              </select>\\n            </div>\\n          </div>\\n\\n          <!--city-->\\n          <div class=\\\"form-group \\\">\\n            <label for=\\\"city \\\" class=\\\"col-sm-2 control-label \\\">City</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input type=\\\"text \\\" formControlName=\\\"city\\\" class=\\\"form-control \\\" id=\\\"city \\\" placeholder=\\\"city \\\">\\n            </div>\\n          </div>\\n           \\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"description\\\" class=\\\"col-sm-2 control-label \\\">Remarks</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <textarea formControlName=\\\" description\\\" class=\\\"form-control\\\" id=\\\"description\\\"></textarea>\\n            </div>\\n          </div>\\n\\n          <!--postal_code-->\\n          <div class=\\\"form-group \\\">\\n            <label for=\\\"postal_code \\\" class=\\\"col-sm-2 control-label \\\">Postal Code</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input type=\\\"text \\\" formControlName=\\\"postal_code\\\" class=\\\"form-control \\\" id=\\\"postal_code \\\"\\n                     placeholder=\\\"Postal Code \\\">\\n            </div>\\n          </div>\\n\\n          <!--status-->\\n          <div class=\\\"form-group \\\">\\n            <label for=\\\"postal_code \\\" class=\\\"col-sm-2 control-label \\\">Status</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <select formControlName=\\\"status\\\" required class=\\\"form-control\\\">\\n                <option value=\\\"true\\\">Active</option>\\n                <option value=\\\"false\\\">Inactive</option>\\n              </select>\\n            </div>\\n          </div>\\n\\n          <!--product list-->\\n          <div class=\\\"form-group \\\" *ngFor=\\\"let item of createRange(allProductCounter);let i=index\\\">\\n            <label class=\\\"col-sm-2 control-label \\\">Product [{{ i+1 }}]</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <div class=\\\"productSelectBox\\\">\\n                <select required *ngIf=\\\"productList\\\" class=\\\"form-control\\\" (change)=\\\"onProductChange($event,i)\\\">\\n                  <option *ngFor=\\\"let product of productList\\\" value=\\\"{{ product._id }}\\\">\\n                    {{ product.name }} - <em> {{ product.rate }} INR/month </em>\\n                  </option>\\n                </select>\\n                <button *ngIf=\\\"i>0\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-danger btn-xs\\\" (click)=\\\"removeProduct(i)\\\"><i\\n                  class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></button>\\n              </div>\\n            </div>\\n          </div>\\n          <button (click)=\\\"addProduct()\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-success\\\"><i class=\\\"fa fa-plus\\\"\\n                                                                                             aria-hidden=\\\"true\\\"></i>\\n            &nbsp; Add Product\\n          </button>\\n\\n\\n          <div class=\\\"form-group \\\">\\n            <div class=\\\"col-sm-offset-2 col-sm-10 \\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-success \\\">Save</button>\\n              <a type=\\\"button\\\" class=\\\"btn btn-primary \\\" [routerLink]=\\\"['/customer/all']\\\">Back</a>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-create/customer-create.component.html\n// module id = ../../../../../src/app/customer/customer-create/customer-create.component.html\n// module chunks = main","import {Component, OnInit, ElementRef} from '@angular/core';\nimport {FormGroup, FormBuilder} from \"@angular/forms\";\nimport {CustomerService} from '../customer.service';\nimport * as _ from 'underscore';\nimport {Customer} from '../customer';\nimport {ProductService} from '../../product/product.service';\nimport {AreaService} from '../../area/area.service';\n\n@Component({\n  selector: 'app-customer-create',\n  templateUrl: './customer-create.component.html',\n  styleUrls: ['./customer-create.component.css']\n})\nexport class CustomerCreateComponent implements OnInit {\n\n\n  showSuccess: boolean = false;\n  showError: boolean = false;\n  public customerCreateForm: FormGroup;\n  public productList: any[] = [];\n  public areaList: any[] = [];\n  public allProductCounter = 1;\n  public allProducts: any[] = [];\n\n  public selectedObjId: any;\n\n\n  constructor(private fb: FormBuilder, private customerService: CustomerService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  ngOnInit() {\n    this.buildForm();\n    this.getProductList();\n    this.getAreaList();\n  }\n\n  buildForm() {\n    this.customerCreateForm = this.fb.group({\n      username: [''],\n      nid: [''],\n      email: [''],\n      fullname: [''],\n      mobile_primary: ['+91'],\n      mobile_secondary: ['+91'],\n      website: [''],\n      location: [''],\n      area: [''],\n      city: ['Hyderabad'],\n      description: [''],\n      postal_code: [''],\n      status: [''],\n      product: ['']\n    });\n  }\n\n  submitCustomerCreateForm() {\n    this.showSuccess = false;\n    this.showError = false;\n    this.allProducts = _.uniq(this.allProducts);\n\n    let data: Customer = {\n      username: this.customerCreateForm.value.username,\n      nid: this.customerCreateForm.value.nid,\n      email: this.customerCreateForm.value.email,\n      fullname: this.customerCreateForm.value.fullname,\n      customer_currency: 'INR',\n      mobile_primary: this.customerCreateForm.value.mobile_primary,\n      mobile_secondary: this.customerCreateForm.value.mobile_secondary,\n      website: this.customerCreateForm.value.website,\n      country: 'India',\n      location: this.customerCreateForm.value.location,\n      area: this.customerCreateForm.value.area,\n      city: this.customerCreateForm.value.city,\n      description: this.customerCreateForm.value.description,\n      postal_code: this.customerCreateForm.value.postal_code,\n      status: this.customerCreateForm.value.status,\n      productList: this.allProducts,\n      \n    };\n\n\n    this.customerService.createNewCustomer(data)\n      .subscribe(\n        (res) => {\n          if (res.status) {\n            this.showSuccess = true;\n            this.customerCreateForm.reset();\n          } else {\n            this.showError = true;\n          }\n        },\n        (err) => {\n          this.showError = true;\n          console.log(\"Error in createNewCustomer\");\n        }\n      )\n  }\n\n  getProductList() {\n    this.productList = [];\n    this.productService.getAllProduct()\n      .subscribe(\n        (res) => {\n          _.each(res, (item) => {\n            if (item['status']) {\n              this.productList.push(item);\n            }\n          });\n        },\n        (err) => {\n          console.log(\"ERROR from productList\");\n        },\n        () => {\n          this.allProducts.push(this.productList[0]._id);\n        }\n      )\n  }\n\n  getAreaList() {\n    this.areaList = [];\n    this.areaService.getAllArea()\n      .subscribe(\n        (res) => {\n          _.each(res, (item) => {\n            if (item['status']) {\n              this.areaList.push(item);\n            }\n          });\n        },\n        (err) => {\n          console.log(\"ERROR from getAreaList\");\n        }\n      )\n  }\n\n  removeProduct(index) {\n    this.allProductCounter--;\n    this.allProducts.splice(index, 1);\n  }\n\n  addProduct() {\n    this.allProductCounter++;\n    let newProduct = this.productList[0]._id;\n    this.allProducts.push(newProduct);\n  }\n\n  onProductChange(event: any, index) {\n    this.allProducts[index] = event.target.value;\n  }\n\n  createRange(number) {\n    let items: number[] = [];\n    for (let i = 1; i <= number; i++) {\n      items.push(i);\n    }\n    return items;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-create/customer-create.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content-wrapper {\\n    min-height: 1200px;\\n    /*font-size: 20px;*/\\n}\\n\\n.box-primary {\\n    padding: 30px 30px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-detail/customer-detail.component.css\n// module id = ../../../../../src/app/customer/customer-detail/customer-detail.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 2000px;\\\">\\n    <section class=\\\" content-header \\\" *ngIf=\\\"customer \\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <h1>\\n                Customer Details - <em>{{ customer.username }}</em>\\n            </h1>\\n            <ol class=\\\"breadcrumb \\\">\\n                <li><a [routerLink]=\\\"[ '/' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> InvoiceApp</a></li>\\n                <li><a [routerLink]=\\\"[ '/' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Customer</a></li>\\n                <li class=\\\"active \\\">All</li>\\n            </ol>\\n        </div>\\n    </section>\\n    <section class=\\\"content \\\">\\n        <div class=\\\"col-md-offset-2 col-md-7\\\">\\n            <div class=\\\"box box-primary\\\">\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"showSuccess\\\">Customer Data Updated Successfully !!</div>\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"showError\\\">ERROR !! Please Try Again.</div>\\n                <!--  Page Content Here -->\\n                <form class=\\\"form-horizontal \\\" [formGroup]=\\\"customerDetailForm\\\" *ngIf=\\\"customer\\\" (submit)=\\\"submitCustomerDetail()\\\">\\n                    <!--username-->\\n                    <div class=\\\" form-group \\\">\\n                        <label for=\\\"username \\\" class=\\\"col-sm-2 control-label \\\">Username</label>\\n                        <div class=\\\"col-sm-10 \\\">\\n                            <input formControlName=\\\"username\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"username \\\" placeholder=\\\"Username \\\" ng-model=\\\"u\\\">\\n                        </div>\\n                    </div>\\n\\n                    <!--NID-->\\n                    <div class=\\\" form-group \\\">\\n                        <label for=\\\"nid\\\" class=\\\"col-sm-2 control-label \\\">NID</label>\\n                        <div class=\\\"col-sm-10 \\\">\\n                            <input formControlName=\\\"nid\\\" type=\\\"number\\\" class=\\\"form-control \\\" id=\\\"nid \\\" placeholder=\\\"NID \\\" required>\\n                        </div>\\n                    </div>\\n                    <!--email-->\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"email \\\" class=\\\"col-sm-2 control-label \\\">Email</label>\\n                        <div class=\\\"col-sm-10 \\\">\\n                            <input formControlName=\\\"email\\\" type=\\\"email \\\" class=\\\"form-control \\\" id=\\\"email \\\" placeholder=\\\"Email \\\">\\n                        </div>\\n                    </div>\\n                    <!--fullname-->\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"fullname \\\" class=\\\"col-sm-2 control-label \\\">Fullname</label>\\n                        <div class=\\\"col-sm-10 \\\">\\n                            <input formControlName=\\\"fullname\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"fullname \\\" placeholder=\\\"Fullname \\\">\\n                        </div>\\n                    </div>\\n                    <!--customer_currency-->\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"customer_currency \\\" class=\\\"col-sm-2 control-label \\\">Customer Currency</label>\\n                        <div class=\\\"col-sm-10 \\\">\\n                            <input formControlName=\\\"customer_currency\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"customer_currency \\\" placeholder=\\\"Customer Currency \\\">\\n                        </div>\\n                    </div>\\n\\n                    <!--mobile_primary-->\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"mobile_primary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Primary</label>\\n                        <div class=\\\"col-sm-10 \\\">\\n                            <input formControlName=\\\"mobile_primary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_primary \\\" placeholder=\\\"Mobile primary \\\">\\n                        </div>\\n                    </div>\\n\\n                    <!--mobile_secondary-->\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"mobile_secondary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Secondary</label>\\n                        <div class=\\\"col-sm-10 \\\">\\n                            <input formControlName=\\\"mobile_secondary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_secondary \\\" placeholder=\\\"Mobile secondary \\\">\\n                        </div>\\n                    </div>\\n\\n                    <!--website-->\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"website\\\" class=\\\"col-sm-2 control-label \\\">Website</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"text\\\" formControlName=\\\"website\\\" class=\\\"form-control \\\" id=\\\"website \\\" placeholder=\\\"website \\\">\\n                        </div>\\n                    </div>\\n\\n                    <!--country-->\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"country \\\" class=\\\"col-sm-2 control-label \\\">Country</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"text\\\" formControlName=\\\"country\\\" class=\\\"form-control \\\" id=\\\"country \\\" placeholder=\\\"website \\\">\\n                        </div>\\n                    </div>\\n\\n                    <!--location-->\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"location \\\" class=\\\"col-sm-2 control-label \\\">Location</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"text \\\" formControlName=\\\"location\\\" class=\\\"form-control \\\" id=\\\"location \\\" placeholder=\\\"location \\\">\\n                        </div>\\n                    </div>\\n\\n                    <!--area list-->\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"area \\\" class=\\\"col-sm-2 control-label \\\">Area</label>\\n                        <div class=\\\"col-sm-10 \\\">\\n                            <select required *ngIf=\\\"areaList\\\" class=\\\"form-control\\\" formControlName=\\\"area\\\">\\n                            <option  [selected]=\\\"area._id == customer.area\\\" *ngFor=\\\"let area of areaList\\\" value=\\\"{{ area._id }}\\\">{{ area.name }} </option>\\n                        </select>\\n                        </div>\\n                    </div>\\n\\n                    <!--city-->\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"city \\\" class=\\\"col-sm-2 control-label \\\">City</label>\\n                        <div class=\\\"col-sm-10 \\\">\\n                            <input type=\\\"text \\\" formControlName=\\\"city\\\" class=\\\"form-control \\\" id=\\\"city \\\" placeholder=\\\"city \\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"description\\\" class=\\\"col-sm-2 control-label \\\">Remarks</label>\\n                        <div class=\\\"col-sm-10 \\\">\\n                          <textarea formControlName=\\\" description\\\" class=\\\"form-control\\\" id=\\\"description\\\"></textarea>\\n                        </div>\\n                      </div>\\n                      \\n                    <!--postal_code-->\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"postal_code \\\" class=\\\"col-sm-2 control-label \\\">Postal Code</label>\\n                        <div class=\\\"col-sm-10 \\\">\\n                            <input type=\\\"text \\\" formControlName=\\\"postal_code\\\" class=\\\"form-control \\\" id=\\\"postal_code \\\" placeholder=\\\"Postal Code \\\">\\n                        </div>\\n                    </div>\\n\\n                    <!--status-->\\n                    <div class=\\\"form-group \\\">\\n                        <label for=\\\"postal_code \\\" class=\\\"col-sm-2 control-label \\\">Status</label>\\n                        <div class=\\\"col-sm-10 \\\">\\n                            <select formControlName=\\\"status\\\" class=\\\"form-control\\\">\\n                            <option value=\\\"true\\\">Active</option>\\n                            <option value=\\\"false\\\">Inactive</option>\\n                        </select>\\n                        </div>\\n                    </div>\\n\\n                    <!--product list-->\\n                    <div class=\\\"form-group \\\" *ngFor=\\\"let myProduct of customer.productList;let i=index\\\">\\n                        <label class=\\\"col-sm-2 control-label \\\">Product [{{ i+1 }}]</label>\\n                        <div class=\\\"col-sm-10 \\\">\\n                            <div class=\\\"productSelectBox\\\">\\n                                <select required *ngIf=\\\"productList\\\" class=\\\"form-control\\\" (change)=\\\"onProductChange($event,i)\\\">\\n                                <option [selected]=\\\"product._id == myProduct\\\" *ngFor=\\\"let product of productList\\\" value=\\\"{{ product._id }}\\\">{{ product.name }} - <em> {{ product.rate }} BDT/month </em> </option>\\n                                </select>\\n                                <button *ngIf=\\\"i>0\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-danger btn-xs\\\" (click)=\\\"removeProduct(i)\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <button (click)=\\\"addProduct()\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-success\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> &nbsp; Add Product</button>\\n\\n                    <div class=\\\"form-group \\\">\\n                        <div class=\\\"col-sm-offset-2 col-sm-10 \\\">\\n                            <button type=\\\"submit \\\" class=\\\"btn btn-success \\\">Update</button>\\n                            \\n                            <a type=\\\"button\\\" class=\\\"btn btn-primary \\\" [routerLink]=\\\"['/customer/all']\\\">Back</a>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-detail/customer-detail.component.html\n// module id = ../../../../../src/app/customer/customer-detail/customer-detail.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from '../customer.service';\nimport * as _ from 'underscore';\nimport { Customer } from '../customer';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from \"rxjs\";\nimport { Router } from \"@angular/router\";\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { ProductService } from '../../product/product.service';\nimport { AreaService } from '../../area/area.service';\n\n@Component({\n  selector: 'app-customer-detail',\n  templateUrl: './customer-detail.component.html',\n  styleUrls: ['./customer-detail.component.css']\n})\nexport class CustomerDetailComponent implements OnInit {\n  public customer: Customer;\n  private subscription: Subscription;\n  public customerDetailForm: FormGroup;\n  private id: any;\n  public productList: any[] = [];\n  public areaList: any[] = [];\n  showSuccess: boolean = false;\n  showError: boolean = false;\n  public allProductCounter;\n\n  constructor(private areaService: AreaService, private productService: ProductService, private fb: FormBuilder, private route: ActivatedRoute, private router: Router, private customerService: CustomerService) { }\n\n  ngOnInit() {\n    this.getProductList();\n    this.getAreaList();\n    this.subscription = this.route.params.subscribe(params => {\n      this.getCustomerDetails(params['id']);\n      this.id = params['id'];\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  getCustomerDetails(id) {\n    this.customerService.getCustomerDetails(id)\n      .subscribe(\n      (res) => {\n        this.customer = res;\n        this.allProductCounter = this.customer.productList.length;\n        console.log(this.allProductCounter);\n        this.buildForm();\n      },\n      (err) => {\n        console.log(err);\n      }\n      )\n  }\n\n  buildForm() {\n    let productId = '';\n    if (this.customer.productList.length > 0) {\n      productId = this.customer.productList[0][\"_id\"];\n    }\n    this.customerDetailForm = this.fb.group({\n      username: [this.customer.username],\n      nid: [this.customer.nid],\n      email: [this.customer.email],\n      fullname: [this.customer.fullname],\n      customer_currency: [this.customer.customer_currency],\n      mobile_primary: [this.customer.mobile_primary],\n      mobile_secondary: [this.customer.mobile_secondary],\n      website: [this.customer.website],\n      country: [this.customer.country],\n      location: [this.customer.location],\n      area: [this.customer.area],\n      city: [this.customer.city],\n      description: [this.customer.description],\n      postal_code: [this.customer.postal_code],\n      status: [this.customer.status],\n      product: ['']\n    });\n  }\n\n  submitCustomerDetail() {\n    this.customer.productList = _.uniq(this.customer.productList);\n    let data = {\n      id: this.id,\n      username: this.customerDetailForm.value.username,\n      nid: this.customerDetailForm.value.nid,\n      email: this.customerDetailForm.value.email,\n      fullname: this.customerDetailForm.value.fullname,\n      customer_currency: this.customerDetailForm.value.customer_currency,\n      mobile_primary: this.customerDetailForm.value.mobile_primary,\n      mobile_secondary: this.customerDetailForm.value.mobile_secondary,\n      website: this.customerDetailForm.value.website,\n      country: this.customerDetailForm.value.country,\n      location: this.customerDetailForm.value.location,\n      area: this.customerDetailForm.value.area,\n      city: this.customerDetailForm.value.city,\n      description: this.customerDetailForm.value.description,\n      postal_code: this.customerDetailForm.value.postal_code,\n      status: this.customerDetailForm.value.status,\n      productList: this.customer.productList\n    }\n\n    this.customerService.updateCustomer(data)\n      .subscribe(\n      (res) => {\n        if (res.status) {\n          this.showSuccess = true;\n        } else {\n          this.showError = true;\n        }\n      },\n      (err) => {\n        this.showError = true;\n      }\n      )\n  }\n\n  getProductList() {\n    this.productList = [];\n    this.productService.getAllProduct()\n      .subscribe(\n      (res) => {\n        _.each(res, (item) => {\n          if (item['status']) {\n            this.productList.push(item);\n          }\n        });\n      },\n      (err) => {\n        console.log(\"ERROR from productList\");\n      }\n      )\n  }\n\n  getAreaList() {\n    this.areaList = [];\n    this.areaService.getAllArea()\n      .subscribe(\n      (res) => {\n        _.each(res, (item) => {\n          if (item['status']) {\n            this.areaList.push(item);\n          }\n        });\n      },\n      (err) => {\n        console.log(\"ERROR from getAreaList\");\n      }\n      )\n  }\n\n  createRange(number) {\n    let items: number[] = [];\n    for (let i = 1; i <= number; i++) {\n      items.push(i);\n    }\n    return items;\n  }\n\n  onProductChange(event: any, index) {\n    this.customer.productList[index] = event.target.value;\n  }\n\n  removeProduct(index) {\n    this.customer.productList.splice(index, 1);\n  }\n\n   addProduct() {\n    let newProduct = this.productList[0]._id;\n    this.customer.productList.push(newProduct);\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-detail/customer-detail.component.ts","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nconst customerUploadRoutes = [\n];\n@NgModule({\n    imports: [\n        RouterModule.forChild(customerUploadRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class CustomerRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#search_form {\\n  width: 100%;\\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-search/customer-search.component.css\n// module id = ../../../../../src/app/customer/customer-search/customer-search.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <div class=\\\"box box-primary\\\">\\n      <h2 style=\\\"margin-left:10px\\\">Search All Customers</h2>\\n      <hr>\\n\\n      <!--search result customers show box-->\\n      <div class=\\\"box-body table-responsive no-padding\\\" style=\\\"margin-bottom:20px;margin-top:20px\\\" *ngIf=\\\"customer && searchResults.length>0\\\">\\n        <table class=\\\"table table-hover\\\">\\n          <tbody>\\n          <tr>\\n            <th>Username</th>\\n            <th>Email</th>\\n            <th>Fullname</th>\\n            <th>Product</th>\\n            <th>Mobile</th>\\n            <th>Location</th>\\n            <th>Area</th>\\n            <th>City</th>\\n            <th>Status</th>\\n            <th>Action</th>\\n            <th>Auto generate <br> invoice monthly</th>\\n          </tr>\\n          <tr>\\n            <td>{{ customer.username }}</td>\\n            <td>{{ customer.email }}</td>\\n            <td>{{ customer.fullname }}</td>\\n            <!--<td><span *ngIf=\\\"customer.productData?.length>0\\\"> {{ customer.productData[0]?.name }} - <em *ngIf=\\\"customer.productData[0]?.rate\\\">{{ customer.productData[0]?.rate }} BDT/month</em> </span><small class=\\\"label bg-blue\\\">{{ customer.productData.length }}</small></td>-->\\n            <td>\\n              <small class=\\\"label bg-blue\\\">{{ customer.productData.length }}</small>\\n            </td>\\n            <td>{{ customer.mobile_primary }}</td>\\n            <td>{{ customer.location }}</td>\\n            <td>{{ customer.areaData?.name }}</td>\\n            <td>{{ customer.city }}</td>\\n            <td *ngIf=\\\"customer.status\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\" (click)=\\\"toggleStatus(customer)\\\"> Active</button>\\n            </td>\\n            <td *ngIf=\\\"!customer.status\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"toggleStatus(customer)\\\"> Inactive</button>\\n            </td>\\n            <td>\\n              <a type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\" [routerLink]=\\\"['/customer/detail',customer._id]\\\">\\n                Edit</a>\\n            </td>\\n            <td>\\n              <input [attr.checked]=\\\"customer.isGenerateInvoiceMonthly ? 'checked' : null\\\"\\n                     style=\\\"zoom: 1.5;margin-left: 10px;\\\" type=\\\"checkbox\\\"\\n                     name=\\\"customer._id\\\" value=\\\"customer._id\\\" (click)=\\\"checkGenerateInvoice(customer)\\\">\\n            </td>\\n          </tr>\\n          </tbody>\\n\\n        </table>\\n      </div>\\n\\n      <!--search box and functionality-->\\n      <div class=\\\"container\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <form class=\\\"form-group\\\">\\n            <input (keyup)=\\\"getSearchText($event)\\\" id=\\\"search_form\\\" type=\\\"text\\\" class=\\\"\\\"\\n                   placeholder=\\\"Search All Customers\\\">\\n          </form>\\n\\n          <!--search resultsa-->\\n          <div *ngIf=\\\"searchResults.length>0\\\">\\n            <strong style=\\\"font-size: 20px\\\"> Search results for: </strong> <span class=\\\"search_text\\\"\\n                                                                                 style=\\\"color:blue;font-size: 20px\\\">{{ searchText }}</span>\\n            <br>\\n            <ul style=\\\"list-style-type:none\\\">\\n              <li *ngFor=\\\"let customer of searchResults\\\">\\n                 <span style=\\\"font-size: 20px\\\">\\n                   <a href=\\\"javascript:void(0)\\\" (click)=\\\"getSearchDetails(customer)\\\">\\n                   <em>{{ customer['username'] }}</em> - {{ customer['fullname']}}\\n                 </a>\\n                 </span>\\n                <br>\\n              </li>\\n              <hr>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-search/customer-search.component.html\n// module id = ../../../../../src/app/customer/customer-search/customer-search.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {CustomerService} from '../customer.service';\nimport {Customer} from '../customer';\nimport * as _ from 'underscore';\nimport {ProductService} from '../../product/product.service';\nimport {Product} from '../../product/product';\nimport {AreaService} from '../../area/area.service';\nimport {Area} from '../../area/area';\n\n@Component({\n  selector: 'app-customer-search',\n  templateUrl: './customer-search.component.html',\n  styleUrls: ['./customer-search.component.css']\n})\nexport class CustomerSearchComponent implements OnInit {\n  public searchText: string;\n  public searchResults: any[] = [];\n  public customer: Customer;\n\n  constructor(private customerService: CustomerService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  ngOnInit() {\n  }\n\n  getSearchText(event: any) {\n    this.customer = undefined;\n    this.searchResults = [];\n    this.searchText = event.target.value;\n    this.customerService.globalSearch(this.searchText)\n      .subscribe(\n        (res) => {\n          this.searchResults = res;\n        }\n      )\n  }\n\n  getSearchDetails(data) {\n    this.searchText = '';\n    let id = data['_id'];\n    this.customerService.getCustomerDetails(id)\n      .subscribe(\n        (customer: Customer) => {\n          customer.productData = [];\n          _.each(customer.productList, (element) => {\n            this.productService.getProductById(element)\n              .subscribe(\n                (res: Product) => {\n                  customer.productData.push(res);\n                }\n              )\n          });\n          if (customer.area) {\n            this.areaService.getAreaById(customer.area)\n              .subscribe(\n                (res: Area) => {\n                  customer.areaData = res;\n                  this.customer = customer;\n                }\n              )\n          }\n        },\n        (err) => {\n\n        },\n        () => {\n          console.log(this.customer);\n        }\n      )\n\n  }\n\n  toggleStatus(customer) {\n    let data = {\n      id: customer['_id'],\n      status: !customer['status']\n    };\n\n    this.customerService.setStatus(data)\n      .subscribe(\n        (res) => {\n          if (res['status']) {\n            customer['status'] = !customer['status']\n          }\n        },\n        (err) => {\n          console.log('Error in toggleStatus');\n        }\n      )\n  }\n\n  checkGenerateInvoice(customer) {\n    let data = {\n      id: customer['_id'],\n      isGenerateInvoiceMonthly: !customer['isGenerateInvoiceMonthly']\n    };\n\n    this.customerService.setCheckGenerateInvoice(data)\n      .subscribe(\n        (res) => {\n          if (res['status']) {\n            customer['isGenerateInvoiceMonthly'] = !customer['isGenerateInvoiceMonthly'];\n          }\n        },\n        (err) => {\n          console.log(\"Error in setCheckGenerateInvoice\");\n        }\n      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer-search/customer-search.component.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {CustomerRoutingModule} from './customer-routing.module';\nimport {CustomerAllComponent} from './customer-all/customer-all.component';\nimport {CustomerService} from './customer.service';\n\nimport {Ng2PaginationModule} from 'ng2-pagination';\nimport {DialogModule} from 'primeng/primeng';\nimport {CustomerDetailComponent} from './customer-detail/customer-detail.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CustomerCreateComponent} from './customer-create/customer-create.component';\nimport {ProductService} from '../product/product.service';\nimport {InvoiceModule} from '../invoice/invoice.module';\nimport { CustomerSearchComponent } from './customer-search/customer-search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CustomerRoutingModule,\n    Ng2PaginationModule,\n    DialogModule,\n    FormsModule,\n    InvoiceModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    CustomerAllComponent,\n    CustomerDetailComponent,\n    CustomerCreateComponent,\n    CustomerSearchComponent\n  ],\n  exports: [],\n  providers: [\n    CustomerService,\n    ProductService\n  ]\n})\nexport class CustomerModule {\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer.module.ts","import {Injectable} from '@angular/core';\nimport {CustomHttpService} from \"../custom-http.service\";\nimport {environment} from \"../../environments/environment\";\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class CustomerService {\n\n  private customerUrl = environment.api_server + 'customer/';\n\n  constructor(private http: CustomHttpService) {\n  }\n\n  globalSearch(data: any) {\n    let url = this.customerUrl + 'global-search/' + data;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  getAllCustomers(paginator) {\n    let url = this.customerUrl + 'all/' + 'page=' + paginator;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  setStatus(data: any) {\n    let url = this.customerUrl + 'status_change/';\n    return this.http.put(url, data).map((res) => res.json());\n  }\n\n  getCustomerDetails(id) {\n    let url = this.customerUrl + 'details/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  updateCustomer(data: any) {\n    let url = this.customerUrl + 'details/update';\n    return this.http.put(url, data).map((res) => res.json());\n  }\n\n  createNewCustomer(data: any) {\n    let url = this.customerUrl + 'create/';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  searchByUsername(data: any) {\n    let url = this.customerUrl + 'search/username/';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  searchByMobileNumber(data: any) {\n    let url = this.customerUrl + 'search/mobile_number/';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  searchByArea(data: any) {\n    let url = this.customerUrl + 'search/area/';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  getCustomerByArea(data: any) {\n    let url = this.customerUrl + 'search/customerByArea/';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  setCheckGenerateInvoice(data: any) {\n    let url = this.customerUrl + 'check_change_generate_invoice_monthly';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  uploadFileContents(data: any) {\n    let url = this.customerUrl + 'upload-file-contents';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  getTotalCustomerCount() {\n    let url = this.customerUrl + 'customer-count';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  generateAutoInvoice(id) {\n    let url = this.customerUrl + 'generate-auto-invoice/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  getAutoGenerateList() {\n    let url = this.customerUrl + 'get-auto-generate-list';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/customer/customer.service.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-all/delivery-all.component.css\n// module id = ../../../../../src/app/delivery/delivery-all/delivery-all.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 3000px;\\\">\\n  <section class=\\\"content-header\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        All Delivery Challan's\\n      </h1>\\n      <ol class=\\\"breadcrumb\\\">\\n        <li><a [routerLink]=\\\"[ '/dashboard/home' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Sofkul</a></li>\\n        <li><a [routerLink]=\\\"[ '/dashboard/delivery/all' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Delivery Challan</a></li>\\n        <li class=\\\"active\\\">All</li>\\n      </ol>\\n    </div>\\n  </section>\\n\\n  <section class=\\\"content\\\">\\n    <!--  Page Content Here -->\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"box box-primary\\\">\\n        <div class=\\\"box-header\\\" style=\\\"margin-top: 20px;margin-bottom: 20px;\\\">\\n          <h3 class=\\\"box-title\\\">List Of All Delivery Challan's</h3>\\n          <br>\\n          <div class=\\\"box-tools\\\">\\n            <div class=\\\"row\\\">\\n              <!--<div class=\\\"col-md-offset-2 col-lg-4\\\">\\n                Filter : &nbsp;\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"All\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">All</label>\\n\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Paid\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Paid</label>\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Due\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Due</label>\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Partially Paid\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Partially Paid</label>\\n              </div>-->\\n              <div class=\\\"col-lg-6\\\" style=\\\"float:right\\\">\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-btn\\\">\\n                    <select style=\\\"font-size: 15px;height: 34px;\\\" (change)=\\\"filterChange($event.target.value)\\\">\\n                      <option value=\\\"username\\\">Username</option>\\n                      <option value=\\\"mobile_number\\\">Mobile Number</option>\\n                      <option value=\\\"area\\\">Area</option>\\n                    </select>\\n                  </div>\\n                  <!-- /btn-group -->\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"...\\\" placeholder=\\\"Search Recent Deliveries\\\"\\n                         (input)=\\\"quickSearch($event.target.value)\\\">\\n                </div>\\n                <!-- /input-group -->\\n              </div>\\n            </div>\\n            <br><br>\\n            <!-- /.row -->\\n            <!-- /.row -->\\n          </div>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body table-responsive no-padding\\\" *ngIf=\\\"deliveryList\\\">\\n          <table class=\\\"table table-hover\\\">\\n            <tbody>\\n            <tr>\\n              <th>Username</th>\\n              <th>Fullname</th>\\n              <th>Mobile</th>\\n              <th>Area</th>\\n              <th>Product</th>\\n              <!--<th>Due (INR)</th>\\n              <th>Paid (INR)</th>-->\\n              <th>Total (INR)</th>\\n              <!--<th>Status</th>-->\\n              <th>Delivery Challan Generated On</th>\\n              <!--<th>Last Transaction Date</th>-->\\n              <!--<th>Change Status</th>-->\\n              <th>Action</th>\\n            </tr>\\n            <tr\\n              *ngFor=\\\"let delivery of deliveryList | paginate: { itemsPerPage: 30, currentPage: p, totalItems:totalDeliveryCount }\\\">\\n              <td>{{ delivery.customerData?.username }}</td>\\n              <td>{{ delivery.customerData?.fullname }}</td>\\n              <td>{{ delivery.customerData?.mobile_primary }}</td>\\n              <td>{{ delivery.customerData?.areaData?.name }}</td>\\n              <td><span *ngIf=\\\"delivery.customerData?.productData?.length>0\\\"> {{ delivery.customerData?.productData[0]?.name }} - <em *ngIf=\\\"delivery.customerData?.productData[0]?.rate\\\">{{ delivery.customerData?.productData[0]?.rate }} INR/month</em> </span>\\n                  <small class=\\\"label bg-blue\\\">{{ delivery.customerData?.productData.length }}</small>\\n              </td>\\n             <!-- <td>\\n                <small class=\\\"label bg-blue\\\">{{ delivery.customerData?.productData?.length }}</small>\\n              </td>-->\\n             <!-- <td>{{ delivery?.amount_due }}</td>-->\\n              <!--<td>{{ delivery?.total - delivery?.amount_due }}</td>-->\\n              <td>{{ delivery?.total }}</td>\\n             <!-- <td>\\n                <label class=\\\"label label-danger\\\" *ngIf=\\\"delivery.status=='Due'\\\"> {{ delivery.status }} </label>\\n                <label class=\\\"label label-success\\\" *ngIf=\\\"delivery.status=='Paid'\\\"> {{ delivery.status }} </label>\\n                <label class=\\\"label label-warning\\\" *ngIf=\\\"delivery.status=='Partially Paid'\\\"> {{ delivery.status\\n                  }} </label>\\n              </td>-->\\n              <td>\\n                {{ delivery?.created_on | date: 'yMMMd' }}\\n              </td>\\n              <!--<td *ngIf=\\\"delivery?.status=='Due' || delivery?.status=='Partially Paid'\\\">\\n                {{ delivery?.payment_due_date | date }}\\n              </td>\\n              <td *ngIf=\\\"delivery?.status=='Paid'\\\">\\n                {{ delivery?.paid_date | date }}\\n              </td>\\n              <td>\\n                <button class=\\\"btn btn-success btn-xs\\\" (click)=\\\"changeStatus('Paid',delivery)\\\"> Paid</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"changeStatus('Partially Paid',delivery)\\\"\\n                        data-toggle=\\\"modal\\\" data-target=\\\"#partiallyPaymentModal\\\"> Partially Paid\\n                </button>\\n                <button class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"changeStatus('Due',delivery)\\\"> Due</button>\\n              </td>-->\\n              <td>\\n                <a type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\"\\n                   [routerLink]=\\\"['/dashboard/delivery/view','all',delivery?._id]\\\">\\n                  View</a>\\n              </td>\\n\\n              <!-- Modal for Partially payment -->\\n              <!--<div class=\\\"modal fade\\\" id=\\\"partiallyPaymentModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n                   aria-labelledby=\\\"myModalLabel\\\">\\n                <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                  <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span\\n                        aria-hidden=\\\"true\\\">&times;</span></button>\\n                      <h2 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Partially Payment</h2>\\n                    </div>\\n                    <div class=\\\"modal-body\\\" *ngIf=\\\"partialDelivery\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                          <h4 style=\\\"text-align: center\\\">Total: {{ partialDelivery?.total }} INR</h4>\\n                          <h4 style=\\\"text-align: center\\\">Due: {{ partialDelivery?.amount_due }} INR</h4>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                          <div *ngFor=\\\"let x of partialDelivery?.amount_partially_paid\\\">\\n                            <h4 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} INR</h4>\\n                            <h4 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} INR</h4>\\n                            <br>\\n                          </div>\\n\\n                        </div>\\n                      </div>\\n                      <br>\\n                      <form class=\\\"form-horizontal\\\" *ngIf=\\\"partialDelivery\\\">-->\\n                        <!--amoount partially paid-->\\n                        <!--<div class=\\\"form-group\\\">\\n                          <label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid\\n                            (INR) </label>\\n                          <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"text\\\" name=\\\"partialPay\\\" [(ngModel)]=\\\"partialPay\\\" class=\\\"form-control \\\"\\n                                   id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">\\n                          </div>\\n                        </div>\\n                      </form>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePartialPay()\\\"\\n                              data-dismiss=\\\"modal\\\">Save changes\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>-->\\n            </tr>\\n            </tbody>\\n\\n          </table>\\n        </div>\\n        <!-- /.box-body -->\\n      </div>\\n      <!-- /.box -->\\n      <div class=\\\"col-md-offset-4\\\">\\n        <pagination-controls (pageChange)=\\\"onPaginate($event);p=$event\\\"></pagination-controls>\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-all/delivery-all.component.html\n// module id = ../../../../../src/app/delivery/delivery-all/delivery-all.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {DeliveryService} from '../delivery.service';\nimport {Delivery} from '../delivery';\nimport {Customer} from '../../customer/customer';\nimport {Product} from '../../product/product';\nimport {AreaService} from '../../area/area.service';\nimport {CustomerService} from '../../customer/customer.service';\nimport {ProductService} from '../../product/product.service';\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-delivery-all',\n  templateUrl: './delivery-all.component.html',\n  styleUrls: ['./delivery-all.component.css']\n})\nexport class DeliveryAllComponent implements OnInit {\n\n  public deliveryList: Delivery[] = [];\n  public partialDelivery: Delivery;\n  totalDeliveryCount: number = 0;\n  public paginator = 1;\n\n  constructor(private customerService: CustomerService, private router: Router, private deliveryService: DeliveryService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  ngOnInit() {\n    this.deliveryService.getAllDeliveryCount()\n      .subscribe(\n        (res) => {\n          this.totalDeliveryCount = res.count;\n        }\n      );\n    this.getAllDelivery();\n\n  }\n\n  getAllDelivery() {\n    this.deliveryList = [];\n    this.deliveryService.getAllDelivery(this.paginator)\n      .subscribe(\n        (res: Delivery[]) => {\n          if (res.length == 0) {\n            this.deliveryList = [];\n          } else {\n            _.each(res, (delivery: Delivery) => {\n              let customer: Customer;\n              this.customerService.getCustomerDetails(delivery.customer_id)\n                .subscribe(\n                  (res: Customer) => {\n                    customer = res;\n                    customer.productData = [];\n                    if (delivery.productList.length > 0) {\n                      _.each(delivery.productList, (element) => {\n                        this.productService.getProductById(element)\n                          .subscribe(\n                            (res: Product) => {\n                              customer['productData'].push(res);\n                            }\n                          )\n                      });\n                    }\n\n                    this.areaService.getAreaById(customer.area)\n                      .subscribe(\n                        (res) => {\n                          customer['areaData'] = res;\n                        }\n                      )\n                      delivery.customerData = customer;\n                    this.deliveryList.push(delivery);\n                  }\n                )\n            });\n          }\n        },\n        (err) => {\n          console.log('ERROR in getAllDelivery');\n        }\n      )\n  }\n\n  toggleSearchStatus(event: any) {\n    console.log(event);\n  }\n\n  filterChange(event: any) {\n\n  }\n\n  quickSearch(event: any) {\n\n  }\n\n  changeStatus(status: string, delivery: Delivery) {\n    if (status == 'Paid') {\n      this.setPaidDateCounter(delivery);\n      delivery.status = 'Paid';\n      delivery.paid_date = Date.now();\n      delivery.amount_due = 0;\n    } else if (status == 'Due') {\n      delivery.status = 'Due';\n      delivery.amount_due = delivery.total;\n      delivery.amount_partially_paid = [];\n    } else if (status == 'Partially Paid') {\n      this.partialDelivery = delivery;\n    }\n\n    delivery['type'] = 'all';\n\n    this.deliveryService.changeDeliveryStatus(delivery)\n      .subscribe(\n        (res) => {\n\n        }\n      )\n  }\n\n  //  for pagination\n  onPaginate(event: any) {\n    this.paginator = event;\n    this.getAllDelivery();\n  }\n\n\n  setPaidDateCounter(delivery: Delivery) {\n    this.deliveryService.setPaidDateCounter(delivery)\n      .subscribe(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          console.log(\"Error in setpaiddatecounter\");\n        }\n      )\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-all/delivery-all.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-create/delivery-create.component.css\n// module id = ../../../../../src/app/delivery/delivery-create/delivery-create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 3000px;\\\">\\n  <section class=\\\" content-header \\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        Create New Delivery Challan\\n      </h1>\\n      <ol class=\\\"breadcrumb \\\">\\n        <li><a [routerLink]=\\\"[ '/dashboard/home' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Sofkul</a></li>\\n        <li><a [routerLink]=\\\"[ '/dashboard/delivery/create' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Delivery Challan</a></li>\\n        <li class=\\\"active \\\">Create</li>\\n      </ol>\\n    </div>\\n  </section>\\n  <section class=\\\"content \\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"box box-primary\\\" style=\\\"height:2000px\\\">\\n        <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"showSuccess\\\">New Delivery Challan Created Successfully !!</div>\\n        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"showError\\\">ERROR !! Please Try Again.</div>\\n        <!--  Page Content Here -->\\n        <br>\\n        <!--customer list-->\\n        <form class=\\\"form-horizontal \\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\" form-group \\\">\\n              <label class=\\\"col-sm-2 control-label \\\">Choose Customer: </label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <div>\\n                  <select required *ngIf=\\\"customerList\\\" class=\\\"form-control\\\" (change)=\\\"getCustomer($event)\\\">\\n                    <option *ngFor=\\\"let customer of customerList\\\" value=\\\"{{ customer._id }}\\\">\\n                      <strong> {{ customer.username }} </strong> - <em> {{ customer.fullname }} </em>\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <hr>\\n          <br><br>\\n        </form>\\n\\n\\n        <form class=\\\"form-horizontal \\\" style=\\\"margin-top:30px\\\" [formGroup]=\\\"deliveryCreateForm\\\"\\n              (submit)=\\\"submitDeliveryCreateForm()\\\">\\n          <div class=\\\"col-md-12\\\" *ngIf=\\\"resCustomer\\\">\\n            <!--username-->\\n            <div class=\\\" form-group \\\">\\n              <label for=\\\"username \\\" class=\\\"col-sm-2 control-label \\\">Username</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"username\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"username \\\"\\n                       placeholder=\\\"Username \\\" readonly>\\n              </div>\\n            </div>\\n            <!--email-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"email \\\" class=\\\"col-sm-2 control-label \\\">Email</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"email\\\" type=\\\"email \\\" class=\\\"form-control \\\" id=\\\"email \\\" placeholder=\\\"Email \\\"\\n                       readonly>\\n              </div>\\n            </div>\\n            <!--fullname-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"fullname \\\" class=\\\"col-sm-2 control-label \\\">Fullname</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"fullname\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"fullname \\\"\\n                       placeholder=\\\"Fullname \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--mobile_primary-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"mobile_primary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Primary</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"mobile_primary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_primary \\\"\\n                       placeholder=\\\"Mobile primary \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--mobile_secondary-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"mobile_secondary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Secondary</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"mobile_secondary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_secondary \\\"\\n                       placeholder=\\\"Mobile secondary \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--location-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"location \\\" class=\\\"col-sm-2 control-label \\\">Location</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text \\\" formControlName=\\\"location\\\" class=\\\"form-control \\\" id=\\\"location \\\"\\n                       placeholder=\\\"location \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--area-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"area \\\" class=\\\"col-sm-2 control-label \\\">Area</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text \\\" formControlName=\\\"area\\\" class=\\\"form-control \\\" id=\\\"area \\\" placeholder=\\\"area \\\"\\n                       readonly>\\n              </div>\\n            </div>\\n\\n            <!--city-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"city \\\" class=\\\"col-sm-2 control-label \\\">City</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text \\\" formControlName=\\\"city\\\" class=\\\"form-control \\\" id=\\\"city \\\" placeholder=\\\"city \\\"\\n                       readonly>\\n              </div>\\n            </div>\\n\\n            <!--<div class=\\\"form-group \\\">\\n              <label for=\\\"status\\\" class=\\\"col-sm-2 control-label \\\">Status</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <label class=\\\"label label-danger\\\">Due</label>\\n              </div>\\n            </div>-->\\n            <br>\\n\\n            <!--delivery_created_date-->\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"date\\\" class=\\\"col-sm-2 control-label\\\">Delivery Date</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"date\\\" formControlName=\\\"date\\\">\\n              </div>\\n            </div>\\n\\n            <!--total amount-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"amount_due_minus_discount \\\" class=\\\"col-sm-2 control-label \\\">Total (INR)</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"number \\\" formControlName=\\\"total\\\" class=\\\"form-control \\\" id=\\\"amount_due_minus_discount \\\"\\n                       placeholder=\\\"total \\\"\\n                       readonly>\\n              </div>\\n            </div>\\n\\n            <!--discount-->\\n            <!--<div class=\\\"form-group \\\">-->\\n            <!--<label for=\\\"discount \\\" class=\\\"col-sm-2 control-label \\\">Discount</label>-->\\n            <!--<div class=\\\"col-sm-10\\\">-->\\n            <!--<input type=\\\"number \\\" (keyup)=\\\"updateDiscount($event.target.value)\\\" formControlName=\\\"discount\\\"-->\\n            <!--class=\\\"form-control \\\" id=\\\"discount \\\" placeholder=\\\"discount \\\"-->\\n            <!--&gt;-->\\n            <!--</div>-->\\n            <!--</div>-->\\n\\n            <!--product list-->\\n            <div class=\\\"form-group \\\" *ngFor=\\\"let item of createRange(allProductCounter);let i=index\\\">\\n              <label class=\\\"col-sm-2 control-label \\\">Product [{{ i+1 }}]</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <div class=\\\"productSelectBox\\\">\\n                  <select required *ngIf=\\\"productList\\\" class=\\\"form-control\\\" (change)=\\\"onProductChange($event,i)\\\">\\n                    <option *ngFor=\\\"let product of productList\\\" value=\\\"{{ product._id }}\\\">\\n                      {{ product.name }} - <em> {{ product.rate }} INR/month </em>\\n                    </option>\\n                  </select>\\n                  <button *ngIf=\\\"i>0\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-danger btn-xs\\\" (click)=\\\"removeProduct(i)\\\">\\n                    <i\\n                      class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n            <button (click)=\\\"addProduct()\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-success\\\"><i class=\\\"fa fa-plus\\\"\\n                                                                                               aria-hidden=\\\"true\\\"></i>\\n              &nbsp; Add Product\\n            </button>\\n\\n            <div class=\\\"form-group \\\">\\n              <div class=\\\"col-md-offset-2 col-md-10\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success btn-lg\\\">Save</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-lg\\\">Cancel</button>\\n\\n              </div>\\n            </div>\\n          </div>\\n          <br>\\n          <br>\\n          <hr>\\n          <div class=\\\"col-md-12\\\" *ngIf=\\\"isSaved\\\">\\n            <div class=\\\"alert alert-success\\\" role=\\\"alert\\\">Delivery Challan Created Successfully !!</div>\\n            <a class=\\\"btn btn-lg btn-info\\\" [routerLink]=\\\"['/dashboard/delivery/display/all/',resultDelivery._id]\\\">Generate Delivery Challan Now</a>\\n          </div>\\n\\n        </form>\\n      </div>\\n\\n    </div>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-create/delivery-create.component.html\n// module id = ../../../../../src/app/delivery/delivery-create/delivery-create.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {FormGroup, FormBuilder} from \"@angular/forms\";\nimport {ProductService} from '../../product/product.service';\nimport {AreaService} from '../../area/area.service';\nimport {CustomerService} from '../../customer/customer.service';\nimport {Customer} from '../../customer/customer';\nimport * as _ from 'underscore';\nimport {Product} from '../../product/product';\nimport {Area} from \"../../area/area\";\nimport {Subscription} from \"rxjs\";\nimport {Delivery} from '../delivery';\nimport {DeliveryService} from '../delivery.service';\n\n@Component({\n  selector: 'app-delivery-create',\n  templateUrl: './delivery-create.component.html',\n  styleUrls: ['./delivery-create.component.css']\n})\nexport class DeliveryCreateComponent implements OnInit {\n\n  public productList: any[] = [];\n  showSuccess: boolean = false;\n  showError: boolean = false;\n  public deliveryCreateForm: FormGroup;\n  public customerList: Customer[] = [];\n  public resCustomer: Customer;\n  private subscription: Subscription;\n  public delivery: Delivery;\n  public allProductCounter = 1;\n  public allProducts: any[] = [];\n  public isSaved: boolean = false;\n  public resultDelivery;\n\n\n  constructor(private deliveryService: DeliveryService, private fb: FormBuilder, private customerService: CustomerService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  ngOnInit() {\n    this.buildForm();\n    this.getProductList();\n    this.getAllCustomers();\n  }\n\n  buildForm() {\n    let date = Date.now();\n    this.deliveryCreateForm = this.fb.group({\n      customer_id: [''],\n      username: [''],\n      email: [''],\n      fullname: [''],\n      location: [''],\n      area: [''],\n      city: [''],\n      mobile_primary: [''],\n      mobile_secondary: [''],\n      amount_due: [''],\n      total: [''],\n      discount: [0],\n      date: [date],\n      status: ['Due'],\n      productList: []\n    });\n  }\n\n  getAllCustomers() {\n    this.customerService.getAllCustomers('all')\n      .subscribe(\n        (res) => {\n          this.customerList = res;\n        },\n        (err) => {\n\n        }\n      );\n  }\n\n  getCustomer(event: any) {\n    this.resCustomer = _.find(this.customerList, function (item) {\n      return item['_id'] == event.target.value;\n    });\n\n    this.deliveryCreateForm.patchValue({\n      username: this.resCustomer.username,\n      email: this.resCustomer.email,\n      fullname: this.resCustomer.fullname,\n      location: this.resCustomer.location,\n      city: this.resCustomer.city,\n      mobile_primary: this.resCustomer.mobile_primary,\n      mobile_secondary: this.resCustomer.mobile_secondary,\n    });\n\n    this.resCustomer.productData = [];\n    if (this.resCustomer.area) {\n      this.areaService.getAreaById(this.resCustomer.area)\n        .subscribe(\n          (res: Area) => {\n            this.resCustomer.areaData = res;\n            this.deliveryCreateForm.patchValue({\n              area: this.resCustomer.areaData.name\n            });\n          },\n          (err) => {\n\n          }\n        )\n    }\n  }\n\n  getProductList() {\n    this.productList = [];\n    this.productService.getAllProduct()\n      .subscribe(\n        (res) => {\n          _.each(res, (item) => {\n            if (item['status']) {\n              this.productList.push(item);\n            }\n          });\n        },\n        (err) => {\n          console.log(\"ERROR from productList\");\n        },\n        () => {\n          this.allProducts.push(this.productList[0]);\n          this.deliveryCreateForm.patchValue({\n            total: this.productList[0].rate\n          })\n        }\n      )\n  }\n\n\n  removeProduct(index) {\n    this.allProductCounter--;\n    this.allProducts.splice(index, 1);\n  }\n\n  addProduct() {\n    this.allProductCounter++;\n    let newProduct = this.productList[0];\n    this.allProducts.push(newProduct);\n    this.updateTotal();\n  }\n\n  onProductChange(event: any, index) {\n    let result = _.find(this.productList, function (item) {\n      return item['_id'] == event.target.value;\n    })\n    this.allProducts[index] = result;\n    this.updateTotal();\n  }\n\n  createRange(number) {\n    let items: number[] = [];\n    for (let i = 1; i <= number; i++) {\n      items.push(i);\n    }\n    return items;\n  }\n\n  updateTotal() {\n    let total = 0;\n    _.each(this.allProducts, (product) => {\n      total += product['rate'];\n    });\n    this.deliveryCreateForm.patchValue({\n      total: total\n    })\n  }\n\n  submitDeliveryCreateForm() {\n    let product_list = _.pluck(this.allProducts, '_id');\n    this.deliveryCreateForm.patchValue({\n      productList: product_list,\n      customer_id: this.resCustomer['_id']\n    });\n\n    this.deliveryService.createNewDelivery(this.deliveryCreateForm.value)\n      .subscribe(\n        (res) => {\n          this.resultDelivery = res;\n          this.isSaved = true;\n        }\n      )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-create/delivery-create.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content-wrapper {\\n    min-height: 1200px;\\n    /*font-size: 20px;*/\\n}\\n\\n.box-primary {\\n    padding: 30px 30px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-edit/delivery-edit.component.css\n// module id = ../../../../../src/app/delivery/delivery-edit/delivery-edit.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"showForm\\\" class=\\\"content-wrapper\\\" style=\\\"height: 2000px;\\\">\\n  <section class=\\\" content-header \\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        Delivery Challan Details of <em>{{ delivery.customerData?.username }}</em>\\n        <small>for the month of {{ delivery?.created_on | date:'MMMM'}}</small>\\n      </h1>\\n      <ol class=\\\"breadcrumb \\\">\\n        <li><a [routerLink]=\\\"[ '/dashboard/home' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Sofkul</a></li>\\n        <li><a [routerLink]=\\\"[ '/dashboard/delivery/all' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Delivery Challan</a></li>\\n        <li class=\\\"active \\\">Edit</li>\\n      </ol>\\n    </div>\\n  </section>\\n  <section class=\\\"content \\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"box box-primary\\\" *ngIf=\\\"delivery\\\">\\n        <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"showSuccess\\\">Delivery Challan Data Updated Successfully !!</div>\\n        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"showError\\\">ERROR !! Please Try Again.</div>\\n        <!--  Page Content Here -->\\n        <form class=\\\"form-horizontal \\\" [formGroup]=\\\"deliveryDetailForm\\\" *ngIf=\\\"delivery\\\"\\n              (submit)=\\\"submitDeliveryEditForm()\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <!--username-->\\n            <div class=\\\" form-group \\\">\\n              <label for=\\\"username \\\" class=\\\"col-sm-2 control-label \\\">Username</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"username\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"username \\\"\\n                       placeholder=\\\"Username \\\" readonly>\\n              </div>\\n            </div>\\n            <!--email-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"email \\\" class=\\\"col-sm-2 control-label \\\">Email</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"email\\\" type=\\\"email \\\" class=\\\"form-control \\\" id=\\\"email \\\" placeholder=\\\"Email \\\"\\n                       readonly>\\n              </div>\\n            </div>\\n            <!--fullname-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"fullname \\\" class=\\\"col-sm-2 control-label \\\">Fullname</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"fullname\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"fullname \\\"\\n                       placeholder=\\\"Fullname \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--mobile_primary-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"mobile_primary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Primary</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"mobile_primary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_primary \\\"\\n                       placeholder=\\\"Mobile primary \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--mobile_secondary-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"mobile_secondary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Secondary</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"mobile_secondary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_secondary \\\"\\n                       placeholder=\\\"Mobile secondary \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--location-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"location \\\" class=\\\"col-sm-2 control-label \\\">Location</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text \\\" formControlName=\\\"location\\\" class=\\\"form-control \\\" id=\\\"location \\\"\\n                       placeholder=\\\"location \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--area-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"area \\\" class=\\\"col-sm-2 control-label \\\">Area</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text \\\" formControlName=\\\"area\\\" class=\\\"form-control \\\" id=\\\"area \\\" placeholder=\\\"area \\\"\\n                       readonly>\\n              </div>\\n            </div>\\n\\n            <!--city-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"city \\\" class=\\\"col-sm-2 control-label \\\">City</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text \\\" formControlName=\\\"city\\\" class=\\\"form-control \\\" id=\\\"city \\\" placeholder=\\\"city \\\"\\n                       readonly>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-6\\\">\\n            <!--choose status-->\\n            <!--<div class=\\\"form-group \\\">\\n              <label for=\\\"status \\\" class=\\\"col-sm-6 control-label \\\">Payment Status</label>\\n              <div class=\\\"col-sm-6\\\">\\n                <label class=\\\"label label-warning\\\" *ngIf=\\\"delivery.status=='Partially Paid'\\\">{{ delivery.status }}</label>\\n                <label class=\\\"label label-danger\\\" *ngIf=\\\"delivery.status=='Due'\\\">{{ delivery.status }}</label>\\n                <label class=\\\"label label-success\\\" *ngIf=\\\"delivery.status=='Paid'\\\">{{ delivery.status }}</label>\\n              </div>\\n            </div>-->\\n\\n            <!--delivery_created_date-->\\n            <!--<div class=\\\"form-group \\\">\\n            <!--<label for=\\\"delivery_created_date \\\" class=\\\"col-sm-2 control-label \\\">Delivery Challan created on</label>-->\\n            <!--<div class=\\\"col-sm-10\\\">-->\\n            <!--<input type=\\\"date\\\" formControlName=\\\"delivery_created_date\\\">-->\\n            <!--</div>-->\\n            <!--</div>-->\\n\\n            <!--payment_due_date-->\\n            <!--<div class=\\\"form-group \\\" *ngIf=\\\"paymentStatus=='Due'\\\">\\n                <label for=\\\"payment_due_date \\\" class=\\\"col-sm-2 control-label \\\">Payment Due Date</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input type=\\\"date\\\" formControlName=\\\"payment_due_date\\\" value=\\\"currentDate.toString('Y-m-d')\\\">\\n                </div>\\n            </div>-->\\n\\n            <!--for partial payment only-->\\n            <div class=\\\"form-group \\\" *ngIf=\\\"delivery.status=='Partially Paid' \\\">\\n              <div *ngFor=\\\"let x of delivery?.amount_partially_paid;let i = index\\\">\\n                <label for=\\\"status \\\" class=\\\"col-sm-6 control-label \\\">Partial Payment : [{{ i+1 }}] </label>\\n                <div class=\\\"col-sm-6\\\">\\n                  <h5 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} INR</h5>\\n                  <h5 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} INR</h5>\\n                  <br>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <!--payment paid / partially paid date-->\\n            <div class=\\\"form-group \\\" *ngIf=\\\"delivery.status=='Paid' && paymentStatus!='Due'\\\">\\n              <label for=\\\"paid \\\" class=\\\"col-sm-2 control-label \\\">Payment Paid Date</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"date\\\" formControlName=\\\"paid_date\\\">\\n              </div>\\n            </div>\\n\\n            <!--amoount partially paid-->\\n            <!--<div class=\\\"form-group \\\" *ngIf=\\\"delivery.status=='Partially Paid'\\\">-->\\n            <!--<label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid (INR) </label>-->\\n            <!--<div class=\\\"col-sm-10\\\">-->\\n            <!--<input type=\\\"text \\\" (keyup)=\\\"getPartiallyPaid($event)\\\" formControlName=\\\"amount_partially_paid\\\" class=\\\"form-control \\\" id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">-->\\n            <!--</div>-->\\n            <!--</div>-->\\n\\n            <!--amount_due-->\\n            <!--<div class=\\\"form-group \\\" *ngIf=\\\"delivery.status!='Paid'\\\">\\n              <label for=\\\"amount_due \\\" class=\\\"col-sm-2 control-label \\\">Amount Due (INR) </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input *ngIf=\\\"delivery.status=='Due'\\\" type=\\\"text \\\" formControlName=\\\"amount_due\\\" class=\\\"form-control \\\"\\n                       id=\\\"amount_due \\\" placeholder=\\\"amount due\\\" readonly>\\n                <input *ngIf=\\\"delivery.status=='Partially Paid'\\\" type=\\\"text \\\" formControlName=\\\"amount_due\\\"\\n                       class=\\\"form-control \\\" id=\\\"amount_due \\\" placeholder=\\\"amount due\\\" readonly>\\n              </div>\\n            </div>-->\\n\\n\\n            <!--discount-->\\n            <!-- <div class=\\\"form-group \\\">\\n              <label for=\\\"discount \\\" class=\\\"col-sm-2 control-label\\\">Discount (INR) </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input (keyup)=\\\"getDiscount($event)\\\" type=\\\"text\\\" formControlName=\\\"discount\\\" class=\\\"form-control \\\"\\n                       id=\\\"discount \\\" placeholder=\\\"discount\\\">\\n              </div>\\n            </div>-->\\n\\n            <!--total-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"discount \\\" class=\\\"col-sm-2 control-label \\\">Total (INR) </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input *ngIf=\\\"delivery.status!='Paid'\\\" type=\\\"text \\\" formControlName=\\\"total\\\" class=\\\"form-control \\\"\\n                       id=\\\"total \\\" placeholder=\\\"total\\\">\\n                <input *ngIf=\\\"delivery.status=='Paid'\\\" type=\\\"text \\\" formControlName=\\\"total\\\" class=\\\"form-control \\\"\\n                       id=\\\"total \\\" placeholder=\\\"total\\\" readonly>\\n              </div>\\n            </div>\\n            <div>\\n              <!--for products already list-->\\n              <div class=\\\"form-group \\\" *ngFor=\\\"let myProduct of delivery.customerData?.productData;let i=index\\\">\\n                <label for=\\\"\\\" class=\\\"col-sm-2 control-label \\\">Product [{{ i+1 }}]</label>\\n                <div class=\\\"col-sm-10 \\\">\\n                  <div class=\\\"productSelectBox\\\">\\n                    <select (change)=\\\"onProductChange($event,i,'my')\\\" required *ngIf=\\\"productList\\\" class=\\\"form-control\\\"\\n                            style=\\\"margin-bottom:10px\\\">\\n                      <option [selected]=\\\"product._id == myProduct._id\\\" *ngFor=\\\"let product of productList\\\"\\n                              value=\\\"{{ product._id }}\\\">\\n                        {{ product.name }} - <em> {{ product.rate }} INR/month </em>\\n                      </option>\\n                    </select>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <!--for new additional products-->\\n              <div class=\\\"form-group \\\" *ngFor=\\\"let newProduct of additionalProducts;let i=index\\\">\\n                <label for=\\\"\\\" class=\\\"col-sm-2 control-label \\\">Product [{{ i+delivery.customerData?.productData.length+1\\n                  }}]</label>\\n                <div class=\\\"col-sm-10 \\\">\\n                  <div class=\\\"productSelectBox\\\">\\n                    <select (change)=\\\"onProductChange($event,i,'add')\\\" required *ngIf=\\\"productList\\\" class=\\\"form-control\\\"\\n                            style=\\\"margin-bottom:10px\\\">\\n                      <option *ngFor=\\\"let product of productList\\\" value=\\\"{{ product._id }}\\\">\\n                        {{ product.name }} - <em> {{ product.rate }} INR/month </em></option>\\n                    </select>\\n                    <button *ngIf=\\\"delivery.status!='Paid'\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-danger btn-xs\\\"\\n                            (click)=\\\"removeProduct(i)\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></button>\\n                  </div>\\n                </div>\\n              </div>\\n              <button *ngIf=\\\"delivery.status!='Paid'\\\" (click)=\\\"addProduct()\\\" type=\\\"button\\\"\\n                      class=\\\"pull-right btn btn-success\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> &nbsp; Add\\n                Product\\n              </button>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-offset-1 col-sm-10 \\\" style=\\\"margin-top:10px\\\">\\n              <!--<button type=\\\"submit \\\" class=\\\"btn btn-success\\\">Save</button>-->\\n              <button type=\\\"submit\\\" class=\\\"btn btn-info btn-lg\\\">Generate Delivery Challan</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-edit/delivery-edit.component.html\n// module id = ../../../../../src/app/delivery/delivery-edit/delivery-edit.component.html\n// module chunks = main","import {DatePipe} from '@angular/common';\nimport {Component, OnInit, ElementRef, ViewChild} from '@angular/core';\nimport {DeliveryService} from '../delivery.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from \"rxjs\";\nimport {Delivery} from '../delivery';\nimport {Router} from \"@angular/router\";\nimport {FormGroup, FormBuilder} from \"@angular/forms\";\nimport {ProductService} from '../../product/product.service';\nimport {CustomerService} from '../../customer/customer.service';\nimport * as _ from 'underscore';\nimport {AreaService} from '../../area/area.service';\n\n@Component({\n  selector: 'app-delivery-edit',\n  templateUrl: './delivery-edit.component.html',\n  styleUrls: ['./delivery-edit.component.css']\n})\nexport class DeliveryEditComponent implements OnInit {\n  @ViewChild('productSelectBox') productSelectBox: ElementRef;\n\n  public productList: any[] = [];\n  public additionalProducts: any[] = [];\n  public addProductCounter: number = 0;\n  public allProductsAdd: any[] = [];\n\n\n  public productSuggestions: any[] = [];\n\n  private subscription: Subscription;\n  public deliveryDetailForm: FormGroup;\n  private id: any;\n  public delivery: Delivery;\n  public currentDate: number = Date.now();\n  public datePipe: DatePipe = new DatePipe('en-US');\n  public paymentStatus: string = 'Due';\n  public showForm: boolean = false;\n  private type: string;\n\n  constructor(private areaService: AreaService, private customerService: CustomerService, private elementRef: ElementRef, private productService: ProductService, private fb: FormBuilder, private deliveryService: DeliveryService, private route: ActivatedRoute, private router: Router) {\n\n  }\n\n  ngOnInit() {\n    this.getProductList();\n    this.subscription = this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.type = params['type'];\n      if (this.id) {\n        this.deliveryService.getDeliveryById(this.type, this.id)\n          .subscribe(\n            (res) => {\n              this.delivery = res;\n              this.allProductsAdd = this.delivery.productList;\n              this.buildForm();\n            },\n            (err) => {\n\n            }\n          )\n      }\n    });\n  }\n\n  buildForm() {\n    this.customerService.getCustomerDetails(this.delivery.customer_id)\n      .subscribe(\n        (res) => {\n          this.delivery.customerData = res;\n          this.delivery.customerData.productData = [];\n          let total_partially_paid = 0;\n          _.each(this.delivery.productList, (item) => {\n            this.productService.getProductById(item)\n              .subscribe(\n                (res) => {\n                  this.delivery.customerData.productData.push(res);\n                }\n              )\n            total_partially_paid += item['amount'];\n          });\n\n          this.deliveryDetailForm = this.fb.group({\n            username: [res['username']],\n            email: [res['email']],\n            fullname: [res['fullname']],\n            location: [res['location']],\n            area: [''],\n            city: [res['city']],\n            mobile_primary: [res['mobile_primary']],\n            mobile_secondary: [res['mobile_secondary']],\n            payment_due_date: [this.delivery['payment_due_date']],\n            amount_due: [this.delivery['amount_due']],\n            status: [this.delivery['status']],\n            total: [this.delivery['total']],\n            discount: [this.delivery['discount']],\n            delivery_created_date: [this.delivery['delivery_created_date']],\n            paid_date: [this.delivery['paid_date']],\n            amount_partially_paid: total_partially_paid\n          });\n\n          this.areaService.getAreaById(res['area'])\n            .subscribe(\n              (res) => {\n                this.deliveryDetailForm.patchValue({\n                  area: res['name']\n                });\n              }\n            )\n          this.showForm = true;\n        }\n      )\n\n  }\n\n  getProductSuggestions(event: any) {\n    let data = {\n      text: event.query\n    }\n\n    this.productService.searchByName(data)\n      .subscribe(\n        (res) => {\n          this.productSuggestions = res;\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  getProductList() {\n    this.productList = [];\n    this.productService.getAllProduct()\n      .subscribe(\n        (res) => {\n          _.each(res, (item) => {\n            if (item['status']) {\n              this.productList.push(item);\n            }\n          });\n        },\n        (err) => {\n          console.log(\"ERROR from productList\");\n        }\n      )\n  }\n\n  addProduct() {\n    let newProduct = this.productList[0];\n    this.additionalProducts.push(newProduct);\n    this.allProductsAdd.push(newProduct._id);\n    this.updatePayments();\n  }\n\n  removeProduct(index) {\n    let delIndex = this.allProductsAdd.indexOf(this.additionalProducts[index]);\n    this.allProductsAdd.splice(delIndex, 1);\n    this.additionalProducts.splice(index, 1);\n    this.updatePayments();\n  }\n\n  onProductChange(event: any, index, mode) {\n    if (mode != 'my') {\n      index = index + this.delivery.customerData.productData.length;\n    }\n    this.allProductsAdd[index] = event.target.value;\n    this.updatePayments();\n  }\n\n  submitDeliveryEditForm() {\n    let data = {};\n    data = {\n      id: this.id,\n      amount_due: this.deliveryDetailForm.value.amount_due,\n      total: this.deliveryDetailForm.value.total,\n      discount: this.deliveryDetailForm.value.discount,\n      productList: this.allProductsAdd,\n      amount_partially_paid: this.delivery.amount_partially_paid,\n      type: this.type\n    }\n\n    this.deliveryService.preGenerateDeliveryUpdate(data)\n      .subscribe(\n        (res) => {\n          this.router.navigate(['dashboard/delivery/display', this.type, this.id]);\n        },\n        (err) => {\n          console.log('Error in Pre Generator');\n        }\n      )\n  }\n\n\n  changeStatus(event: any) {\n    this.paymentStatus = event.target.value;\n    if (this.paymentStatus == 'Paid') {\n      let currentDate = this.datePipe.transform(Date.now(), 'y-MM-dd');\n      this.deliveryDetailForm.patchValue({\n        paid_date: currentDate\n      });\n    }\n  }\n\n  getPartiallyPaid(event: any) {\n    this.deliveryDetailForm.patchValue({\n      amount_partially_paid: event.target.value,\n      amount_due: this.delivery.amount_due - event.target.value\n    });\n  }\n\n  getDiscount(event: any) {\n    this.deliveryDetailForm.patchValue({\n      total: this.deliveryDetailForm.value.amount_due - event.target.value\n    });\n  }\n\n  updatePayments() {\n    let total = 0;\n    _.each(this.allProductsAdd, (item) => {\n      let product = _.findWhere(this.productList, {_id: item});\n      total += product.rate;\n    });\n\n    this.deliveryDetailForm.patchValue({\n      total: total,\n      discount: 0,\n      amount_due: total\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-edit/delivery-edit.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#delivery_box {\\n  background-color: #fff;\\n  font-size: 20px;\\n  padding-left: 20px;\\n  padding-right: 20px;\\n}\\n\\n#delivery_table {\\n  background-color: #fff;\\n  font-size: 20px;\\n}\\n\\n#company_logo {\\n  margin-top: 50px;\\n  margin-left: 10px;\\n  width: 210px;\\n  height: 180px;\\n}\\n\\n.row-divide {\\n  border-bottom: 4px solid #d2d6de;\\n}\\n\\n#delivery_box {\\n  font-weight: 550;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-html/delivery-html.component.css\n// module id = ../../../../../src/app/delivery/delivery-html/delivery-html.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 2000px;margin-left: 0vw;\\\">\\n  <section class=\\\" content-header\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        Delivery Challan Display\\n      </h1>\\n      <ol class=\\\"breadcrumb \\\">\\n        <li><a [routerLink]=\\\"[ '/dashboard/home' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Sofkul</a></li>\\n        <li><a [routerLink]=\\\"[ '/dashboard/delivery/all' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Delivery Challan</a></li>\\n        <li class=\\\"active \\\">Display</li>\\n      </ol>\\n    </div>\\n  </section>\\n  <section class=\\\"content \\\" *ngIf=\\\"delivery\\\">\\n    <div class=\\\"col-xs-12\\\" id=\\\"delivery_main\\\">\\n      <div id=\\\"delivery_body\\\">\\n        <!--delivery display starts here-->\\n        <div class=\\\"\\\" id=\\\"delivery_box\\\" style=\\\"margin-top:10px\\\" #deliveryBox>\\n          <!--head row-->\\n          <div class=\\\"row \\\">\\n            <!--left section-->\\n            <div class=\\\"col-md-6\\\">\\n              <img src=\\\"/assets/dist/img/Aquality.jpg\\\" style=\\\"width:40%; height:50%;\\\" id=\\\"company_logo\\\">\\n            </div>\\n            <!--right section-->\\n            <div class=\\\"col-md-offset-2 col-md-4\\\" style=\\\"text-align: -webkit-left; margin-top:8px;\\\">\\n              <h3 style=\\\"font-size: 60px;\\\"></h3><br>\\n\\n            </div>\\n\\n            \\n              <div class=row style=\\\"background-color:darkslategray; margin-top:150px; width:100%; height:200px;margin-left: 0vw;\\\">\\n                <div class=\\\"col-md-4 col-xs-4\\\" >\\n                  <div class=\\\"\\\" style=\\\"color:white; margin-left:40px;margin-top:20px; padding:10px; font-size:16px; \\\">\\n                      <span> Delivery Challan for: </span><br>\\n                      <strong> {{ delivery.customerData?.fullname }} </strong><br>\\n                      <!--<span> {{ delivery.customerData?.location }} </span><br>-->\\n                      <span> {{ delivery.customerData?.city }} </span><br>\\n                      <span> India </span>\\n                      <span> {{ delivery.customerData?.mobile_primary }} </span><br>\\n                      <span> {{ delivery.customerData?.email }} </span><br>\\n                      <!--<span> {{ delivery.customerData?.area }} </span><br>-->\\n                      </div>\\n                </div>\\n                <div class=\\\"col-md-offset-2 col-md-6 col-xs-2\\\">\\n                  <div style=\\\"padding-top:40px;\\\">\\n                    <span style=\\\"color:rgb(245, 163, 10); font-size:70px;\\\">DELIVERY CHALLAN</span>\\n                    </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\" style=\\\"margin-left: 0vw; background-color:black;width:100%;color:#fff; height:60px; text-align: -webkit-center; font-size:15px;\\\">\\n                <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\" >\\n                    <span> Date: {{ delivery.created_on | date }} </span>\\n                </div>\\n                <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                    <span> Valid upto: DD/MM/YYYY</span>\\n                  </div>\\n                  <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                      <span> Delivery ref: #123456</span>\\n                    </div>\\n              </div>\\n              <div class=\\\"row\\\" style=\\\"margin-left: 0vw; background-color:black;width:100%;color:#fff; height:60px; text-align: -webkit-center; font-size:15px;\\\">\\n                  <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\" >\\n                      \\n                      <span> <strong>Delivery Number: </strong> #001</span>\\n                  </div>\\n                  <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                      <span> <strong>Mobile Number: </strong> {{ delivery.customerData?.mobile_primary }}</span>\\n                    </div>\\n                    <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                        <span> <strong>Prepared by: </strong> Aquality</span><br>\\n                    \\n                  \\n                      </div>\\n                </div>\\n\\n              <!--table-->\\n              <div id=\\\"delivery_table\\\">\\n              <table class=\\\"table table-hover table-responsive\\\" *ngIf=\\\"delivery.productData\\\" style=\\\"width:100%; height:200px;margin-left: 0vw;\\\" >\\n                  <thead style=\\\"background-color:rgb(245, 163, 10); color:#fff;\\\">\\n                    <tr>\\n                    \\t<th> S.No.</th>\\n                      <th>DESCRIPTION</th>\\n                      <th>QUANTITY</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let product of delivery.productData;let i=index\\\"\\n                    [ngClass]=\\\"i==delivery.productData.length-1 ? 'row-divide' : '' \\\">\\n                      <td>1</td>\\n                      <td>{{ product?.name }}</td>\\n                      <td>1</td>\\n                    </tr>\\n\\n                    \\n\\n                    <tr>\\n                      <td></td>\\n                      <td></td>\\n                      <td></td>\\n                    </tr>\\n\\n\\n\\n                    \\n                  </tbody>\\n                </table>\\n                </div>\\n                \\n                        <!-- RECEIVED DELIVERED DISPATCHED -->\\n<div id=\\\"delivery_table\\\">\\n              <table class=\\\"table table-hover table-responsive\\\" *ngIf=\\\"delivery.productData\\\" style=\\\"width:100%; height:200px;margin-left: 0vw;\\\" >\\n                  <thead style=\\\"background-color:rgb(245, 163, 10); color:#fff;\\\">\\n                    <tr>\\n                      <th> </th>\\n                      <th> RECEIVER's SIGNATURE</th>\\n                      <th>DELIVERED BY</th>\\n                      <th>DISPATCHED BY</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr>\\n                      <td>NAME</td>\\n                      <td></td>\\n                      <td></td>\\n                      <td></td>\\n                    </tr>\\n\\n                    <tr>\\n                      <td>SIGNATURE</td>\\n                      <td></td>\\n                      <td></td>\\n                      <td></td>\\n                    </tr>\\n\\n\\n                    <tr>\\n                      <td>DATE</td>\\n                      <td></td>\\n                      <td></td>\\n                      <td></td>\\n                    </tr>\\n\\n                    <tr>\\n                      <td></td>\\n                      <td></td>\\n                      <td></td>\\n                      <td></td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                </div>\\n                <br><br>\\n<blockquote class=\\\"blockquote\\\">\\n  <p class=\\\"mb-0\\\">*Goods once sold will not be taken back*</p>\\n  <p class=\\\"mb-0\\\">*Mentioned Quantity has been received in Good Condition*</p>\\n</blockquote>\\n\\n\\n\\n\\n\\n                      <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6 col-xs-6\\\">\\n                      <h3 class=\\\"well\\\">Bank Details</h3>\\n                       <div class=\\\"table-responsive\\\">          \\n                    <table class=\\\"table table-hover\\\">\\n                      <thead>\\n                        <tr>\\n                          <th></th>\\n                          <th>AQUALITY Water Solutions Pvt Ltd</th>\\n                        </tr>\\n                      </thead>\\n                      <tbody>\\n                        <tr>\\n                          \\n                          <td></td>\\n                          <td>A/c No.</td>\\n                          <td><strong>111 905 000 338</strong></td>\\n                        </tr>\\n                        <tr>\\n                          \\n                          <td></td>\\n                          <td>Bank</td>\\n                          <td><strong>ICICI Bank - Filmnagar Br.</strong></td>\\n                        </tr>\\n                        <tr>\\n                          \\n                          <td></td>\\n                          <td>IFSC Code</td>\\n                          <td><strong>ICIC 000 1119</strong></td>\\n                        </tr>\\n                      </tbody>\\n                    </table>\\n                          \\n                  </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-6 col-xs-6\\\" style=\\\"margin-top:50px;\\\">\\n                    <div style=\\\"text-align: -webkit-center; margin-top:20%; \\\">\\n                       Name & Signature\\n                    </div>\\n                  </div>\\n                  </div><br> <br>\\n                  \\n\\n                 <div class=\\\"container-fluid\\\" style=\\\"background-color:none;\\\">\\n                  <div class=\\\"footer\\\">\\n                    <p><strong>THANK YOU FOR YOUR BUSINESS</strong> </p><hr>\\n                    <div class=\\\"footer-header\\\">\\n                      TERMS AND CONDITION\\n\\n                    </div>\\n                  </div>\\n\\n                 </div>\\n          \\n\\n            <!--<div class=\\\"col-md-6\\\" style=\\\"text-align: -webkit-left\\\">\\n\\n              <div>\\n                <strong>Aquality Water Solutions Pvt Ltd.</strong><br>\\n                <span># 8-1-284/OU/385/1&2, 4th Floor Bait-ul-Rida</span><br>\\n                <span>OU Colony Shaikpet, Lanco hills Lane</span><br>\\n                <span>Hyderabad, Telangana State - 500008</span><br>\\n                <span>India</span><br><br>\\n\\n                <span>Phone: +91 40 6888 8486</span><br>\\n                <span>Mobile: 709 389 8486</span><br>\\n                <span>www.aquality.in</span>\\n                <span>Email: accounts@aquality.in  | info@aquality.in</span>\\n                <span></span>\\n              </div>\\n            </div>\\n      \\n            \\n                <div class=\\\"col-md-offset-2 col-md-4\\\" style=\\\"text-align: -webkit-left;line-height: 2;\\\">\\n                    <span> <strong>Date: </strong> {{ delivery.created_on | date }} </span><br>\\n                    <span> <strong>Delivery ref: </strong> #123456</span><br><br>\\n                    \\n                  \\n                    <span> <strong>Valid upto: </strong> DD/MM/YYYY</span><br>\\n                    <span> <strong>Prepared by: </strong> Aquality</span><br>\\n                    <span> <strong>Mobile Number: </strong> {{ delivery.customerData?.mobile_primary }}</span><br>\\n                  <span> <strong>delivery Number: </strong> #001</span><br>\\n                  <span> <strong>delivery Date: </strong> {{ delivery.created_on | date }} </span><br>\\n                  <span> <strong>Payment Due: </strong> {{ delivery.created_on | date }}</span> <br>\\n                  <span> <strong>Amount Due (INR): </strong> INR. {{ delivery.amount_due }}</span><br>\\n                </div>-->\\n\\n                \\n              \\n          </div>\\n          <hr>\\n\\n          <!--middle row-->\\n          \\n          \\n        </div>\\n        <!--table section-->\\n        \\n      </div>\\n      <div style=\\\"margin-top:15px\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"downloadPDF()\\\"><i class=\\\"fa fa-download\\\"\\n                                                                                 aria-hidden=\\\"true\\\"></i>&nbsp;Download\\n          as PDF\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\"><i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>&nbsp;Export\\n          as CSV\\n        </button>\\n      </div>\\n    </div>\\n  </section>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-html/delivery-html.component.html\n// module id = ../../../../../src/app/delivery/delivery-html/delivery-html.component.html\n// module chunks = main","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  Input,\n  SimpleChanges,\n  OnChanges,\n  AfterContentInit,\n  AfterViewInit\n} from '@angular/core';\n\nimport {DeliveryService} from '../delivery.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from \"rxjs\";\nimport {Delivery} from '../delivery';\nimport {CustomerService} from '../../customer/customer.service';\nimport {ProductService} from '../../product/product.service';\nimport {GeneralService} from '../../general/general.service';\nimport * as _ from 'underscore';\nimport {DatePipe} from '@angular/common';\nimport {UploadService} from '../../upload.service';\n\ndeclare let jsPDF;\ndeclare let html2canvas;\n\n@Component({\n  selector: 'app-delivery-html',\n  templateUrl: './delivery-html.component.html',\n  styleUrls: ['./delivery-html.component.css']\n})\nexport class DeliveryHtmlComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('deliveryBox') deliveryBox: ElementRef;\n  @Input() autoDelivery: any;\n  private id: any;\n  private subscription: Subscription;\n  public delivery: Delivery;\n  private type = '';\n  private finalTotal;\n  private finalTotalWords;\n  public currentDate: number = Date.now();\n  public datePipe: DatePipe = new DatePipe('en-US');\n  public tempDelivery: Delivery;\n  public isAutoDelivery: boolean = false;\n\n  constructor(private generalService: GeneralService, private productService: ProductService, private customerService: CustomerService, private deliveryService: DeliveryService, private route: ActivatedRoute) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['autoDelivery']) {\n      this.isAutoDelivery = true;\n      this.tempDelivery = changes['autoDelivery'].currentValue;\n    }\n  }\n\n  ngOnInit() {\n    this.generalService.displaySidebar(false);\n    this.subscription = this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.type = params['type'];\n      if (!this.isAutoDelivery) {\n        this.getDeliveryById(params['id']);\n      } else {\n        this.delivery = this.tempDelivery;\n        this.delivery['created_on'] = this.currentDate;\n        this.finalTotal = this.delivery.amount_due - this.delivery.discount;\n        this.finalTotalWords = this.numberToEnglish(this.delivery.total, '');\n      }\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    // if (this.isAutoDelivery) {\n    //   this.downloadPDF();\n    //\n    // }\n  }\n\n  ngAfterViewInit(){\n    if (this.isAutoDelivery) {\n      this.downloadPDF();\n    }\n  }\n\n  downloadPDF() {\n    html2canvas(document.getElementById('delivery_body'), {\n      onrendered: (canvas) => {\n        var imgData = canvas.toDataURL(\"image/jpeg\", 1.0);\n        var pdf = new jsPDF(\"p\", \"mm\", \"a4\");\n        pdf.addImage(imgData, 'JPEG', 0, 0, 210, 200);\n        if (this.isAutoDelivery) {\n          var pdf = pdf.output('datauristring');\n          let data = {\n            pdf: pdf,\n            label: this.delivery.customerData.username + \"_\" + this.datePipe.transform(Date.now(), 'MMMM')\n          }\n\n          console.log(data);\n\n          this.deliveryService.saveAutoDelivery(data)\n            .subscribe(\n              (res) => {\n                console.log(res);\n              },\n              (err) => {\n                console.log(\"Error in auto pilot\");\n              }\n            )\n        } else {\n          pdf.save(this.delivery.customerData.username + \"_\" + this.datePipe.transform(Date.now(), 'MMMM') + \".pdf\");\n        }\n      }\n    });\n  }\n\n\n  \n\n  getDeliveryById(id: string) {\n    this.deliveryService.getDeliveryById(this.type, id)\n      .subscribe(\n        (res) => {\n          this.delivery = res;\n          this.delivery.total = 0;\n          this.delivery.productData = [];\n          // get product data\n          _.each(this.delivery.productList, (item) => {\n            this.productService.getProductById(item)\n              .subscribe(\n                (res) => {\n                  res['amount_with_vat'] = res['rate'] + (res['rate'] * (res['vat'] / 100));\n                  this.delivery.productData.push(res);\n                  this.delivery.total = this.delivery.total + res['amount_with_vat'];\n                  this.delivery.amount_due = this.delivery.total;\n                }, (err) => {\n\n                }, () => {\n                  if (this.delivery.amount_partially_paid.length > 0) {\n                    _.each(this.delivery.amount_partially_paid, (data) => {\n                      this.delivery.amount_due = this.delivery.amount_due - data['amount'];\n                    });\n                  }\n                  if (this.delivery.status == 'Paid') {\n                    this.delivery.amount_due = 0;\n                  }\n                  this.finalTotal = this.delivery.amount_due - this.delivery.discount;\n                  this.finalTotalWords = this.numberToEnglish(this.delivery.total, '');\n                }\n              )\n          });\n\n\n          //get customer data\n          this.customerService.getCustomerDetails(this.delivery.customer_id)\n            .subscribe(\n              (res) => {\n                this.delivery.customerData = res;\n              },\n              (err) => {\n\n              },\n              () => {\n                console.log(this.delivery);\n              }\n            )\n        },\n        (err) => {\n          console.log(err);\n        }\n      )\n  }\n\n  numberToEnglish(n, custom_join_character) {\n\n    var string = n.toString(),\n      units, tens, scales, start, end, chunks, chunksLen, chunk, ints, i, word, words;\n\n    var and = custom_join_character || 'and';\n\n    /* Is number zero? */\n    if (parseInt(string) === 0) {\n      return 'zero';\n    }\n\n    /* Array of units as words */\n    units = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\n\n    /* Array of tens as words */\n    tens = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\n\n    /* Array of scales as words */\n    scales = ['', 'thousand', 'million', 'billion', 'trillion', 'quadrillion', 'quintillion', 'sextillion', 'septillion', 'octillion', 'nonillion', 'decillion', 'undecillion', 'duodecillion', 'tredecillion', 'quatttuor-decillion', 'quindecillion', 'sexdecillion', 'septen-decillion', 'octodecillion', 'novemdecillion', 'vigintillion', 'centillion'];\n\n    /* Split user arguemnt into 3 digit chunks from right to left */\n    start = string.length;\n    chunks = [];\n    while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n    }\n\n    /* Check if function has enough scale words to be able to stringify the user argument */\n    chunksLen = chunks.length;\n    if (chunksLen > scales.length) {\n      return '';\n    }\n    /* Stringify each integer in each chunk */\n    words = [];\n    for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n      if (chunk) {\n        /* Split chunk into array of individual integers */\n        ints = chunks[i].split('').reverse().map(parseFloat);\n\n        /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n        if (ints[1] === 1) {\n          ints[0] += 10;\n        }\n\n        /* Add scale word if chunk is not zero and array item exists */\n        if ((word = scales[i])) {\n          words.push(word);\n        }\n\n        /* Add unit word if array item exists */\n        if ((word = units[ints[0]])) {\n          words.push(word);\n        }\n\n        /* Add tens word if array item exists */\n        if ((word = tens[ints[1]])) {\n          words.push(word);\n        }\n\n        /* Add 'and' string after units or tens integer if: */\n        if (ints[0] || ints[1]) {\n          /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n          if (ints[2] || !i && chunksLen) {\n            words.push(and);\n          }\n        }\n\n        /* Add hundreds word if array item exists */\n        if ((word = units[ints[2]])) {\n          words.push(word + ' hundred');\n        }\n      }\n    }\n    return words.reverse().join(' ');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-html/delivery-html.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-recent/delivery-recent.component.css\n// module id = ../../../../../src/app/delivery/delivery-recent/delivery-recent.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 1800px;\\\">\\n\\n  <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isDeliverySaved\\\">Delivery Challan Data Saved Successfully !!</div>\\n  <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isDeliveryError\\\">ERROR !! Please Try Again.</div>\\n\\n  <section class=\\\"content-header\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        Recent Deliveries\\n        <small><em> Generated for the month of {{ currentDate | date: 'MMMM' }} </em></small>\\n      </h1>\\n      <ol class=\\\"breadcrumb\\\">\\n        <li><a [routerLink]=\\\"[ '/' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> InvoiceApp</a></li>\\n        <li><a [routerLink]=\\\"[ '/' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Delivery Challan</a></li>\\n        <li class=\\\"active\\\">Recent</li>\\n      </ol>\\n\\n      <div class=\\\"alert alert-warning\\\" *ngIf=\\\"showRemoveConfirmation && delDelivery\\\">\\n        <h4>\\n          <strong>Delete Confirmation !!</strong> <br>\\n          Delete the delivery challan for <em>{{ delDelivery.customerData?.username }} </em> ?\\n        </h4>\\n        <br>\\n        <button class=\\\"btn btn-success btn-sm\\\" (click)=\\\"removeConfirmation(true)\\\">YES</button>\\n        <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeConfirmation(false)\\\">NO</button>\\n      </div>\\n\\n    </div>\\n  </section>\\n\\n  <section class=\\\"content\\\">\\n\\n    <!--  Page Content Here -->\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"box box-primary\\\">\\n        <div class=\\\"box-header\\\" style=\\\"margin-top: 20px;margin-bottom: 20px;\\\">\\n          <h3 class=\\\"box-title\\\">Recent Delivery Challan List</h3>\\n          <br>\\n          <div class=\\\"box-tools\\\">\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-offset-2 col-lg-4\\\">\\n                Filter : &nbsp;\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"All\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">All</label>\\n\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Paid\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Paid</label>\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Due\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Due</label>\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Partially Paid\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Partially Paid</label>\\n              </div>\\n              <div class=\\\"col-lg-6\\\" style=\\\"float:right\\\">\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-btn\\\">\\n                    <select style=\\\"font-size: 15px;height: 34px;\\\" (change)=\\\"filterChange($event.target.value)\\\">\\n                      <option value=\\\"username\\\">Username</option>\\n                      <option value=\\\"mobile_number\\\">Mobile Number</option>\\n                      <option value=\\\"area\\\">Area</option>\\n                    </select>\\n                  </div>\\n                  <!-- /btn-group -->\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"...\\\" placeholder=\\\"Search Recent Deliveries\\\"\\n                         (input)=\\\"quickSearch($event.target.value)\\\">\\n                </div>\\n                <!-- /input-group -->\\n              </div>\\n            </div>\\n            <br><br>\\n            <!-- /.row -->\\n            <!-- /.row -->\\n          </div>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body table-responsive no-padding\\\" *ngIf=\\\"deliveryList\\\">\\n\\n          <br>\\n          <div class=\\\"col-md-offset-4\\\">\\n            <pagination-controls (pageChange)=\\\"onPaginate($event);p=$event\\\"></pagination-controls>\\n          </div>\\n          <br>\\n\\n          <table class=\\\"table table-hover\\\">\\n            <tbody>\\n            <tr>\\n              <th>Username</th>\\n              <th>Fullname</th>\\n              <th>Mobile</th>\\n              <th>Area</th>\\n              <th>Product</th>\\n              <th>Due (INR)</th>\\n              <th>Paid (INR)</th>\\n              <th>Total (INR)</th>\\n              <th>Status</th>\\n              <th>Transaction Date</th>\\n              <th>Change Status</th>\\n              <th>Action</th>\\n            </tr>\\n            <tr\\n              *ngFor=\\\"let delivery of deliveryList | paginate: { itemsPerPage: 30, currentPage: p, totalItems:totalCustomerCount }\\\">\\n              <td>{{ delivery.customerData?.username }}</td>\\n              <td>{{ delivery.customerData?.fullname }}</td>\\n              <td>{{ delivery.customerData?.mobile_primary }}</td>\\n              <td>{{ delivery.customerData?.areaData?.name }}</td>\\n              <!--<td><span *ngIf=\\\"delivery.customerData?.productData?.length>0\\\"> {{ delivery.customerData?.productData[0]?.name }} - <em *ngIf=\\\"delivery.customerData?.productData[0]?.rate\\\">{{ delivery.customerData?.productData[0]?.rate }} INR/month</em> </span>\\n                  <small class=\\\"label bg-blue\\\">{{ delivery.customerData?.productData.length }}</small>\\n              </td>-->\\n              <td>\\n                <small class=\\\"label bg-blue\\\">{{ delivery.customerData?.productData?.length }}</small>\\n              </td>\\n              <td>{{ delivery?.amount_due }}</td>\\n              <td>{{ delivery?.total - delivery?.amount_due }}</td>\\n              <td>{{ delivery?.total }}</td>\\n              <td>\\n                <label class=\\\"label label-danger\\\" *ngIf=\\\"delivery.status=='Due'\\\"> {{ delivery.status }} </label>\\n                <label class=\\\"label label-success\\\" *ngIf=\\\"delivery.status=='Paid'\\\"> {{ delivery.status }} </label>\\n                <label class=\\\"label label-warning\\\" *ngIf=\\\"delivery.status=='Partially Paid'\\\"> {{ delivery.status\\n                  }} </label>\\n              </td>\\n              <td *ngIf=\\\"delivery?.status=='Due' || delivery?.status=='Partially Paid'\\\">\\n                {{ delivery?.payment_due_date | date }}\\n              </td>\\n              <td *ngIf=\\\"delivery?.status=='Paid'\\\">\\n                {{ delivery?.paid_date | date }}\\n              </td>\\n              <td>\\n                <button class=\\\"btn btn-success btn-xs\\\" (click)=\\\"changeStatus('Paid',delivery)\\\"> Paid</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"changeStatus('Partially Paid',delivery)\\\"\\n                        data-toggle=\\\"modal\\\" data-target=\\\"#partiallyPaymentModal\\\"> Partially Paid\\n                </button>\\n                <button class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"changeStatus('Due',delivery)\\\"> Due</button>\\n              </td>\\n              <td>\\n                <a type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\"\\n                   [routerLink]=\\\"['/dashboard/delivery/view','recent',delivery?._id]\\\"> View</a>\\n                <!--<button class=\\\"btn btn-xs btn-danger\\\" (click)=\\\"remove(delivery)\\\"><i class=\\\"fa fa-times\\\"-->\\n                <!--aria-hidden=\\\"true\\\"></i></button>-->\\n              </td>\\n\\n              <!-- Modal for Partially payment -->\\n              <div class=\\\"modal fade\\\" id=\\\"partiallyPaymentModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n                   aria-labelledby=\\\"myModalLabel\\\">\\n                <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                  <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span\\n                        aria-hidden=\\\"true\\\">&times;</span></button>\\n                      <h2 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Partially Payment</h2>\\n                    </div>\\n                    <div class=\\\"modal-body\\\" *ngIf=\\\"partialDelivery\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                          <h4 style=\\\"text-align: center\\\">Total: {{ partialDelivery?.total }} INR</h4>\\n                          <h4 style=\\\"text-align: center\\\">Due: {{ partialDelivery?.amount_due }} INR</h4>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                          <div *ngFor=\\\"let x of partialDelivery?.amount_partially_paid\\\">\\n                            <h4 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} INR</h4>\\n                            <h4 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} INR</h4>\\n                            <br>\\n                          </div>\\n\\n                        </div>\\n                      </div>\\n                      <br>\\n                      <form class=\\\"form-horizontal\\\" *ngIf=\\\"partialDelivery\\\">\\n                        <!--amoount partially paid-->\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid\\n                            (INR) </label>\\n                          <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"text\\\" name=\\\"partialPay\\\" [(ngModel)]=\\\"partialPay\\\" class=\\\"form-control \\\"\\n                                   id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">\\n                          </div>\\n                        </div>\\n                      </form>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                      <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>-->\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePartialPay()\\\"\\n                              data-dismiss=\\\"modal\\\">Save changes\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </tr>\\n            </tbody>\\n\\n          </table>\\n        </div>\\n        <!-- /.box-body -->\\n      </div>\\n      <!-- /.box -->\\n      <div class=\\\"col-md-offset-4\\\">\\n        <pagination-controls (pageChange)=\\\"onPaginate($event);p=$event\\\"></pagination-controls>\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-recent/delivery-recent.component.html\n// module id = ../../../../../src/app/delivery/delivery-recent/delivery-recent.component.html\n// module chunks = main","import {Router} from '@angular/router';\nimport {Product} from '../../product/product';\nimport {Component, OnInit} from '@angular/core';\nimport {DeliveryService} from '../delivery.service';\nimport {Customer} from '../../customer/customer';\nimport * as _ from 'underscore';\nimport {Delivery} from '../delivery';\nimport {ProductService} from '../../product/product.service';\nimport {AreaService} from '../../area/area.service';\nimport {CustomerService} from '../../customer/customer.service';\n\n@Component({\n  selector: 'app-delivery-recent',\n  templateUrl: './delivery-recent.component.html',\n  styleUrls: ['./delivery-recent.component.css']\n})\nexport class DeliveryRecentComponent implements OnInit {\n  public currentDate: number = Date.now();\n  public deliveryList: Delivery[] = [];\n  public searchMode = 'username';\n  public partialDelivery: Delivery;\n  public paymentStatus: string;\n  public partialPay: any;\n  public isDeliverySaved: boolean = false;\n  public isDeliveryError: boolean = false;\n  public showRemoveConfirmation: boolean = false;\n  public delDelivery: any;\n  public paginator = 1;\n  totalCustomerCount: number = 0;\n\n  constructor(private customerService: CustomerService, private router: Router, private deliveryService: DeliveryService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  ngOnInit() {\n    this.customerService.getTotalCustomerCount()\n      .subscribe(\n        (res) => {\n          this.totalCustomerCount = res.count;\n        }\n      )\n    this.getRecentDeliveryDB();\n    // this.wakeUpDeliveryDemon();\n  }\n\n  //useless shitty method\n  wakeUpDeliveryDemon() {\n    this.deliveryService.cleanDelivery()\n      .subscribe(\n        (res) => {\n          if (res.status) {\n            this.generateNewDelivery();\n          } else {\n            this.getRecentDeliveryDB();\n          }\n        }\n      )\n  }\n\n  //useless shitty method\n  generateNewDelivery() {\n    this.deliveryService.dropRecentDelivery()\n      .subscribe(\n        (res) => {\n          this.buildAndSaveRecentDelivery();\n        }\n      )\n  }\n\n  getRecentDeliveryDB() {\n    this.deliveryList = [];\n    this.deliveryService.getRecentDeliveryDB(this.paginator)\n      .subscribe(\n        (res: Delivery[]) => {\n          _.each(res, (delivery: Delivery) => {\n            let customer: Customer;\n            this.customerService.getCustomerDetails(delivery.customer_id)\n              .subscribe(\n                (res: Customer) => {\n                  if (res['status']) {\n                    customer = res;\n                    customer.productData = [];\n                    if (delivery.productList.length > 0) {\n                      _.each(delivery.productList, (element) => {\n                        this.productService.getProductById(element)\n                          .subscribe(\n                            (res: Product) => {\n                              customer[\"productData\"].push(res);\n                            }\n                          )\n                      });\n                    }\n                    this.areaService.getAreaById(customer.area)\n                      .subscribe(\n                        (res) => {\n                          customer[\"areaData\"] = res;\n                        },\n                      )\n                      delivery.customerData = customer;\n                    this.deliveryList.push(delivery);\n                  }\n                }\n              )\n          });\n        },\n        (err) => {\n\n        },\n        () => {\n          for (let i = 0; i < this.deliveryList.length; i++) {\n            console.log(\"Hello World\");\n          }\n        }\n      )\n  }\n\n  buildAndSaveRecentDelivery() {\n    this.deliveryService.buildAndSaveRecentDelivery()\n      .subscribe(\n        (res) => {\n          this.getRecentDeliveryDB();\n        },\n        (err) => {\n          console.log('Error in build and save');\n        }\n      )\n  }\n\n  saveRecentDelivery(delivery: Delivery) {\n    this.deliveryService.saveRecentDelivery(delivery)\n      .subscribe(\n        (res) => {\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  filterChange(event: any) {\n    this.searchMode = event;\n  }\n\n  quickSearch(event: any) {\n    if (event == '') {\n      this.getRecentDeliveryDB();\n      return;\n    }\n    let reg = new RegExp(event, \"i\");\n    let resArray = [];\n    if (this.searchMode == 'username') {\n      _.each(this.deliveryList, (item) => {\n        if (reg.test(item['customerData']['username'])) {\n          resArray.push(item);\n        }\n      });\n      this.deliveryList = resArray;\n    }\n    else if (this.searchMode == 'mobile_number') {\n      _.each(this.deliveryList, (item) => {\n        if (reg.test(item['customerData']['mobile_primary'])) {\n          resArray.push(item);\n        }\n      });\n      this.deliveryList = resArray;\n    }\n    else if (this.searchMode == 'area') {\n      _.each(this.deliveryList, (item) => {\n        if (reg.test(item['customerData']['areaData']['name'])) {\n          resArray.push(item);\n        }\n      });\n      this.deliveryList = resArray;\n    }\n  }\n\n  changeStatus(status: string, delivery: Delivery) {\n    if (status == 'Paid') {\n      this.setPaidDateCounter(delivery);\n      delivery.status = 'Paid';\n      delivery.paid_date = Date.now();\n      delivery.amount_due = 0;\n    } else if (status == 'Due') {\n      delivery.status = 'Due';\n      delivery.amount_due = delivery.total;\n      delivery.amount_partially_paid = [];\n    } else if (status == 'Partially Paid') {\n      this.partialDelivery = delivery;\n    }\n\n    delivery['type'] = 'recent';\n    this.deliveryService.changeDeliveryStatus(delivery)\n      .subscribe(\n        (res) => {\n        }\n      )\n  }\n\n  setPaidDateCounter(delivery: Delivery) {\n    this.deliveryService.setPaidDateCounter(delivery)\n      .subscribe(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          console.log(\"Error in setpaiddatecounter\");\n        }\n      )\n  }\n\n  toggleSearchStatus(event: any) {\n    this.getRecentDeliveryDB();\n    this.paymentStatus = event.target.value;\n    if (this.paymentStatus == 'All') {\n      return;\n    }\n    let resArray = [];\n    _.each(this.deliveryList, (item) => {\n      if (_.isEqual(item.status, this.paymentStatus)) {\n        resArray.push(item);\n      }\n    });\n    this.deliveryList = resArray;\n  }\n\n  savePartialPay() {\n    let data = {\n      id: this.partialDelivery['_id'],\n      amount_partially_paid: this.partialPay\n    }\n\n    this.deliveryService.savePartialPay(data)\n      .subscribe(\n        (res) => {\n          if (res['status']) {\n            this.partialPay = 0;\n            this.getRecentDeliveryDB();\n          }\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  remove(delDelivery) {\n    this.showRemoveConfirmation = true;\n    this.delDelivery = delDelivery;\n  }\n\n  removeConfirmation(status) {\n    if (status) {\n      this.deliveryService.deleteDelivery(this.delDelivery)\n        .subscribe(\n          (res) => {\n            if (res['status']) {\n              this.deliveryList = _.without(this.deliveryList, _.findWhere(this.deliveryList, {\n                _id: this.delDelivery['_id']\n              }));\n              this.showRemoveConfirmation = false;\n            }\n          },\n          (err) => {\n          }\n        )\n    } else {\n      this.delDelivery = undefined;\n      this.showRemoveConfirmation = false;\n    }\n  }\n\n  //  for pagination\n  onPaginate(event: any) {\n    this.paginator = event;\n    this.getRecentDeliveryDB();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-recent/delivery-recent.component.ts","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nconst deliveryRoutes = [\n];\n@NgModule({\n    imports: [\n        RouterModule.forChild(deliveryRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class DeliveryRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-search/delivery-search.component.css\n// module id = ../../../../../src/app/delivery/delivery-search/delivery-search.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height:100vh\\\">\\n\\n  <div class=\\\"alert alert-warning\\\" *ngIf=\\\"showRemoveConfirmation && delDelivery\\\">\\n    <h4>\\n      <strong>Delete Confirmation !!</strong> <br>\\n      Delete the Delivery Challan for <em>{{ delDelivery.customerData?.username }} </em>  ?\\n    </h4>\\n    <br>\\n    <button class=\\\"btn btn-success btn-sm\\\" (click)=\\\"removeConfirmation(true)\\\">YES</button>\\n    <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeConfirmation(false)\\\">NO</button>\\n  </div>\\n\\n  <section class=\\\"content\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"box box-primary\\\">\\n        <h2 style=\\\"margin-left:10px\\\">Search Delivery Challanof any customer</h2>\\n        <hr>\\n\\n        <!--search results for delivery show box-->\\n        <div class=\\\"box-body table-responsive no-padding\\\" style=\\\"margin-top:20px;margin-bottom: 20px\\\"\\n             *ngIf=\\\"deliveryList.length>0\\\">\\n          <table class=\\\"table table-hover\\\">\\n            <tbody>\\n            <tr>\\n              <th>Username</th>\\n              <th>Fullname</th>\\n              <th>Mobile</th>\\n              <th>Area</th>\\n              <th>Product</th>\\n              <!--<th>Due (INR)</th>\\n              <th>Paid (INR)</th>-->\\n              <th>Total (INR)</th>\\n              <!--<th>Status</th>-->\\n              <th>Delivery Challan Generated On</th>\\n              <!--<th>Last Transaction Date</th>\\n              <th>Change Status</th>-->\\n              <th>Action</th>\\n            </tr>\\n            <tr\\n              *ngFor=\\\"let delivery of deliveryList\\\">\\n              <td>{{ delivery.customerData?.username }}</td>\\n              <td>{{ delivery.customerData?.fullname }}</td>\\n              <td>{{ delivery.customerData?.mobile_primary }}</td>\\n              <td>{{ delivery.customerData?.areaData?.name }}</td>\\n\\n              <td><span *ngIf=\\\"delivery.customerData?.productData?.length>0\\\"> {{ delivery.customerData?.productData[0]?.name }} - <em *ngIf=\\\"delivery.customerData?.productData[0]?.rate\\\">{{ delivery.customerData?.productData[0]?.rate }} INR/month</em> </span>\\n                  <small class=\\\"label bg-blue\\\">{{ delivery.customerData?.productData.length }}</small>\\n              </td>\\n\\n              <!--<td>\\n                <small class=\\\"label bg-blue\\\">{{ delivery.customerData?.productData?.length }}</small>\\n              </td>-->\\n              <!--<td>{{ delivery?.amount_due }}</td>\\n              <td>{{ delivery?.total - delivery?.amount_due }}</td>-->\\n              <td>{{ delivery?.total }}</td>\\n              <!--<td>\\n                <label class=\\\"label label-danger\\\" *ngIf=\\\"delivery.status=='Due'\\\"> {{ delivery.status }} </label>\\n                <label class=\\\"label label-success\\\" *ngIf=\\\"delivery.status=='Paid'\\\"> {{ delivery.status }} </label>\\n                <label class=\\\"label label-warning\\\" *ngIf=\\\"delivery.status=='Partially Paid'\\\"> {{ delivery.status\\n                  }} </label>\\n              </td>-->\\n              <td>\\n                {{ delivery?.created_on | date: 'yMMMd' }}\\n              </td>\\n              <!--<td *ngIf=\\\"delivery?.status=='Due' || delivery?.status=='Partially Paid'\\\">\\n                {{ delivery?.payment_due_date | date }}\\n              </td>\\n              <td *ngIf=\\\"delivery?.status=='Paid'\\\">\\n                {{ delivery?.paid_date | date }}\\n              </td>\\n              <td>\\n                <button class=\\\"btn btn-success btn-xs\\\" (click)=\\\"changeStatus('Paid',delivery)\\\"> Paid</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"changeStatus('Partially Paid',delivery)\\\"\\n                        data-toggle=\\\"modal\\\" data-target=\\\"#partiallyPaymentModal\\\"> Partially Paid\\n                </button>\\n                <button class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"changeStatus('Due',delivery)\\\"> Due</button>\\n              </td>-->\\n              <td>\\n                <a type=\\\"button\\\" *ngIf=\\\"delivery?.type=='recent'\\\" class=\\\"btn btn-primary btn-xs\\\"\\n                   [routerLink]=\\\"['/dashboard/delivery/view','recent',delivery?._id]\\\">\\n                  View</a>\\n                <a type=\\\"button\\\" *ngIf=\\\"delivery?.type!='recent'\\\" class=\\\"btn btn-primary btn-xs\\\"\\n                   [routerLink]=\\\"['/dashboard/delivery/view','all',delivery?._id]\\\">\\n                  View</a>\\n\\n                <button class=\\\"btn btn-xs btn-danger\\\" (click)=\\\"remove(delivery)\\\"><i class=\\\"fa fa-times\\\"\\n                                                                                   aria-hidden=\\\"true\\\"></i></button>\\n              </td>\\n\\n              <!-- Modal for Partially payment -->\\n              <div class=\\\"modal fade\\\" id=\\\"partiallyPaymentModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n                   aria-labelledby=\\\"myModalLabel\\\">\\n                <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                  <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span\\n                        aria-hidden=\\\"true\\\">&times;</span></button>\\n                      <h2 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Partially Payment</h2>\\n                    </div>\\n                    <div class=\\\"modal-body\\\" *ngIf=\\\"partialDelivery\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                          <h4 style=\\\"text-align: center\\\">Total: {{ partialDelivery?.total }} INR</h4>\\n                          <h4 style=\\\"text-align: center\\\">Due: {{ partialDelivery?.amount_due }} INR</h4>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                          <div *ngFor=\\\"let x of partialDelivery?.amount_partially_paid\\\">\\n                            <h4 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} INR</h4>\\n                            <h4 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} INR</h4>\\n                            <br>\\n                          </div>\\n\\n                        </div>\\n                      </div>\\n                      <br>\\n                      <form class=\\\"form-horizontal\\\" *ngIf=\\\"partialDelivery\\\">\\n                        <!--amoount partially paid-->\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid\\n                            (INR) </label>\\n                          <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"text\\\" name=\\\"partialPay\\\" [(ngModel)]=\\\"partialPay\\\" class=\\\"form-control \\\"\\n                                   id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">\\n                          </div>\\n                        </div>\\n                      </form>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                      <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>-->\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePartialPay(partialDelivery)\\\"\\n                              data-dismiss=\\\"modal\\\">Save changes\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </tr>\\n            </tbody>\\n\\n          </table>\\n        </div>\\n\\n        <!--search box and functionality-->\\n        <div class=\\\"container\\\">\\n          <div class=\\\"col-lg-12\\\">\\n            <form class=\\\"form-group\\\">\\n              <input style=\\\"width:100%\\\" (keyup)=\\\"getSearchText($event)\\\" id=\\\"search_form\\\" type=\\\"text\\\" class=\\\"\\\"\\n                     placeholder=\\\"Search for a customer\\\">\\n            </form>\\n\\n            <!--search resultsa-->\\n            <div *ngIf=\\\"searchResults.length>0\\\">\\n              <strong style=\\\"font-size: 20px\\\"> Search results: </strong> <span class=\\\"search_text\\\"\\n                                                                               style=\\\"color:blue;font-size: 20px\\\">{{ searchText }}</span>\\n              <br>\\n              <ul style=\\\"list-style-type:none\\\">\\n                <li *ngFor=\\\"let customer of searchResults\\\">\\n                 <span style=\\\"font-size: 20px\\\">\\n                   <a href=\\\"javascript:void(0)\\\" (click)=\\\"getSearchDetails(customer)\\\">\\n                   <em>{{ customer['username'] }}</em> - {{ customer['fullname']}}\\n                 </a>\\n                 </span>\\n                  <br>\\n                </li>\\n                <hr>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </section>\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-search/delivery-search.component.html\n// module id = ../../../../../src/app/delivery/delivery-search/delivery-search.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {Delivery} from '../delivery';\nimport {DeliveryService} from '../delivery.service';\nimport {Customer} from '../../customer/customer';\nimport {Product} from '../../product/product';\nimport {AreaService} from '../../area/area.service';\nimport {CustomerService} from '../../customer/customer.service';\nimport {ProductService} from '../../product/product.service';\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-delivery-search',\n  templateUrl: './delivery-search.component.html',\n  styleUrls: ['./delivery-search.component.css']\n})\nexport class DeliverySearchComponent implements OnInit {\n  public searchText: string;\n  public searchResults: any[] = [];\n  public deliveryList: Delivery[] = [];\n  public partialDelivery: Delivery;\n  public partialPay: any;\n  public delDelivery: Delivery;\n  public showRemoveConfirmation: boolean = false;\n\n  constructor(private customerService: CustomerService, private deliveryService: DeliveryService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  ngOnInit() {\n  }\n\n\n  getSearchText(event: any) {\n    this.deliveryList = [];\n    this.searchResults = [];\n    this.searchText = event.target.value;\n    this.getGlobalDeliverySearchByCustomer();\n  }\n\n\n  getGlobalDeliverySearchByCustomer() {\n    this.deliveryService.globalDeliverySearchByCustomer(this.searchText)\n      .subscribe(\n        (res) => {\n          this.searchResults = res;\n        }\n      )\n  }\n\n  getSearchDetails(data) {\n    let id = data['_id'];\n    this.deliveryList = [];\n    this.deliveryService.getDeliveryByCustomerId(id)\n      .subscribe(\n        (res) => {\n          _.each(res, (delivery: Delivery) => {\n            let customer: Customer;\n\n            if (delivery['type']=='') {\n              delivery['type'] = 'recent';\n            }\n\n            this.customerService.getCustomerDetails(delivery.customer_id)\n              .subscribe(\n                (res: Customer) => {\n                  customer = res;\n                  if (customer['status']) {\n                    customer.productData = [];\n                    if (delivery.productList.length > 0) {\n                      _.each(delivery.productList, (element) => {\n                        this.productService.getProductById(element)\n                          .subscribe(\n                            (res: Product) => {\n                              customer['productData'].push(res);\n                            }\n                          )\n                      })\n                    }\n\n                    this.areaService.getAreaById(customer.area)\n                      .subscribe(\n                        (res) => {\n                          customer['areaData'] = res;\n                        }\n                      )\n                      delivery.customerData = customer;\n                    this.deliveryList.push(delivery);\n                  }\n                }\n              )\n          })\n        },\n        (err) => {\n          console.log('Error in getSearchDetails');\n        }\n      )\n  }\n\n\n  changeStatus(status: string, delivery: Delivery) {\n    if (status == 'Paid') {\n      this.setPaidDateCounter(delivery);\n      delivery.status = 'Paid';\n      delivery.paid_date = Date.now();\n      delivery.amount_due = 0;\n    } else if (status == 'Due') {\n      delivery.status = 'Due';\n      delivery.amount_due = delivery.total;\n      delivery.amount_partially_paid = [];\n    } else if (status == 'Partially Paid') {\n      this.partialDelivery = delivery;\n    }\n\n    if (delivery['type'] != 'recent') {\n      delivery['type'] = 'all';\n    }\n    this.deliveryService.changeDeliveryStatus(delivery)\n      .subscribe(\n        (res) => {\n\n        }\n      )\n  }\n\n  setPaidDateCounter(delivery: Delivery) {\n    this.deliveryService.setPaidDateCounter(delivery)\n      .subscribe(\n        (res) => {\n          // console.log(res);\n        },\n        (err) => {\n          console.log(\"Error in setpaiddatecounter\");\n        }\n      )\n  }\n\n  savePartialPay(delivery: Delivery) {\n    let data = {\n      id: this.partialDelivery['_id'],\n      amount_partially_paid: this.partialPay\n    }\n\n    this.deliveryService.savePartialPay(data)\n      .subscribe(\n        (res) => {\n          if (res['status']) {\n            this.partialPay = 0;\n            this.getSearchDetails({_id: delivery.customer_id});\n          }\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  remove(delivery: Delivery) {\n    this.showRemoveConfirmation = true;\n    this.delDelivery = delivery;\n  }\n\n\n  removeConfirmation(status) {\n    if (status) {\n      this.deliveryService.deleteDelivery(this.delDelivery)\n        .subscribe(\n          (res) => {\n            if (res['status']) {\n              this.deliveryList = _.without(this.deliveryList, _.findWhere(this.deliveryList, {\n                _id: this.delDelivery['_id']\n              }));\n              this.showRemoveConfirmation = false;\n            }\n          },\n          (err) => {\n\n          }\n        )\n    } else {\n      this.delDelivery = undefined;\n      this.showRemoveConfirmation = false;\n    }\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery-search/delivery-search.component.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {Ng2PaginationModule} from 'ng2-pagination';\nimport {DialogModule} from 'primeng/primeng';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {DeliveryRoutingModule} from './delivery-routing.module';\nimport {DeliveryAllComponent} from './delivery-all/delivery-all.component';\nimport {DeliveryCreateComponent} from './delivery-create/delivery-create.component';\nimport {DeliveryService} from './delivery.service';\nimport {DeliveryRecentComponent} from './delivery-recent/delivery-recent.component';\nimport {ProductService} from '../product/product.service';\nimport {AreaService} from '../area/area.service';\nimport {DeliveryEditComponent} from './delivery-edit/delivery-edit.component';\nimport {DeliveryHtmlComponent} from './delivery-html/delivery-html.component';\nimport {CustomerService} from '../customer/customer.service';\nimport {GeneralService} from '../general/general.service';\nimport { DeliverySearchComponent } from './delivery-search/delivery-search.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Ng2PaginationModule,\n    DialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DeliveryRoutingModule,\n  ],\n  declarations: [\n    DeliveryAllComponent,\n    DeliveryCreateComponent,\n    DeliveryRecentComponent,\n    DeliveryEditComponent,\n    DeliveryHtmlComponent,\n    DeliverySearchComponent\n  ],\n  exports: [\n    DeliveryHtmlComponent\n  ],\n  providers: [\n    DeliveryService,\n    ProductService,\n    AreaService,\n    CustomerService,\n    GeneralService\n  ]\n})\nexport class DeliveryModule {\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery.module.ts","import {Injectable} from '@angular/core';\nimport {CustomHttpService} from \"../custom-http.service\";\nimport {environment} from \"../../environments/environment\";\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class DeliveryService {\n\n  private deliveryUrl = environment.api_server + 'delivery/';\n\n  constructor(private http: CustomHttpService) {\n  }\n\n  removeDelivery(delivery) {\n    let url = this.deliveryUrl + 'remove-delivery';\n    return this.http.post(url, delivery).map((res) => res.json());\n  }\n\n  getDeliveryByCustomerId(id) {\n    let url = this.deliveryUrl + 'by-customer-id/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  globalDeliverySearchByCustomer(query) {\n    let url = this.deliveryUrl + 'global-search-by-customer/' + query;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  saveAutoDelivery(data) {\n    let url = this.deliveryUrl + 'save-auto-delivery';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  getAllDelivery(paginator) {\n    let url = this.deliveryUrl + 'all/page=' + paginator;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  getRecentDelivery() {\n    let url = this.deliveryUrl + 'recent';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  storeDelivery(data: any) {\n    let url = this.deliveryUrl + 'create';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  downloadPDF(data: any) {\n    let url = this.deliveryUrl + 'generate/pdf';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  getDeliveryById(type: string, id: string) {\n    let url = this.deliveryUrl + type + '/id/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  searchByUsername(data: any) {\n    let url = this.deliveryUrl + 'search/username/';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  saveRecentDelivery(data: any) {\n    let url = this.deliveryUrl + 'recent/save';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  dropRecentDelivery() {\n    let url = this.deliveryUrl + 'drop/recent/all';\n    return this.http.get(url).map(res => res.json());\n  }\n\n  checkIfRecentDeliveryExists() {\n    let url = this.deliveryUrl + 'recent_delivery/exists';\n    return this.http.get(url).map(res => res.json());\n  }\n\n  getRecentDeliveryDB(paginator: number) {\n    let url = this.deliveryUrl + 'recent_delivery_db/paginator=' + paginator;\n    return this.http.get(url).map(res => res.json());\n  }\n\n  cleanDelivery() {\n    let url = this.deliveryUrl + 'clean_delivery';\n    return this.http.get(url).map(res => res.json());\n  }\n\n  changeDeliveryStatus(data: any) {\n    let url = this.deliveryUrl + 'change_status';\n    return this.http.put(url, data).map((res) => res.json());\n  }\n\n  //get total of all products in product list\n  getTotal(data: any) {\n    let url = this.deliveryUrl + 'product_list/total';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  buildAndSaveRecentDelivery() {\n    let url = this.deliveryUrl + 'recent/build_and_save';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  savePartialPay(data: any) {\n    let url = this.deliveryUrl + 'recent/partial_pay/save';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  preGenerateDeliveryUpdate(data: any) {\n    let url = this.deliveryUrl + 'pre_generate_update';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  deleteDelivery(delivery) {\n    let url = this.deliveryUrl + 'delete';\n    return this.http.post(url, delivery).map((res) => res.json());\n  }\n\n  setPaidDateCounter(delivery) {\n    let url = this.deliveryUrl + 'set_paid_date_counter';\n    return this.http.post(url, delivery).map((res) => res.json());\n  }\n\n  getPaidDateCounter() {\n    let url = this.deliveryUrl + 'get_paid_date_counter';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  getAllDeliveryCount() {\n    let url = this.deliveryUrl + 'all_delivery_count';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  createNewDelivery(data: any) {\n    let url = this.deliveryUrl + 'create/new';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/delivery/delivery.service.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content-wrapper {\\n    min-height: 1200px;\\n    /*font-size: 20px;*/\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/file-upload/excel-file-uploader/excel-file-uploader.component.css\n// module id = ../../../../../src/app/file-upload/excel-file-uploader/excel-file-uploader.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\">\\n  <section class=\\\"content-header\\\">\\n    <h1>\\n      Upload File\\n    </h1>\\n    <ol class=\\\"breadcrumb\\\">\\n      <li><a [routerLink]=\\\"['/dashboard/home']\\\"><i class=\\\"fa fa-dashboard\\\"></i> Sofkul</a></li>\\n      <li class=\\\"active\\\">Upload Data File</li>\\n    </ol>\\n    <br>\\n  </section>\\n  <section class=\\\"content\\\">\\n    <!--  Page Content Here -->\\n    <h4>Customer Data File (.csv) </h4>\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isUploadSuccess\\\">Customers Data Successfully Inserted Into\\n          Database\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"fileInput\\\">File input</label>\\n          <input name=\\\"csvFile\\\" type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" id=\\\"fileInput\\\" placeholder=\\\"Upload File\\\" accept=\\\".csv\\\"\\n                 (change)=\\\"getFile($event)\\\">\\n          <p class=\\\"help-block\\\">* Uploading this file will rewrite your database of customers.</p>\\n        </div>\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">Upload</button>\\n      </div>\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-3\\\"></div>\\n      <div class=\\\"col-md-3\\\"></div>\\n    </div>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/file-upload/excel-file-uploader/excel-file-uploader.component.html\n// module id = ../../../../../src/app/file-upload/excel-file-uploader/excel-file-uploader.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {CustomerService} from '../../customer/customer.service';\nimport {Headers} from '@angular/http';\nimport {RequestOptions, Http} from '@angular/http';\nimport {environment} from '../../../environments/environment';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport {Observable} from 'rxjs/Observable';\nimport {FileUploader} from 'ng2-file-upload/ng2-file-upload';\n\n@Component({\n  selector: 'app-excel-file-uploader',\n  templateUrl: './excel-file-uploader.component.html',\n  styleUrls: ['./excel-file-uploader.component.css']\n})\nexport class ExcelFileUploaderComponent implements OnInit {\n\n  public fileUploadForm: FormGroup;\n  public isUploadSuccess: boolean = false;\n  public isFileRead: boolean;\n  public file: File;\n\n\n  private uploadUrl = environment.api_server + 'customer/upload-file-contents';\n\n\n  public uploader: FileUploader = new FileUploader({url: this.uploadUrl, itemAlias: 'csvFile'});\n\n\n  constructor(private http: Http, private customerService: CustomerService, private fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n    this.createForm();\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n\n\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n      if (status == 200) {\n        this.isUploadSuccess = true;\n      }\n    }\n  }\n\n\n  createForm() {\n    this.fileUploadForm = this.fb.group({\n      file: ''\n    });\n  }\n\n  onSubmitForm() {\n  }\n\n  getFile(event: any) {\n    let fileList: FileList = event.target.files;\n    this.file = fileList[0];\n  }\n\n  errorHandler(event) {\n    this.isFileRead = false;\n    console.log(\"Error in uploading file\");\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/file-upload/excel-file-uploader/excel-file-uploader.component.ts","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nconst fileUploadRoutes = [\n\n];\n@NgModule({\n    imports: [\n        RouterModule.forChild(fileUploadRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class FileUploadRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/file-upload/file-upload-routing.module.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport {FileUploadRoutingModule} from \"./file-upload-routing.module\";\n// components\nimport {ExcelFileUploaderComponent} from './excel-file-uploader/excel-file-uploader.component';\n//service\nimport {FileUploadService} from './file-upload.service';\nimport {CustomerService} from '../customer/customer.service';\nimport {FileSelectDirective} from 'ng2-file-upload';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FileUploadRoutingModule\n  ],\n  declarations: [\n    ExcelFileUploaderComponent,\n    FileSelectDirective\n  ],\n  exports: [\n    ExcelFileUploaderComponent\n  ],\n  providers: [\n    FileUploadService,\n    CustomerService\n  ]\n})\nexport class FileUploadModule {\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/file-upload/file-upload.module.ts","import {Injectable} from '@angular/core';\nimport {CustomHttpService} from \"../custom-http.service\";\nimport {environment} from \"../../environments/environment\";\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class FileUploadService {\n  private customerUrl = environment.api_server + 'customer/';\n\n  constructor(private http: CustomHttpService) {\n  }\n\n  createNewCustomer(data: any) {\n    let url = this.customerUrl + 'create/';\n    return this.http.post(url, data).map((res) => res);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/file-upload/file-upload.service.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content-wrapper {\\n    min-height: 1200px;\\n    font-size: 20px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/general/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"wrapper\\\">\\n    <app-navbar></app-navbar>\\n\\n    <app-sidebar *ngIf=\\\"isDisplaySideBar\\\"></app-sidebar>\\n    <router-outlet></router-outlet>\\n    <app-footer></app-footer>\\n    \\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/general/dashboard/dashboard.component.html\n// module chunks = main","import {Component, OnInit, OnDestroy} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {GeneralService} from '../general.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  providers: [GeneralService]\n})\nexport class DashboardComponent implements OnInit {\n  public subscription: Subscription;\n  public isDisplaySideBar: boolean = true;\n\n  constructor(private generalService: GeneralService) {\n  }\n\n  ngOnInit() {\n    this.isDisplaySideBar = true;\n    this.generalService.displaySidebarConfirmed$.subscribe(\n      (status) => {\n        this.isDisplaySideBar = status;\n        console.log(status);\n      }\n    )\n  }\n\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/footer/footer.component.css\n// module id = ../../../../../src/app/general/footer/footer.component.css\n// module chunks = main","module.exports = \"<!-- Main Footer -->\\n<footer class=\\\"main-footer\\\">\\n    <!-- To the right -->\\n    <div class=\\\"pull-right hidden-xs\\\">\\n        <strong>Powered by <a href=\\\"https://www.sofkul.com\\\" target=\\\"_blank\\\">Sofkul</a></strong>\\n      <!--<i class=\\\"fa fa-heart\\\" aria-hidden=\\\"true\\\"></i><span> Angular </span> &nbsp;-->\\n      <!--<i class=\\\"fa fa-bolt\\\" aria-hidden=\\\"true\\\"></i><span> Node.js</span>-->\\n    </div>\\n    <!-- Default to the left -->\\n    <strong>Copyright © 2018 <a href=\\\"https://www.minovative.com\\\" target=\\\"_blank\\\">Minovative Technologies Private Limited.</a> All Rights Reserved</strong>\\n</footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/footer/footer.component.html\n// module id = ../../../../../src/app/general/footer/footer.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/footer/footer.component.ts","import {NgModule} from \"@angular/core\";\nimport {RouterModule} from \"@angular/router\";\n// components\nimport {HomeBodyComponent} from '../home/home-body/home-body.component';\nimport {ExcelFileUploaderComponent} from '../file-upload/excel-file-uploader/excel-file-uploader.component';\nimport {CustomerAllComponent} from '../customer/customer-all/customer-all.component';\nimport {CustomerDetailComponent} from '../customer/customer-detail/customer-detail.component';\nimport {ProductCreateComponent} from '../product/product-create/product-create.component';\nimport {CustomerCreateComponent} from '../customer/customer-create/customer-create.component';\nimport {AreaCreateComponent} from '../area/area-create/area-create.component';\n//Quotation\nimport {QuotationAllComponent} from '../quotation/quotation-all/quotation-all.component';\nimport {QuotationRecentComponent} from '../quotation/quotation-recent/quotation-recent.component';\nimport {QuotationEditComponent} from '../quotation/quotation-edit/quotation-edit.component';\nimport {QuotationHtmlComponent} from '../quotation/quotation-html/quotation-html.component';\nimport {QuotationCreateComponent} from '../quotation/quotation-create/quotation-create.component';\nimport {QuotationSearchComponent} from '../quotation/quotation-search/quotation-search.component';\n// Invoice\nimport {InvoiceAllComponent} from '../invoice/invoice-all/invoice-all.component';\nimport {InvoiceRecentComponent} from '../invoice/invoice-recent/invoice-recent.component';\nimport {InvoiceEditComponent} from '../invoice/invoice-edit/invoice-edit.component';\nimport {InvoiceHtmlComponent} from '../invoice/invoice-html/invoice-html.component';\nimport {LocationDueReportComponent} from '../report/location-due-report/location-due-report.component';\nimport {InvoiceCreateComponent} from '../invoice/invoice-create/invoice-create.component';\nimport {InvoiceSearchComponent} from '../invoice/invoice-search/invoice-search.component';\n//Proforma\nimport {ProformaAllComponent} from '../proforma/proforma-all/proforma-all.component';\nimport {ProformaRecentComponent} from '../proforma/proforma-recent/proforma-recent.component';\nimport {ProformaEditComponent} from '../proforma/proforma-edit/proforma-edit.component';\nimport {ProformaHtmlComponent} from '../proforma/proforma-html/proforma-html.component';\nimport {ProformaCreateComponent} from '../proforma/proforma-create/proforma-create.component';\nimport {ProformaSearchComponent} from '../proforma/proforma-search/proforma-search.component';\n//Delivery\nimport {DeliveryAllComponent} from '../delivery/delivery-all/delivery-all.component';\nimport {DeliveryRecentComponent} from '../delivery/delivery-recent/delivery-recent.component';\nimport {DeliveryEditComponent} from '../delivery/delivery-edit/delivery-edit.component';\nimport {DeliveryHtmlComponent} from '../delivery/delivery-html/delivery-html.component';\nimport {DeliveryCreateComponent} from '../delivery/delivery-create/delivery-create.component';\nimport {DeliverySearchComponent} from '../delivery/delivery-search/delivery-search.component';\n\n\n\nconst generalRoutes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomeBodyComponent\n  },\n  {\n    path: 'upload-file',\n    component: ExcelFileUploaderComponent\n  },\n  {\n    path: 'customer/all',\n    component: CustomerAllComponent\n  },\n  {\n    path: 'customer/detail/:id',\n    component: CustomerDetailComponent\n  },\n  {\n    path: 'customer/create',\n    component: CustomerCreateComponent\n  },\n  {\n    path: 'product',\n    component: ProductCreateComponent\n  },\n  {\n    path: 'area',\n    component: AreaCreateComponent\n  },\n  {\n    path: 'invoice/all',\n    component: InvoiceAllComponent\n  },\n  {\n    path: 'invoice/search',\n    component: InvoiceSearchComponent\n  },\n  {\n    path: 'invoice/create',\n    component: InvoiceCreateComponent\n  },\n  {\n    path: 'invoice/recent',\n    component: InvoiceRecentComponent\n  },\n  {\n    path: 'invoice/display/:type/:id',\n    component: InvoiceHtmlComponent\n  },\n  {\n    path: 'invoice/view/:type/:id',\n    component: InvoiceEditComponent\n  },\n  {\n    path: 'quotation/all',\n    component: QuotationAllComponent\n  },\n  {\n    path: 'quotation/search',\n    component: QuotationSearchComponent\n  },\n  {\n    path: 'quotation/create',\n    component: QuotationCreateComponent\n  },\n  {\n    path: 'quotation/recent',\n    component: QuotationRecentComponent\n  },\n  {\n    path: 'quotation/display/:type/:id',\n    component: QuotationHtmlComponent\n  },\n  {\n    path: 'quotation/view/:type/:id',\n    component: QuotationEditComponent\n  },\n  \n  {\n    path: 'proforma/all',\n    component: ProformaAllComponent\n  },\n  {\n    path: 'proforma/search',\n    component: ProformaSearchComponent\n  },\n  {\n    path: 'proforma/create',\n    component: ProformaCreateComponent\n  },\n  {\n    path: 'proforma/recent',\n    component: ProformaRecentComponent\n  },\n  {\n    path: 'proforma/display/:type/:id',\n    component: ProformaHtmlComponent\n  },\n  {\n    path: 'proforma/view/:type/:id',\n    component: ProformaEditComponent\n  },\n  {\n    path: 'delivery/all',\n    component: DeliveryAllComponent\n  },\n  {\n    path: 'delivery/search',\n    component: DeliverySearchComponent\n  },\n  {\n    path: 'delivery/create',\n    component: DeliveryCreateComponent\n  },\n  {\n    path: 'delivery/recent',\n    component: DeliveryRecentComponent\n  },\n  {\n    path: 'delivery/display/:type/:id',\n    component: DeliveryHtmlComponent\n  },\n  {\n    path: 'delivery/view/:type/:id',\n    component: DeliveryEditComponent\n  },\n  {\n    path: 'report',\n    component: LocationDueReportComponent\n  }\n  \n];\n@NgModule({\n  imports: [\n    RouterModule.forChild(generalRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class GeneralRoutingModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/general-routing.module.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {GeneralRoutingModule} from \"./general-routing.module\";\n//own components\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {NavbarComponent} from './navbar/navbar.component';\nimport {SidebarComponent} from './sidebar/sidebar.component';\nimport {FooterComponent} from './footer/footer.component';\n// modules\nimport {HomeModule} from '../home/home.module';\nimport {FileUploadModule} from '../file-upload/file-upload.module';\nimport {CustomerModule} from '../customer/customer.module';\nimport {ProductModule} from '../product/product.module';\nimport {AreaModule} from '../area/area.module';\nimport {InvoiceModule} from '../invoice/invoice.module';\nimport {QuotationModule} from '../quotation/quotation.module';\nimport {ProformaModule} from '../proforma/proforma.module';\nimport {DeliveryModule} from '../delivery/delivery.module';\nimport {SettingsModule} from '../settings/settings.module';\nimport {ReportModule} from '../report/report.module';\nimport {GeneralService} from './general.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HomeModule,\n    GeneralRoutingModule,\n    FileUploadModule,\n    CustomerModule,\n    ProductModule,\n    AreaModule,\n    InvoiceModule,\n    QuotationModule,\n    ProformaModule,\n    DeliveryModule,\n    SettingsModule,\n    ReportModule\n  ],\n  declarations: [\n    DashboardComponent,\n    NavbarComponent,\n    SidebarComponent,\n    FooterComponent\n  ],\n  exports: [\n    DashboardComponent\n  ],\n  providers: [GeneralService]\n})\nexport class GeneralModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/general.module.ts","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\n\n\n@Injectable()\nexport class GeneralService {\n\n  private displaySidebarSource = new Subject<boolean>();\n\n  displaySidebarConfirmed$ = this.displaySidebarSource.asObservable();\n\n  displaySidebar(status: boolean) {\n    this.displaySidebarSource.next(status);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/general.service.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/navbar/navbar.component.css\n// module id = ../../../../../src/app/general/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<!-- Main Header -->\\n<header class=\\\"main-header\\\">\\n  <!-- Logo -->\\n  <a (click)=\\\"reload()\\\" class=\\\"logo\\\" style=\\\"cursor:pointer\\\">\\n\\n    <!-- mini logo for sidebar mini 50x50 pixels -->\\n    <span class=\\\"logo-mini\\\"><img src=\\\"./assets/dist/img/favicon1.png\\\"  alt=\\\"favicon1\\\" style=\\\"width:50%; height:50%;\\\"></span>\\n    <!-- logo for regular state and mobile devices -->\\n    <span class=\\\"logo-lg col-xs-8 col-md-12\\\"><img src=\\\"../../../assets/dist/img/Sofkullogo1.png\\\" style=\\\"height: 40%; width: 70%;\\\"></span>\\n\\n  </a>\\n\\n  <!-- Header Navbar -->\\n  <nav class=\\\"navbar navbar-static-top\\\" role=\\\"navigation\\\">\\n    <!-- Sidebar toggle button-->\\n    <a href=\\\"#\\\" class=\\\"sidebar-toggle\\\" data-toggle=\\\"offcanvas\\\" role=\\\"button\\\">\\n      <span class=\\\"sr-only\\\">Toggle navigation</span>\\n    </a>\\n    <!-- Navbar Right Menu -->\\n    <div class=\\\"navbar-custom-menu\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <button class=\\\"btn btn-lg btn-danger\\\" style=\\\"padding-bottom: 14px;\\\" (click)=\\\"logout()\\\"> Logout</button>\\n      </ul>\\n    </div>\\n  </nav>\\n</header>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/navbar/navbar.component.html\n// module id = ../../../../../src/app/general/navbar/navbar.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    localStorage.setItem('csbd-username', '');\n    localStorage.setItem('csbd-password', '');\n    this.router.navigate(['']);\n  }\n\n  reload(){\n    window.location.href = '/';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"  .main-sidebar {\\n      /*font-size: 17px;*/\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/sidebar/sidebar.component.css\n// module id = ../../../../../src/app/general/sidebar/sidebar.component.css\n// module chunks = main","module.exports = \"<!-- Left side column. contains the logo and sidebar -->\\n<aside class=\\\"main-sidebar\\\" id=\\\"side-bar\\\">\\n\\n  <!-- sidebar: style can be found in sidebar.less -->\\n  <section class=\\\"sidebar\\\">\\n\\n    <!-- search form (Optional) -->\\n    <form action=\\\"#\\\" method=\\\"get\\\" class=\\\"sidebar-form\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" name=\\\"q\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\n        <span class=\\\"input-group-btn\\\">\\n              <button type=\\\"submit\\\" name=\\\"search\\\" id=\\\"search-btn\\\" class=\\\"btn btn-flat\\\"><i class=\\\"fa fa-search\\\"></i>\\n              </button>\\n            </span>\\n      </div>\\n    </form>\\n    <!-- /.search form -->\\n\\n    <!-- Sidebar Menu -->\\n    <ul class=\\\"sidebar-menu\\\">\\n      <li class=\\\"header\\\">Sofkul solutions</li>\\n      <!-- Optionally, you can add icons to the links -->\\n      <li class=\\\"active\\\"><a [routerLink]=\\\"['dashboard/home']\\\"><i class=\\\"fa fa-home\\\"></i><span>Home</span></a></li>\\n      <!-- customer options -->\\n      <li class=\\\"treeview\\\">\\n        <a href=\\\"#\\\"><i class=\\\"fa fa-users\\\"></i> <span>Customers</span>\\n          <span class=\\\"pull-right-container\\\">\\n                <i class=\\\"fa fa-angle-left pull-right\\\"></i>\\n              </span>\\n        </a>\\n        <ul class=\\\"treeview-menu\\\">\\n          <li><a [routerLink]=\\\"['dashboard/customer/all']\\\"><i class=\\\"fa fa-user\\\"></i> All Customers</a></li>\\n          <li><a [routerLink]=\\\"['dashboard/customer/create']\\\"><i class=\\\"fa fa-user-plus\\\"></i> New Customer</a></li>\\n        </ul>\\n      </li>\\n      <!-- products options -->\\n      <li><a [routerLink]=\\\"['dashboard/product']\\\"><i class=\\\"fa fa-shopping-cart\\\"></i> <span>Products</span></a></li>\\n      <!-- area options -->\\n      <li><a [routerLink]=\\\"['dashboard/area']\\\"><i class=\\\"fa fa-map-marker\\\"></i> <span>Area</span></a></li>\\n      <!-- invoice options -->\\n      <li class=\\\"treeview\\\">\\n        <a href=\\\"#\\\"><i class=\\\"fa fa-file-text\\\"></i> <span>Invoices</span>\\n          <span class=\\\"pull-right-container\\\">\\n                <i class=\\\"fa fa-angle-left pull-right\\\"></i>\\n              </span>\\n        </a>\\n        <ul class=\\\"treeview-menu\\\">\\n          <li>\\n            <a [routerLink]=\\\"['dashboard/invoice/search']\\\"> <i class=\\\"fa fa-search\\\"></i> Search Invoice</a>\\n          </li>\\n          <li>\\n            <a [routerLink]=\\\"['dashboard/invoice/create']\\\"> <i class=\\\"fa fa-file-o\\\"></i> Create Invoice</a>\\n          </li>\\n          <!--<li>\\n            <a [routerLink]=\\\"['dashboard/invoice/recent']\\\"> <i class=\\\"fa fa-circle-o\\\"></i> Recent Invoices</a>\\n          </li>-->\\n          <li>\\n            <a [routerLink]=\\\"['dashboard/invoice/all']\\\"> <i class=\\\"fa fa-file-archive-o\\\"></i> All Invoices</a>\\n          </li>\\n        <!--  <li>\\n            <a href=\\\"#\\\"> <i class=\\\"fa fa-circle-o\\\"></i>Invoice Settings</a>\\n          </li>-->\\n        </ul>\\n      </li>\\n\\n      <!-- Quotation options-->\\n      <li class=\\\"treeview\\\">\\n        <a href=\\\"#\\\"><i class=\\\"fa fa-file-text\\\"></i> <span>Quotations</span>\\n          <span class=\\\"pull-right-container\\\">\\n                <i class=\\\"fa fa-angle-left pull-right\\\"></i>\\n              </span>\\n        </a>\\n        <ul class=\\\"treeview-menu\\\">\\n          <li>\\n            <a [routerLink]=\\\"['dashboard/quotation/search']\\\"> <i class=\\\"fa fa-search\\\"></i> Search Quotations</a>\\n          </li>\\n          <li>\\n            <a [routerLink]=\\\"['dashboard/quotation/create']\\\"> <i class=\\\"fa fa-file-o\\\"></i> Create Quotations</a>\\n          </li>\\n          <!--<li>\\n            <a [routerLink]=\\\"['dashboard/quotation/recent']\\\"> <i class=\\\"fa fa-circle-o\\\"></i> Recent Quotations</a>\\n          </li>-->\\n          <li>\\n            <a [routerLink]=\\\"['dashboard/quotation/all']\\\"> <i class=\\\"fa fa-file-archive-o\\\"></i> All Quotations</a>\\n          </li>\\n         <!-- <li>\\n            <a href=\\\"#\\\"> <i class=\\\"fa fa-circle-o\\\"></i>Invoice Settings</a>\\n          </li>-->\\n        </ul>\\n      </li>\\n\\n      <!-- Proforma options-->\\n      <li class=\\\"treeview\\\">\\n        <a href=\\\"#\\\"><i class=\\\"fa fa-file-text\\\"></i> <span>Proformas</span>\\n          <span class=\\\"pull-right-container\\\">\\n                <i class=\\\"fa fa-angle-left pull-right\\\"></i>\\n              </span>\\n        </a>\\n        <ul class=\\\"treeview-menu\\\">\\n          <li>\\n            <a [routerLink]=\\\"['dashboard/proforma/search']\\\"> <i class=\\\"fa fa-search\\\"></i> Search Proformas</a>\\n          </li>\\n          <li>\\n            <a [routerLink]=\\\"['dashboard/proforma/create']\\\"> <i class=\\\"fa fa-file-o\\\"></i> Create Proformas</a>\\n          </li>\\n          <!--<li>\\n            <a [routerLink]=\\\"['dashboard/proforma/recent']\\\"> <i class=\\\"fa fa-circle-o\\\"></i> Recent Proformas</a>\\n          </li>-->\\n          <li>\\n            <a [routerLink]=\\\"['dashboard/proforma/all']\\\"> <i class=\\\"fa fa-file-archive-o\\\"></i> All Proformas</a>\\n          </li>\\n         <!-- <li>\\n            <a href=\\\"#\\\"> <i class=\\\"fa fa-circle-o\\\"></i>Invoice Settings</a>\\n          </li>-->\\n        </ul>\\n      </li>\\n\\n      <!-- Delivery options-->\\n      <li class=\\\"treeview\\\">\\n        <a href=\\\"#\\\"><i class=\\\"fa fa-truck\\\"></i> <span>Delivery Challan</span>\\n          <span class=\\\"pull-right-container\\\">\\n                <i class=\\\"fa fa-angle-left pull-right\\\"></i>\\n              </span>\\n        </a>\\n        <ul class=\\\"treeview-menu\\\">\\n          <li>\\n            <a [routerLink]=\\\"['dashboard/delivery/search']\\\"> <i class=\\\"fa fa-circle-o\\\"></i> Search Delivery challan</a>\\n          </li>\\n          <li>\\n            <a [routerLink]=\\\"['dashboard/delivery/create']\\\"> <i class=\\\"fa fa-file-o\\\"></i> Create Delivery Challan</a>\\n          </li>\\n         <!-- <li>\\n            <a [routerLink]=\\\"['dashboard/delivery/recent']\\\"> <i class=\\\"fa fa-circle-o\\\"></i> Recent Delivery challan</a>\\n          </li>-->\\n          <li>\\n            <a [routerLink]=\\\"['dashboard/delivery/all']\\\"> <i class=\\\"fa fa-file-archive-o\\\"></i> All Delivery challan's</a>\\n          </li>\\n         <!-- <li>\\n            <a href=\\\"#\\\"> <i class=\\\"fa fa-circle-o\\\"></i>Invoice Settings</a>\\n          </li>-->\\n        </ul>\\n      </li>\\n\\n      <!--reports-->\\n      <li><a [routerLink]=\\\"['dashboard/report']\\\"><i class=\\\"fa fa-pie-chart\\\"></i><span>Reports</span></a></li>\\n      <li><a [routerLink]=\\\"['dashboard/upload-file']\\\"><i class=\\\"fa fa-upload\\\"></i> <span>Upload File</span></a></li>\\n      <li><a [routerLink]=\\\"['dashboard/settings']\\\"><i class=\\\"fa fa-cogs\\\"></i> <span>Settings</span></a></li>\\n    </ul>\\n    <!-- /.sidebar-menu -->\\n  </section>\\n  <!-- /.sidebar -->\\n</aside>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/sidebar/sidebar.component.html\n// module id = ../../../../../src/app/general/sidebar/sidebar.component.html\n// module chunks = main","import {Component, OnInit, SimpleChanges, OnChanges} from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    console.log('changing');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/general/sidebar/sidebar.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content-wrapper {\\n    min-height: 1000px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/home/home-body/home-body.component.css\n// module id = ../../../../../src/app/home/home-body/home-body.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 500px;\\\">\\n  <section class=\\\"content-header\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        \\n      </h1>\\n      <ol class=\\\"breadcrumb\\\">\\n        <li><a [routerLink]=\\\"[ '/' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Sofkul</a></li>\\n        <li class=\\\"active\\\">Home</li>\\n      </ol>\\n    </div>\\n  </section>\\n  <section class=\\\"content\\\">\\n    <!--  Page Content Here -->\\n    <div class=\\\"col-md-12\\\">\\n      <h3>Payment Date vs. Paid Amount </h3>\\n      <app-pay-date-chart></app-pay-date-chart>\\n    </div>\\n    <br>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/home/home-body/home-body.component.html\n// module id = ../../../../../src/app/home/home-body/home-body.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {HomeService} from '../home.service';\nimport {GeneralService} from '../../general/general.service';\n\n@Component({\n  selector: 'app-home-body',\n  templateUrl: './home-body.component.html',\n  styleUrls: ['./home-body.component.css'],\n  providers: [GeneralService]\n})\nexport class HomeBodyComponent implements OnInit {\n\n  constructor(private generalService: GeneralService, private homeService: HomeService) {\n  }\n\n  ngOnInit() {\n    this.generalService.displaySidebar(true);\n    this.wakeUpPayDateCounter();\n  }\n\n  wakeUpPayDateCounter() {\n    this.homeService.buildPayDateCounter()\n      .subscribe(\n        (res) => {\n          // console.log(res);\n        },\n        (err) => {\n          console.log(\"error in buildPayDateCounter\");\n        }\n      )\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/home/home-body/home-body.component.ts","import {Directive, ElementRef, Input, OnInit} from '@angular/core';\ndeclare var google: any;\ndeclare var googleLoaded: any;\n\n@Directive({\n  selector: '[HomeChart]'\n})\n\nexport class HomeChartComponent implements OnInit {\n  public _element: any;\n  @Input('chartType') public chartType: string;\n  @Input('chartOptions') public chartOptions: Object;\n  @Input('chartData') public chartData: Object;\n\n\n  constructor(public element: ElementRef) {\n    this._element = this.element.nativeElement;\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      google.charts.load('current', {'packages': ['corechart']});\n      setTimeout(() => {\n        this.drawGraph(this.chartOptions, this.chartType, this.chartData, this._element)\n      }, 1000);\n    }, 1000);\n  }\n\n  drawGraph(chartOptions, chartType, chartData, ele) {\n    google.charts.setOnLoadCallback(drawChart);\n    function drawChart() {\n      var wrapper;\n      wrapper = new google.visualization.ChartWrapper({\n        chartType: chartType,\n        dataTable: chartData,\n        options: chartOptions || {},\n        containerId: ele.id\n      });\n      wrapper.draw();\n    }\n  }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/home/home-charts/home-charts.component.ts","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nconst homeRoutes = [\n\n];\n@NgModule({\n    imports: [\n        RouterModule.forChild(homeRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class HomeRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/home/home-routing.module.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport {HomeRoutingModule} from \"./home-routing.module\";\nimport {HomeBodyComponent} from './home-body/home-body.component';\nimport {HomeChartComponent} from './home-charts/home-charts.component';\nimport {PayDateChartComponent} from './pay-date-chart/pay-date-chart.component';\nimport {HomeService} from './home.service';\nimport {InvoiceService} from '../invoice/invoice.service';\nimport {GeneralService} from '../general/general.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    HomeBodyComponent,\n    HomeChartComponent,\n    PayDateChartComponent,\n  ],\n  exports: [\n    HomeBodyComponent\n  ],\n  providers: [\n    HomeService,\n    InvoiceService,\n    GeneralService\n  ]\n})\nexport class HomeModule {\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/home/home.module.ts","import {Injectable} from '@angular/core';\nimport {CustomHttpService} from \"../custom-http.service\";\nimport {environment} from \"../../environments/environment\";\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class HomeService {\n\n  private homeUrl = environment.api_server + 'home/';\n\n  constructor(private http: CustomHttpService) {\n  }\n\n\n  buildPayDateCounter() {\n    let url = this.homeUrl + 'pay-date-counter/clean-build';\n    return this.http.get(url).map(res => res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/home/home.service.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/home/pay-date-chart/pay-date-chart.component.css\n// module id = ../../../../../src/app/home/pay-date-chart/pay-date-chart.component.css\n// module chunks = main","module.exports = \"<div class=\\\"col-md-12\\\" >\\n  <div id=\\\"column_chart\\\" [chartData]=\\\"column_ChartData\\\" [chartOptions]=\\\"column_ChartOptions\\\" chartType=\\\"ColumnChart\\\"\\n       HomeChart></div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/home/pay-date-chart/pay-date-chart.component.html\n// module id = ../../../../../src/app/home/pay-date-chart/pay-date-chart.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {InvoiceService} from '../../invoice/invoice.service';\nimport * as _ from 'underscore';\nimport {DatePipe} from '@angular/common';\n\n@Component({\n  selector: 'app-pay-date-chart',\n  templateUrl: './pay-date-chart.component.html',\n  styleUrls: ['./pay-date-chart.component.css']\n})\nexport class PayDateChartComponent implements OnInit {\n\n  public datePipe = new DatePipe('en-US');\n\n  public column_ChartData = [\n    ['Date', 'Pay Amount', 'Pay Count']\n  ];\n\n\n  public column_ChartOptions = {\n    width: 1000,\n    height: 350,\n    chart: {\n      title: 'Payments vs Date',\n      subtitle: 'Payments done this month'\n    },\n    series: {\n      0: {axis: 'pay_amount'}, // Bind series 0 to an axis named 'distance'.\n      1: {axis: 'pay_count'} // Bind series 1 to an axis named 'brightness'.\n    },\n    axes: {\n      y: {\n        pay_amount: {label: 'parsecs'}, // Left y-axis.\n        pay_count: {side: 'right', label: 'apparent magnitude'} // Right y-axis.\n      }\n    }\n  };\n\n\n  constructor(private invoiceService: InvoiceService) {\n  }\n\n  ngOnInit() {\n    let date = new Date();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    let day = date.getDate();\n    let limit = 0;\n    if (month % 2 == 0) {\n      limit = 30;\n    } else {\n      limit = 31;\n    }\n    for (let i = 1; i <= limit; i++) {\n      let data = [];\n      if (i < 10) {\n        data[0] = '0' + i + '/' + month + '/' + year;\n      } else {\n        data[0] = i + '/' + month + '/' + year;\n      }\n      data[2] = 0;\n      data[1] = 0;\n      this.column_ChartData.push(data);\n    }\n    this.getPayDateCounter();\n  }\n\n  getPayDateCounter() {\n    this.invoiceService.getPaidDateCounter()\n      .subscribe(\n        (res) => {\n          _.each(res, (element) => {\n            for (let i = 0; i < this.column_ChartData.length; i++) {\n              if (this.column_ChartData[i][0].split('/')[0] == this.datePipe.transform(element['date'], 'dd/MM/yyyy').split('/')[0]) {\n                this.column_ChartData[i][1] = element['amount'];\n                this.column_ChartData[i][2] = element['invoice_id'].length;\n                break;\n              }\n            }\n          });\n        },\n        (err) => {\n        }\n      )\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/home/pay-date-chart/pay-date-chart.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-all/invoice-all.component.css\n// module id = ../../../../../src/app/invoice/invoice-all/invoice-all.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 3000px;\\\">\\n  <section class=\\\"content-header\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        All Invoices\\n      </h1>\\n      <ol class=\\\"breadcrumb\\\">\\n        <li><a [routerLink]=\\\"[ '/dashboard/home' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Sofkul</a></li>\\n        <li><a [routerLink]=\\\"[ '/dashboard/invoice/all' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Invoice</a></li>\\n        <li class=\\\"active\\\">All</li>\\n      </ol>\\n    </div>\\n  </section>\\n\\n  <section class=\\\"content\\\">\\n    <!--  Page Content Here -->\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"box box-primary\\\">\\n        <div class=\\\"box-header\\\" style=\\\"margin-top: 20px;margin-bottom: 20px;\\\">\\n          <h3 class=\\\"box-title\\\">List Of All Invoice</h3>\\n          <br>\\n          <div class=\\\"box-tools\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-offset-2 col-lg-4\\\">\\n                Filter : &nbsp;\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"All\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">All</label>\\n\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Paid\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Paid</label>\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Due\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Due</label>\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Partially Paid\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Partially Paid</label>\\n              </div>\\n              <div class=\\\"col-lg-6\\\" style=\\\"float:right\\\">\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-btn\\\">\\n                    <select style=\\\"font-size: 15px;height: 34px;\\\" (change)=\\\"filterChange($event.target.value)\\\">\\n                      <option value=\\\"username\\\">Username</option>\\n                      <option value=\\\"mobile_number\\\">Mobile Number</option>\\n                      <option value=\\\"area\\\">Area</option>\\n                    </select>\\n                  </div>\\n                  <!-- /btn-group -->\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"...\\\" placeholder=\\\"Search Recent Invoices\\\"\\n                         (input)=\\\"quickSearch($event.target.value)\\\">\\n                </div>\\n                <!-- /input-group -->\\n              </div>\\n            </div>\\n            <br><br>\\n            <!-- /.row -->\\n            <!-- /.row -->\\n          </div>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body table-responsive no-padding\\\" *ngIf=\\\"invoiceList\\\">\\n          <table class=\\\"table table-hover\\\">\\n            <tbody>\\n            <tr>\\n              <th>Username</th>\\n              <th>Fullname</th>\\n              <th>Mobile</th>\\n              <th>Area</th>\\n              <th>Product</th>\\n              <th>Due (INR)</th>\\n              <th>Paid (INR)</th>\\n              <th>Total (INR)</th>\\n              <th>Status</th>\\n              <th>Invoice Generated On</th>\\n              <th>Last Transaction Date</th>\\n              <th>Change Status</th>\\n              <th>Action</th>\\n            </tr>\\n            <tr\\n              *ngFor=\\\"let invoice of invoiceList | paginate: { itemsPerPage: 30, currentPage: p, totalItems:totalInvoiceCount }\\\">\\n              <td>{{ invoice.customerData?.username }}</td>\\n              <td>{{ invoice.customerData?.fullname }}</td>\\n              <td>{{ invoice.customerData?.mobile_primary }}</td>\\n              <td>{{ invoice.customerData?.areaData?.name }}</td>\\n              <!--<td><span *ngIf=\\\"invoice.customerData?.productData?.length>0\\\"> {{ invoice.customerData?.productData[0]?.name }} - <em *ngIf=\\\"invoice.customerData?.productData[0]?.rate\\\">{{ invoice.customerData?.productData[0]?.rate }} BDT/month</em> </span>\\n                  <small class=\\\"label bg-blue\\\">{{ invoice.customerData?.productData.length }}</small>\\n              </td>-->\\n              <td>\\n                <small class=\\\"label bg-blue\\\">{{ invoice.customerData?.productData?.length }}</small>\\n              </td>\\n              <td>{{ invoice?.amount_due }}</td>\\n              <td>{{ invoice?.total - invoice?.amount_due }}</td>\\n              <td>{{ invoice?.total }}</td>\\n              <td>\\n                <label class=\\\"label label-danger\\\" *ngIf=\\\"invoice.status=='Due'\\\"> {{ invoice.status }} </label>\\n                <label class=\\\"label label-success\\\" *ngIf=\\\"invoice.status=='Paid'\\\"> {{ invoice.status }} </label>\\n                <label class=\\\"label label-warning\\\" *ngIf=\\\"invoice.status=='Partially Paid'\\\"> {{ invoice.status\\n                  }} </label>\\n              </td>\\n              <td>\\n                {{ invoice?.created_on | date: 'yMMMd' }}\\n              </td>\\n              <td *ngIf=\\\"invoice?.status=='Due' || invoice?.status=='Partially Paid'\\\">\\n                {{ invoice?.payment_due_date | date }}\\n              </td>\\n              <td *ngIf=\\\"invoice?.status=='Paid'\\\">\\n                {{ invoice?.paid_date | date }}\\n              </td>\\n              <td>\\n                <button class=\\\"btn btn-success btn-xs\\\" (click)=\\\"changeStatus('Paid',invoice)\\\"> Paid</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"changeStatus('Partially Paid',invoice)\\\"\\n                        data-toggle=\\\"modal\\\" data-target=\\\"#partiallyPaymentModal\\\"> Partially Paid\\n                </button>\\n                <button class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"changeStatus('Due',invoice)\\\"> Due</button>\\n              </td>\\n              <td>\\n                <a type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\"\\n                   [routerLink]=\\\"['/dashboard/invoice/view','all',invoice?._id]\\\">\\n                  View</a>\\n              </td>\\n\\n              <!-- Modal for Partially payment -->\\n              <div class=\\\"modal fade\\\" id=\\\"partiallyPaymentModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n                   aria-labelledby=\\\"myModalLabel\\\">\\n                <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                  <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span\\n                        aria-hidden=\\\"true\\\">&times;</span></button>\\n                      <h2 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Partially Payment</h2>\\n                    </div>\\n                    <div class=\\\"modal-body\\\" *ngIf=\\\"partialInvoice\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                          <h4 style=\\\"text-align: center\\\">Total: {{ partialInvoice?.total }} INR</h4>\\n                          <h4 style=\\\"text-align: center\\\">Due: {{ partialInvoice?.amount_due }} INR</h4>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                          <div *ngFor=\\\"let x of partialInvoice?.amount_partially_paid\\\">\\n                            <h4 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} INR</h4>\\n                            <h4 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} INR</h4>\\n                            <br>\\n                          </div>\\n\\n                        </div>\\n                      </div>\\n                      <br>\\n                      <form class=\\\"form-horizontal\\\" *ngIf=\\\"partialInvoice\\\">\\n                        <!--amoount partially paid-->\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid\\n                            (INR) </label>\\n                          <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"text\\\" name=\\\"partialPay\\\" [(ngModel)]=\\\"partialPay\\\" class=\\\"form-control \\\"\\n                                   id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">\\n                          </div>\\n                        </div>\\n                      </form>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                      <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>-->\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePartialPay()\\\"\\n                              data-dismiss=\\\"modal\\\">Save changes\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </tr>\\n            </tbody>\\n\\n          </table>\\n        </div>\\n        <!-- /.box-body -->\\n      </div>\\n      <!-- /.box -->\\n      <div class=\\\"col-md-offset-4\\\">\\n        <pagination-controls (pageChange)=\\\"onPaginate($event);p=$event\\\"></pagination-controls>\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-all/invoice-all.component.html\n// module id = ../../../../../src/app/invoice/invoice-all/invoice-all.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {InvoiceService} from '../invoice.service';\nimport {Invoice} from '../invoice';\nimport {Customer} from '../../customer/customer';\nimport {Product} from '../../product/product';\nimport {AreaService} from '../../area/area.service';\nimport {CustomerService} from '../../customer/customer.service';\nimport {ProductService} from '../../product/product.service';\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-invoice-all',\n  templateUrl: './invoice-all.component.html',\n  styleUrls: ['./invoice-all.component.css']\n})\nexport class InvoiceAllComponent implements OnInit {\n\n  public invoiceList: Invoice[] = [];\n  public partialInvoice: Invoice;\n  totalInvoiceCount: number = 0;\n  public paginator = 1;\n\n  constructor(private customerService: CustomerService, private router: Router, private invoiceService: InvoiceService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  ngOnInit() {\n    this.invoiceService.getAllInvoiceCount()\n      .subscribe(\n        (res) => {\n          this.totalInvoiceCount = res.count;\n        }\n      );\n    this.getAllInvoice();\n\n  }\n\n  getAllInvoice() {\n    this.invoiceList = [];\n    this.invoiceService.getAllInvoice(this.paginator)\n      .subscribe(\n        (res: Invoice[]) => {\n          if (res.length == 0) {\n            this.invoiceList = [];\n          } else {\n            _.each(res, (invoice: Invoice) => {\n              let customer: Customer;\n              this.customerService.getCustomerDetails(invoice.customer_id)\n                .subscribe(\n                  (res: Customer) => {\n                    customer = res;\n                    customer.productData = [];\n                    if (invoice.productList.length > 0) {\n                      _.each(invoice.productList, (element) => {\n                        this.productService.getProductById(element)\n                          .subscribe(\n                            (res: Product) => {\n                              customer['productData'].push(res);\n                            }\n                          )\n                      });\n                    }\n\n                    this.areaService.getAreaById(customer.area)\n                      .subscribe(\n                        (res) => {\n                          customer['areaData'] = res;\n                        }\n                      )\n                    invoice.customerData = customer;\n                    this.invoiceList.push(invoice);\n                  }\n                )\n            });\n          }\n        },\n        (err) => {\n          console.log('ERROR in getAllInvoice');\n        }\n      )\n  }\n\n  toggleSearchStatus(event: any) {\n    console.log(event);\n  }\n\n  filterChange(event: any) {\n\n  }\n\n  quickSearch(event: any) {\n\n  }\n\n  changeStatus(status: string, invoice: Invoice) {\n    if (status == 'Paid') {\n      this.setPaidDateCounter(invoice);\n      invoice.status = 'Paid';\n      invoice.paid_date = Date.now();\n      invoice.amount_due = 0;\n    } else if (status == 'Due') {\n      invoice.status = 'Due';\n      invoice.amount_due = invoice.total;\n      invoice.amount_partially_paid = [];\n    } else if (status == 'Partially Paid') {\n      this.partialInvoice = invoice;\n    }\n\n    invoice['type'] = 'all';\n\n    this.invoiceService.changeInvoiceStatus(invoice)\n      .subscribe(\n        (res) => {\n\n        }\n      )\n  }\n\n  //  for pagination\n  onPaginate(event: any) {\n    this.paginator = event;\n    this.getAllInvoice();\n  }\n\n\n  setPaidDateCounter(invoice: Invoice) {\n    this.invoiceService.setPaidDateCounter(invoice)\n      .subscribe(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          console.log(\"Error in setpaiddatecounter\");\n        }\n      )\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-all/invoice-all.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-create/invoice-create.component.css\n// module id = ../../../../../src/app/invoice/invoice-create/invoice-create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 3000px;\\\">\\n  <section class=\\\" content-header \\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        Create New Invoice\\n      </h1>\\n      <ol class=\\\"breadcrumb \\\">\\n        <li><a [routerLink]=\\\"[ '/dashboard/home' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Sofkul</a></li>\\n        <li><a [routerLink]=\\\"[ '/dashboard/invoice/create' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Invoice</a></li>\\n        <li class=\\\"active \\\">Create</li>\\n      </ol>\\n    </div>\\n  </section>\\n  <section class=\\\"content \\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"box box-primary\\\" style=\\\"height:2000px\\\">\\n        <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"showSuccess\\\">New Invoice Created Successfully !!</div>\\n        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"showError\\\">ERROR !! Please Try Again.</div>\\n        <!--  Page Content Here -->\\n        <br>\\n        <!--customer list-->\\n        <form class=\\\"form-horizontal \\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\" form-group \\\">\\n              <label class=\\\"col-sm-2 control-label \\\">Choose Customer: </label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <div>\\n                  <select required *ngIf=\\\"customerList\\\" class=\\\"form-control\\\" (change)=\\\"getCustomer($event)\\\">\\n                    <option *ngFor=\\\"let customer of customerList\\\" value=\\\"{{ customer._id }}\\\">\\n                      <strong> {{ customer.username }} </strong> - <em> {{ customer.fullname }} </em>\\n                    </option>\\n                  </select>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <hr>\\n          <br><br>\\n        </form>\\n\\n\\n        <form class=\\\"form-horizontal \\\" style=\\\"margin-top:30px\\\" [formGroup]=\\\"invoiceCreateForm\\\"\\n              (submit)=\\\"submitInvoiceCreateForm()\\\">\\n          <div class=\\\"col-md-12\\\" *ngIf=\\\"resCustomer\\\">\\n            <!--username-->\\n            <div class=\\\" form-group \\\">\\n              <label for=\\\"username \\\" class=\\\"col-sm-2 control-label \\\">Username</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"username\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"username \\\"\\n                       placeholder=\\\"Username \\\" readonly>\\n              </div>\\n            </div>\\n            <!--email-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"email \\\" class=\\\"col-sm-2 control-label \\\">Email</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"email\\\" type=\\\"email \\\" class=\\\"form-control \\\" id=\\\"email \\\" placeholder=\\\"Email \\\"\\n                       readonly>\\n              </div>\\n            </div>\\n            <!--fullname-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"fullname \\\" class=\\\"col-sm-2 control-label \\\">Fullname</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"fullname\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"fullname \\\"\\n                       placeholder=\\\"Fullname \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--mobile_primary-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"mobile_primary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Primary</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"mobile_primary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_primary \\\"\\n                       placeholder=\\\"Mobile primary \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--mobile_secondary-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"mobile_secondary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Secondary</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"mobile_secondary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_secondary \\\"\\n                       placeholder=\\\"Mobile secondary \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--location-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"location \\\" class=\\\"col-sm-2 control-label \\\">Location</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text \\\" formControlName=\\\"location\\\" class=\\\"form-control \\\" id=\\\"location \\\"\\n                       placeholder=\\\"location \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--area-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"area \\\" class=\\\"col-sm-2 control-label \\\">Area</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text \\\" formControlName=\\\"area\\\" class=\\\"form-control \\\" id=\\\"area \\\" placeholder=\\\"area \\\"\\n                       readonly>\\n              </div>\\n            </div>\\n\\n            <!--city-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"city \\\" class=\\\"col-sm-2 control-label \\\">City</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text \\\" formControlName=\\\"city\\\" class=\\\"form-control \\\" id=\\\"city \\\" placeholder=\\\"city \\\"\\n                       >\\n              </div>\\n            </div>\\n        \\n\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"status\\\" class=\\\"col-sm-2 control-label \\\">Status</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <label class=\\\"label label-danger\\\">Due</label>\\n              </div>\\n            </div>\\n            <br>\\n\\n            \\n\\n            <!--invoice_created_date-->\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"date\\\" class=\\\"col-sm-2 control-label\\\">Invoice Date</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"date\\\" formControlName=\\\"date\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"description\\\" class=\\\"col-sm-2 control-label \\\">Remarks</label>\\n                <div class=\\\"col-sm-10 \\\">\\n                  <textarea formControlName=\\\"description\\\" class=\\\"form-control\\\"></textarea>\\n                </div>\\n              </div>\\n\\n            <!--total amount-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"amount_due_minus_discount \\\" class=\\\"col-sm-2 control-label \\\">Total (INR)</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"number \\\" formControlName=\\\"total\\\" class=\\\"form-control \\\" id=\\\"amount_due_minus_discount \\\"\\n                       placeholder=\\\"total \\\"\\n                       readonly>\\n              </div>\\n            </div>\\n\\n            <!--discount-->\\n            <div class=\\\"form-group \\\">\\n            <label for=\\\"discount \\\" class=\\\"col-sm-2 control-label \\\">Adjustments</label>\\n            <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"number \\\" (keyup)=\\\"updateDiscount($event.target.value)\\\" formControlName=\\\"discount\\\"\\n            class=\\\"form-control \\\" id=\\\"discount \\\" placeholder=\\\"discount\\\">\\n            </div>\\n            </div>\\n            <!--product list-->\\n            <div class=\\\"form-group row \\\" *ngFor=\\\"let item of createRange(allProductCounter);let i=index\\\">\\n              <label class=\\\"col-sm-2 control-label \\\">Product [{{ i+1 }}]</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <div class=\\\"productSelectBox\\\">\\n                  <select required *ngIf=\\\"productList\\\" class=\\\"form-control\\\" (change)=\\\"onProductChange($event,i)\\\">\\n                    <option *ngFor=\\\"let product of productList\\\" value=\\\"{{ product._id }}\\\">\\n                      {{ product.name }} - <em> {{ product.rate }} INR/month </em>\\n                    </option>\\n                  </select>\\n                  <button *ngIf=\\\"i>0\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-danger btn-xs\\\" (click)=\\\"removeProduct(i)\\\">\\n                    <i\\n                      class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n              \\n            </div>\\n            <!--<div class=\\\"col-sm-4 pull-right\\\">\\n                <div class=\\\"form-group \\\">\\n                    <label for=\\\"quantity \\\" class=\\\"col-sm-2 control-label \\\">Quantity</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                      <input type=\\\"number \\\" formControlName=\\\"quantity\\\"  class=\\\"form-control \\\" id=\\\"quantity \\\" \\n                             placeholder=\\\"enter quantity\\\">\\n                    </div>\\n                  </div>\\n                  </div>-->\\n            \\n\\n\\n            <button (click)=\\\"addProduct()\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-success\\\"><i class=\\\"fa fa-plus\\\"\\n                                                                                               aria-hidden=\\\"true\\\"></i>\\n              &nbsp; Add Product\\n            </button>\\n\\n            <div class=\\\"form-group \\\">\\n              <div class=\\\"col-md-offset-2 col-md-10\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success btn-lg\\\">Save</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-lg\\\">Cancel</button>\\n\\n              </div>\\n            </div>\\n          </div>\\n          <br>\\n          <br>\\n          <hr>\\n          <div class=\\\"col-md-12\\\" *ngIf=\\\"isSaved\\\">\\n            <div class=\\\"alert alert-success\\\" role=\\\"alert\\\">Invoice Created Successfully !!</div>\\n            <a class=\\\"btn btn-lg btn-info\\\" [routerLink]=\\\"['/dashboard/invoice/display/all/',resultInvoice._id]\\\">Generate Invoice Now</a>\\n          </div>\\n\\n        </form>\\n      </div>\\n\\n    </div>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-create/invoice-create.component.html\n// module id = ../../../../../src/app/invoice/invoice-create/invoice-create.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {FormGroup, FormBuilder} from \"@angular/forms\";\nimport {ProductService} from '../../product/product.service';\nimport {AreaService} from '../../area/area.service';\nimport {CustomerService} from '../../customer/customer.service';\nimport {Customer} from '../../customer/customer';\nimport * as _ from 'underscore';\nimport {Product} from '../../product/product';\nimport {Area} from \"../../area/area\";\nimport {Subscription} from \"rxjs\";\nimport {Invoice} from '../invoice';\nimport {InvoiceService} from '../invoice.service';\n\n@Component({\n  selector: 'app-invoice-create',\n  templateUrl: './invoice-create.component.html',\n  styleUrls: ['./invoice-create.component.css']\n})\nexport class InvoiceCreateComponent implements OnInit {\n\n  public productList: any[] = [];\n  showSuccess: boolean = false;\n  showError: boolean = false;\n  public invoiceCreateForm: FormGroup;\n  public customerList: Customer[] = [];\n  public resCustomer: Customer;\n  private subscription: Subscription;\n  public invoice: Invoice;\n  public allProductCounter = 1;\n  public allProducts: any[] = [];\n  public isSaved: boolean = false;\n  public resultInvoice;\n\n\n  constructor(private invoiceService: InvoiceService, private fb: FormBuilder, private customerService: CustomerService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  quantity:'';\n\n  ngOnInit() {\n    this.buildForm();\n    this.getProductList();\n    this.getAllCustomers();\n  }\n\n  buildForm() {\n    let date = Date.now();\n    this.invoiceCreateForm = this.fb.group({\n      customer_id: [''],\n      username: [''],\n      email: [''],\n      fullname: [''],\n      location: [''],\n      area: [''],\n      city: [''],\n      mobile_primary: [''],\n      mobile_secondary: [''],\n      amount_due: [''],\n      total: [''],\n      discount: [0],\n      date: [date],\n      status: ['Due'],\n      productList: [],\n      description: ['']\n    });\n  }\n  getAllCustomers() {\n    this.customerService.getAllCustomers('all')\n      .subscribe(\n        (res) => {\n          this.customerList = res;\n        },\n        (err) => {\n\n        }\n      );\n  }\n\n  getCustomer(event: any) {\n    this.resCustomer = _.find(this.customerList, function (item) {\n      return item['_id'] == event.target.value;\n    });\n    this.invoiceCreateForm.patchValue({\n      username: this.resCustomer.username,\n      email: this.resCustomer.email,\n      fullname: this.resCustomer.fullname,\n      location: this.resCustomer.location,\n      city: this.resCustomer.city,\n      mobile_primary: this.resCustomer.mobile_primary,\n      mobile_secondary: this.resCustomer.mobile_secondary,\n    });\n\n    this.resCustomer.productData = [];\n    if (this.resCustomer.area) {\n      this.areaService.getAreaById(this.resCustomer.area)\n        .subscribe(\n          (res: Area) => {\n            this.resCustomer.areaData = res;\n            this.invoiceCreateForm.patchValue({\n              area: this.resCustomer.areaData.name\n            });\n          },\n          (err) => {\n\n          }\n        )\n    }\n  }\n\n  getProductList() {\n    this.productList.forEach(product => { product.quantity = 0; });\n    this.productList = [];\n    this.productService.getAllProduct()\n      .subscribe(\n        (res) => {\n          _.each(res, (item) => {\n            if (item['status']) {\n              this.productList.push(item);\n            }\n          });\n        },\n        (err) => {\n          console.log(\"ERROR from productList\");\n        },\n        () => {\n          this.allProducts.push(this.productList[0]);\n          this.invoiceCreateForm.patchValue({\n            total: this.productList[0].rate\n            \n          })\n        }\n      )\n  }\n\n\n  removeProduct(index) {\n    this.allProductCounter--;\n    this.allProducts.splice(index, 1);\n  }\n\n  addProduct(product: any) {\n    this.allProductCounter++;\n    let newProduct = this.productList[0];\n    this.allProducts.push(newProduct);\n    this.updateTotal();\n  }\n\n \n \n\n  onProductChange(event: any, index) {\n    let result = _.find(this.productList, function (item) {\n      return item['_id'] == event.target.value;\n    })\n    this.allProducts[index] = result;\n    this.updateTotal();\n  }\n\n  createRange(number) {\n    let items: number[] = [];\n    for (let i = 1; i <= number; i++) {\n      items.push(i);\n    }\n    return items;\n  }\n \n\n\n\n  updateTotal() {\n    let total = 0;\n    _.each(this.allProducts, (product) => {\n      total += product['rate'];\n    });\n    this.invoiceCreateForm.patchValue({\n      total: total\n    })\n  }\n\n  submitInvoiceCreateForm() {\n    let product_list = _.pluck(this.allProducts, '_id');\n    this.invoiceCreateForm.patchValue({\n      productList: product_list,\n      customer_id: this.resCustomer['_id']\n    });\n\n    this.invoiceService.createNewInvoice(this.invoiceCreateForm.value)\n      .subscribe(\n        (res) => {\n          this.resultInvoice = res;\n          this.isSaved = true;\n        }\n      )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-create/invoice-create.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content-wrapper {\\n    min-height: 1200px;\\n    /*font-size: 20px;*/\\n}\\n\\n.box-primary {\\n    padding: 30px 30px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-edit/invoice-edit.component.css\n// module id = ../../../../../src/app/invoice/invoice-edit/invoice-edit.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"showForm\\\" class=\\\"content-wrapper\\\" style=\\\"height: 2000px;\\\">\\n  <section class=\\\" content-header \\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        Invoice Details of <em>{{ invoice.customerData?.username }}</em>\\n        <small>for the month of {{ invoice?.created_on | date:'MMMM'}}</small>\\n      </h1>\\n      <ol class=\\\"breadcrumb \\\">\\n        <li><a [routerLink]=\\\"[ '/dashboard/home' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Sofkul</a></li>\\n        <li><a [routerLink]=\\\"[ '/dashboard/invoice/all' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Invoices</a></li>\\n        <li class=\\\"active \\\">Edit</li>\\n      </ol>\\n    </div>\\n  </section>\\n  <section class=\\\"content \\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"box box-primary\\\" *ngIf=\\\"invoice\\\">\\n        <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"showSuccess\\\">Invoice Data Updated Successfully !!</div>\\n        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"showError\\\">ERROR !! Please Try Again.</div>\\n        <!--  Page Content Here -->\\n        <form class=\\\"form-horizontal \\\" [formGroup]=\\\"invoiceDetailForm\\\" *ngIf=\\\"invoice\\\"\\n              (submit)=\\\"submitInvoiceEditForm()\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <!--username-->\\n            <div class=\\\" form-group \\\">\\n              <label for=\\\"username \\\" class=\\\"col-sm-2 control-label \\\">Username</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"username\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"username \\\"\\n                       placeholder=\\\"Username \\\" readonly>\\n              </div>\\n            </div>\\n            <!--email-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"email \\\" class=\\\"col-sm-2 control-label \\\">Email</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"email\\\" type=\\\"email \\\" class=\\\"form-control \\\" id=\\\"email \\\" placeholder=\\\"Email \\\"\\n                       readonly>\\n              </div>\\n            </div>\\n            <!--fullname-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"fullname \\\" class=\\\"col-sm-2 control-label \\\">Fullname</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"fullname\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"fullname \\\"\\n                       placeholder=\\\"Fullname \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--mobile_primary-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"mobile_primary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Primary</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"mobile_primary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_primary \\\"\\n                       placeholder=\\\"Mobile primary \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--mobile_secondary-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"mobile_secondary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Secondary</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input formControlName=\\\"mobile_secondary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_secondary \\\"\\n                       placeholder=\\\"Mobile secondary \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--location-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"location \\\" class=\\\"col-sm-2 control-label \\\">Location</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text \\\" formControlName=\\\"location\\\" class=\\\"form-control \\\" id=\\\"location \\\"\\n                       placeholder=\\\"location \\\" readonly>\\n              </div>\\n            </div>\\n\\n            <!--area-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"area \\\" class=\\\"col-sm-2 control-label \\\">Area</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text \\\" formControlName=\\\"area\\\" class=\\\"form-control \\\" id=\\\"area \\\" placeholder=\\\"area \\\"\\n                       readonly>\\n              </div>\\n            </div>\\n\\n            <!--city-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"city \\\" class=\\\"col-sm-2 control-label \\\">City</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text \\\" formControlName=\\\"city\\\" class=\\\"form-control \\\" id=\\\"city \\\" placeholder=\\\"city \\\"\\n                       readonly>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-md-6\\\">\\n            <!--choose status-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"status \\\" class=\\\"col-sm-6 control-label \\\">Payment Status</label>\\n              <div class=\\\"col-sm-6\\\">\\n                <label class=\\\"label label-warning\\\" *ngIf=\\\"invoice.status=='Partially Paid'\\\">{{ invoice.status }}</label>\\n                <label class=\\\"label label-danger\\\" *ngIf=\\\"invoice.status=='Due'\\\">{{ invoice.status }}</label>\\n                <label class=\\\"label label-success\\\" *ngIf=\\\"invoice.status=='Paid'\\\">{{ invoice.status }}</label>\\n              </div>\\n            </div>\\n\\n            <!--invoice_created_date-->\\n            <!--<div class=\\\"form-group \\\">\\n            <!--<label for=\\\"invoice_created_date \\\" class=\\\"col-sm-2 control-label \\\">Invoice created on</label>-->\\n            <!--<div class=\\\"col-sm-10\\\">-->\\n            <!--<input type=\\\"date\\\" formControlName=\\\"invoice_created_date\\\">-->\\n            <!--</div>-->\\n            <!--</div>-->\\n\\n            <!--payment_due_date-->\\n            <!--<div class=\\\"form-group \\\" *ngIf=\\\"paymentStatus=='Due'\\\">\\n                <label for=\\\"payment_due_date \\\" class=\\\"col-sm-2 control-label \\\">Payment Due Date</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input type=\\\"date\\\" formControlName=\\\"payment_due_date\\\" value=\\\"currentDate.toString('Y-m-d')\\\">\\n                </div>\\n            </div>-->\\n\\n            <!--for partial payment only-->\\n            <div class=\\\"form-group \\\" *ngIf=\\\"invoice.status=='Partially Paid' \\\">\\n              <div *ngFor=\\\"let x of invoice?.amount_partially_paid;let i = index\\\">\\n                <label for=\\\"status \\\" class=\\\"col-sm-6 control-label \\\">Partial Payment : [{{ i+1 }}] </label>\\n                <div class=\\\"col-sm-6\\\">\\n                  <h5 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} INR</h5>\\n                  <h5 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} INR</h5>\\n                  <br>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <!--payment paid / partially paid date-->\\n            <div class=\\\"form-group \\\" *ngIf=\\\"invoice.status=='Paid' && paymentStatus!='Due'\\\">\\n              <label for=\\\"paid \\\" class=\\\"col-sm-2 control-label \\\">Payment Paid Date</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"date\\\" formControlName=\\\"paid_date\\\">\\n              </div>\\n            </div>\\n\\n            <!--amoount partially paid-->\\n            <!--<div class=\\\"form-group \\\" *ngIf=\\\"invoice.status=='Partially Paid'\\\">-->\\n            <!--<label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid (INR) </label>-->\\n            <!--<div class=\\\"col-sm-10\\\">-->\\n            <!--<input type=\\\"text \\\" (keyup)=\\\"getPartiallyPaid($event)\\\" formControlName=\\\"amount_partially_paid\\\" class=\\\"form-control \\\" id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">-->\\n            <!--</div>-->\\n            <!--</div>-->\\n\\n            <!--amount_due-->\\n            <div class=\\\"form-group \\\" *ngIf=\\\"invoice.status!='Paid'\\\">\\n              <label for=\\\"amount_due \\\" class=\\\"col-sm-2 control-label \\\">Amount Due (INR) </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input *ngIf=\\\"invoice.status=='Due'\\\" type=\\\"text \\\" formControlName=\\\"amount_due\\\" class=\\\"form-control \\\"\\n                       id=\\\"amount_due \\\" placeholder=\\\"amount due\\\" readonly>\\n                <input *ngIf=\\\"invoice.status=='Partially Paid'\\\" type=\\\"text \\\" formControlName=\\\"amount_due\\\"\\n                       class=\\\"form-control \\\" id=\\\"amount_due \\\" placeholder=\\\"amount due\\\" readonly>\\n              </div>\\n            </div>\\n\\n\\n            <!--discount-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"discount \\\" class=\\\"col-sm-2 control-label\\\">Adjustments (INR) </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input (keyup)=\\\"getDiscount($event)\\\" type=\\\"text\\\" formControlName=\\\"discount\\\" class=\\\"form-control \\\"\\n                       id=\\\"discount \\\" placeholder=\\\"discount\\\">\\n              </div>\\n            </div>\\n\\n            <!--total-->\\n            <div class=\\\"form-group \\\">\\n              <label for=\\\"discount \\\" class=\\\"col-sm-2 control-label \\\">Total (INR) </label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input *ngIf=\\\"invoice.status!='Paid'\\\" type=\\\"text \\\" formControlName=\\\"total\\\" class=\\\"form-control \\\"\\n                       id=\\\"total \\\" placeholder=\\\"total\\\">\\n                <input *ngIf=\\\"invoice.status=='Paid'\\\" type=\\\"text \\\" formControlName=\\\"total\\\" class=\\\"form-control \\\"\\n                       id=\\\"total \\\" placeholder=\\\"total\\\" readonly>\\n              </div>\\n            </div>\\n            <div>\\n              <!--for products already list-->\\n              <div class=\\\"form-group \\\" *ngFor=\\\"let myProduct of invoice.customerData?.productData;let i=index\\\">\\n                <label for=\\\"\\\" class=\\\"col-sm-2 control-label \\\">Product [{{ i+1 }}]</label>\\n                <div class=\\\"col-sm-10 \\\">\\n                  <div class=\\\"productSelectBox\\\">\\n                    <select (change)=\\\"onProductChange($event,i,'my')\\\" required *ngIf=\\\"productList\\\" class=\\\"form-control\\\"\\n                            style=\\\"margin-bottom:10px\\\">\\n                      <option [selected]=\\\"product._id == myProduct._id\\\" *ngFor=\\\"let product of productList\\\"\\n                              value=\\\"{{ product._id }}\\\">\\n                        {{ product.name }} - <em> {{ product.rate }} INR/month </em>\\n                      </option>\\n                    </select>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <!--for new additional products-->\\n              <div class=\\\"form-group \\\" *ngFor=\\\"let newProduct of additionalProducts;let i=index\\\">\\n                <label for=\\\"\\\" class=\\\"col-sm-2 control-label \\\">Product [{{ i+invoice.customerData?.productData.length+1\\n                  }}]</label>\\n                <div class=\\\"col-sm-10 \\\">\\n                  <div class=\\\"productSelectBox\\\">\\n                    <select (change)=\\\"onProductChange($event,i,'add')\\\" required *ngIf=\\\"productList\\\" class=\\\"form-control\\\"\\n                            style=\\\"margin-bottom:10px\\\">\\n                      <option *ngFor=\\\"let product of productList\\\" value=\\\"{{ product._id }}\\\">\\n                        {{ product.name }} - <em> {{ product.rate }} INR/month </em></option>\\n                    </select>\\n                    <button *ngIf=\\\"invoice.status!='Paid'\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-danger btn-xs\\\"\\n                            (click)=\\\"removeProduct(i)\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></button>\\n                  </div>\\n                </div>\\n              </div>\\n              <button *ngIf=\\\"invoice.status!='Paid'\\\" (click)=\\\"addProduct()\\\" type=\\\"button\\\"\\n                      class=\\\"pull-right btn btn-success\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> &nbsp; Add\\n                Product\\n              </button>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-offset-1 col-sm-10 \\\" style=\\\"margin-top:10px\\\">\\n              <!--<button type=\\\"submit \\\" class=\\\"btn btn-success\\\">Save</button>-->\\n              <button type=\\\"submit\\\" class=\\\"btn btn-info btn-lg\\\">Generate Invoice</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-edit/invoice-edit.component.html\n// module id = ../../../../../src/app/invoice/invoice-edit/invoice-edit.component.html\n// module chunks = main","import {DatePipe} from '@angular/common';\nimport {Component, OnInit, ElementRef, ViewChild} from '@angular/core';\nimport {InvoiceService} from '../invoice.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from \"rxjs\";\nimport {Invoice} from '../invoice';\nimport {Router} from \"@angular/router\";\nimport {FormGroup, FormBuilder} from \"@angular/forms\";\nimport {ProductService} from '../../product/product.service';\nimport {CustomerService} from '../../customer/customer.service';\nimport * as _ from 'underscore';\nimport {AreaService} from '../../area/area.service';\n\n@Component({\n  selector: 'app-invoice-edit',\n  templateUrl: './invoice-edit.component.html',\n  styleUrls: ['./invoice-edit.component.css']\n})\nexport class InvoiceEditComponent implements OnInit {\n  @ViewChild('productSelectBox') productSelectBox: ElementRef;\n\n  public productList: any[] = [];\n  public additionalProducts: any[] = [];\n  public addProductCounter: number = 0;\n  public allProductsAdd: any[] = [];\n\n\n  public productSuggestions: any[] = [];\n\n  private subscription: Subscription;\n  public invoiceDetailForm: FormGroup;\n  private id: any;\n  public invoice: Invoice;\n  public currentDate: number = Date.now();\n  public datePipe: DatePipe = new DatePipe('en-US');\n  public paymentStatus: string = 'Due';\n  public showForm: boolean = false;\n  private type: string;\n\n  constructor(private areaService: AreaService, private customerService: CustomerService, private elementRef: ElementRef, private productService: ProductService, private fb: FormBuilder, private invoiceService: InvoiceService, private route: ActivatedRoute, private router: Router) {\n\n  }\n\n  ngOnInit() {\n    this.getProductList();\n    this.subscription = this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.type = params['type'];\n      if (this.id) {\n        this.invoiceService.getInvoiceById(this.type, this.id)\n          .subscribe(\n            (res) => {\n              this.invoice = res;\n              this.allProductsAdd = this.invoice.productList;\n              this.buildForm();\n            },\n            (err) => {\n\n            }\n          )\n      }\n    });\n  }\n\n  buildForm() {\n    this.customerService.getCustomerDetails(this.invoice.customer_id)\n      .subscribe(\n        (res) => {\n          this.invoice.customerData = res;\n          this.invoice.customerData.productData = [];\n          let total_partially_paid = 0;\n          _.each(this.invoice.productList, (item) => {\n            this.productService.getProductById(item)\n              .subscribe(\n                (res) => {\n                  this.invoice.customerData.productData.push(res);\n                }\n              )\n            total_partially_paid += item['amount'];\n          });\n\n          this.invoiceDetailForm = this.fb.group({\n            username: [res['username']],\n            email: [res['email']],\n            fullname: [res['fullname']],\n            location: [res['location']],\n            area: [''],\n            city: [res['city']],\n            mobile_primary: [res['mobile_primary']],\n            mobile_secondary: [res['mobile_secondary']],\n            payment_due_date: [this.invoice['payment_due_date']],\n            amount_due: [this.invoice['amount_due']],\n            status: [this.invoice['status']],\n            total: [this.invoice['total']],\n            discount: [this.invoice['discount']],\n            invoice_created_date: [this.invoice['invoice_created_date']],\n            paid_date: [this.invoice['paid_date']],\n            amount_partially_paid: total_partially_paid\n          });\n\n          this.areaService.getAreaById(res['area'])\n            .subscribe(\n              (res) => {\n                this.invoiceDetailForm.patchValue({\n                  area: res['name']\n                });\n              }\n            )\n          this.showForm = true;\n        }\n      )\n\n  }\n\n  getProductSuggestions(event: any) {\n    let data = {\n      text: event.query\n    }\n\n    this.productService.searchByName(data)\n      .subscribe(\n        (res) => {\n          this.productSuggestions = res;\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  getProductList() {\n    this.productList = [];\n    this.productService.getAllProduct()\n      .subscribe(\n        (res) => {\n          _.each(res, (item) => {\n            if (item['status']) {\n              this.productList.push(item);\n            }\n          });\n        },\n        (err) => {\n          console.log(\"ERROR from productList\");\n        }\n      )\n  }\n\n  addProduct() {\n    let newProduct = this.productList[0];\n    this.additionalProducts.push(newProduct);\n    this.allProductsAdd.push(newProduct._id);\n    this.updatePayments();\n  }\n\n  removeProduct(index) {\n    let delIndex = this.allProductsAdd.indexOf(this.additionalProducts[index]);\n    this.allProductsAdd.splice(delIndex, 1);\n    this.additionalProducts.splice(index, 1);\n    this.updatePayments();\n  }\n\n  onProductChange(event: any, index, mode) {\n    if (mode != 'my') {\n      index = index + this.invoice.customerData.productData.length;\n    }\n    this.allProductsAdd[index] = event.target.value;\n    this.updatePayments();\n  }\n\n  submitInvoiceEditForm() {\n    let data = {};\n    data = {\n      id: this.id,\n      amount_due: this.invoiceDetailForm.value.amount_due,\n      total: this.invoiceDetailForm.value.total,\n      discount: this.invoiceDetailForm.value.discount,\n      productList: this.allProductsAdd,\n      amount_partially_paid: this.invoice.amount_partially_paid,\n      type: this.type\n    }\n\n    this.invoiceService.preGenerateInvoiceUpdate(data)\n      .subscribe(\n        (res) => {\n          this.router.navigate(['dashboard/invoice/display', this.type, this.id]);\n        },\n        (err) => {\n          console.log('Error in Pre Generator');\n        }\n      )\n  }\n\n\n  changeStatus(event: any) {\n    this.paymentStatus = event.target.value;\n    if (this.paymentStatus == 'Paid') {\n      let currentDate = this.datePipe.transform(Date.now(), 'y-MM-dd');\n      this.invoiceDetailForm.patchValue({\n        paid_date: currentDate\n      });\n    }\n  }\n\n  getPartiallyPaid(event: any) {\n    this.invoiceDetailForm.patchValue({\n      amount_partially_paid: event.target.value,\n      amount_due: this.invoice.amount_due - event.target.value\n    });\n  }\n\n  getDiscount(event: any) {\n    this.invoiceDetailForm.patchValue({\n      total: this.invoiceDetailForm.value.amount_due - event.target.value\n    });\n  }\n\n  updatePayments() {\n    let total = 0;\n    _.each(this.allProductsAdd, (item) => {\n      let product = _.findWhere(this.productList, {_id: item});\n      total += product.rate;\n    });\n\n    this.invoiceDetailForm.patchValue({\n      total: total,\n      discount: 0,\n      amount_due: total\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-edit/invoice-edit.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#invoice_box {\\n  background-color: #fff;\\n  font-size: 20px;\\n  padding-left: 20px;\\n  padding-right: 20px;\\n}\\n\\n#invoice_table {\\n  background-color: #fff;\\n  font-size: 20px;\\n}\\n\\n#company_logo {\\n  margin-top: 50px;\\n  margin-left: 10px;\\n  width: 210px;\\n  height: 180px;\\n}\\n\\n.row-divide {\\n  border-bottom: 4px solid #d2d6de;\\n}\\n\\n#invoice_box {\\n  font-weight: 550;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-html/invoice-html.component.css\n// module id = ../../../../../src/app/invoice/invoice-html/invoice-html.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 2000px;margin-left: 0vw;\\\">\\n  <section class=\\\" content-header\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        Invoice Display\\n      </h1>\\n      <ol class=\\\"breadcrumb \\\">\\n        <li><a [routerLink]=\\\"[ '/dashboard/home' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Sofkul</a></li>\\n        <li><a [routerLink]=\\\"[ '/dashboard/invoice/all' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Invoice</a></li>\\n        <li class=\\\"active \\\">Display</li>\\n      </ol>\\n    </div>\\n  </section>\\n  <section class=\\\"content \\\" *ngIf=\\\"invoice\\\">\\n    <div class=\\\"col-xs-12\\\" id=\\\"invoice_main\\\">\\n      <div id=\\\"invoice_body\\\">\\n        <!--invoice display starts here-->\\n        <div class=\\\"\\\" id=\\\"invoice_box\\\" style=\\\"margin-top:10px\\\" #invoiceBox>\\n          <!--head row-->\\n          <div class=\\\"row \\\">\\n            <!--left section-->\\n            <div class=\\\"col-md-6\\\">\\n              <img src=\\\"/assets/dist/img/Aquality.jpg\\\" style=\\\"width:40%; height:50%;\\\" id=\\\"company_logo\\\">\\n            </div>\\n            <!--right section-->\\n            <div class=\\\"col-md-offset-2 col-md-4\\\" style=\\\"text-align: -webkit-left; margin-top:8px;\\\">\\n              <h3 style=\\\"font-size: 60px;\\\"></h3><br>\\n\\n            </div>\\n\\n            \\n              <div class=row style=\\\"background-color:darkslategray; margin-top:150px; width:100%; height:200px;margin-left: 0vw;\\\">\\n                <div class=\\\"col-md-4 col-xs-4\\\" >\\n                  <div class=\\\"\\\" style=\\\"color:white; margin-left:40px;margin-top:20px; padding:10px; font-size:16px; \\\">\\n                      <span> Invoice for: </span><br>\\n                      <strong> {{ invoice.customerData?.fullname }} </strong><br>\\n                      <!--<span> {{ invoice.customerData?.location }} </span><br>-->\\n                      <span> {{ invoice.customerData?.city }} </span><br>\\n                      <span> India </span>\\n                      <span> {{ invoice.customerData?.mobile_primary }} </span><br>\\n                      <span> {{ invoice.customerData?.email }} </span><br>\\n                      <!--<span> {{ invoice.customerData?.area }} </span><br>-->\\n                      </div>\\n                </div>\\n                <div class=\\\"col-md-offset-2 col-md-6 col-xs-2\\\">\\n                  <div style=\\\"padding-top:40px;\\\">\\n                    <span style=\\\"color:rgb(245, 163, 10); font-size:70px;\\\">INVOICE</span>\\n                    </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\" style=\\\"margin-left: 0vw; background-color:black;width:100%;color:#fff; height:60px; text-align: -webkit-center; font-size:15px;\\\">\\n                <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\" >\\n                    <span> Date: {{ invoice.created_on | date }} </span>\\n                </div>\\n                <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                    <span> Valid upto: DD/MM/YYYY</span>\\n                  </div>\\n                  <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                      <span> Invoice ref: #123456</span>\\n                    </div>\\n              </div>\\n              <div class=\\\"row\\\" style=\\\"margin-left: 0vw; background-color:black;width:100%;color:#fff; height:60px; text-align: -webkit-center; font-size:15px;\\\">\\n                  <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\" >\\n                      \\n                      <span> <strong>Invoice Number: </strong> #001</span>\\n                  </div>\\n                  <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                      <span> <strong>Mobile Number: </strong> {{ invoice.customerData?.mobile_primary }}</span>\\n                    </div>\\n                    <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                        <span> <strong>Prepared by: </strong> Aquality</span><br>\\n                    \\n                  \\n                      </div>\\n                </div>\\n\\n              <!--table-->\\n              <div id=\\\"invoice_table\\\">\\n              <table class=\\\"table table-hover table-responsive\\\" *ngIf=\\\"invoice.productData\\\" style=\\\"width:100%; height:200px;margin-left: 0vw;\\\" >\\n                  <thead style=\\\"background-color:rgb(245, 163, 10); color:#fff;\\\">\\n                    <tr>\\n                      <th>ITEM DESCRIPTION</th>\\n                      <th>UNIT PRICE</th>\\n                      <th>GST</th>\\n                      <TH>HSN CODE</TH>\\n                      \\n                      \\n                      <th style=\\\"padding-left:200px;\\\">QUANTITY</th>\\n                      <th style=\\\"padding-left:100px;\\\">AMOUNT</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let product of invoice.productData;let i=index\\\"\\n                    [ngClass]=\\\"i==invoice.productData.length-1 ? 'row-divide' : '' \\\">\\n                    <td>{{ product?.name }}</td>\\n                    <td>INR. {{ product?.rate }}</td>\\n                    <td> {{ product?.vat }}%</td>\\n                    <td></td>\\n                    \\n                    \\n                      <td style=\\\"padding-left:200px; width:30%;\\\">1</td>\\n                      <td style=\\\"padding-left:100px; background-color:#ffe6e6; width:20%;\\\">INR. {{ product?.amount_with_vat * 1 }}</td>\\n                    </tr>\\n                    <tr>\\n                        <td></td>\\n                        <td></td>\\n                        <td></td>\\n                        <td></td>\\n                        \\n                        <td style=\\\"padding-left:200px;\\\">\\n                          <strong>SUB TOTAL: </strong>\\n                        </td>\\n                        <td style=\\\"padding-left:100px; background-color:#ffe6e6;width:20%;\\\">\\n                          INR. {{ invoice.total }}\\n                        </td>\\n                      </tr>\\n\\n                      <tr *ngFor=\\\"let x of invoice?.amount_partially_paid;let i = index\\\">\\n                          <td></td>\\n                          \\n                        \\n                          <td>\\n                            <strong>Payment On : {{ x.date | date }} </strong>\\n                          </td>\\n                          <td>\\n                            INR. {{ x.amount }}\\n                          </td>\\n                        </tr>\\n            \\n                        <tr>\\n                          <td></td>\\n                          <td></td>\\n                          <td></td>\\n                          <td></td>\\n                          \\n                          <td style=\\\"padding-left:200px;\\\">\\n                           Adjustments\\n                          </td>\\n                          <td style=\\\"padding-left:100px; background-color:#ffe6e6;\\\">\\n                            INR. {{ invoice.discount }}\\n                          </td>\\n\\n                        </tr>\\n                  \\n                          \\n                            \\n\\n                           <!--<tr>\\n                                <td></td>\\n                                <td></td>\\n                                <td></td>\\n                                <td></td>\\n                                \\n                                <td style=\\\"background-color:darkslategray; color:#fff;padding-left:200px;\\\">\\n                                  GRAND TOTAL\\n                                </td>\\n                                <td style=\\\"background-color:rgb(245, 163, 10); color:#fff;padding-left:100px; \\\">\\n                                  INR. {{ invoice.total }}\\n                                </td>\\n      \\n                              </tr>-->\\n                        <tr *ngIf=\\\"invoice.status == 'Paid'\\\">\\n                          <td></td>\\n                          <td></td>\\n                          <td></td>\\n                          <td></td>\\n                          <td style=\\\"background-color:darkslategray; color:#fff;padding-left:200px;\\\">\\n                            <strong>Amount Paid (INR)</strong>\\n                          </td>\\n                          <td style=\\\"background-color:rgb(245, 163, 10); color:#fff;padding-left:100px;\\\">\\n                            <strong>INR. {{ invoice.total - invoice.discount }}</strong>\\n                          </td>\\n                        </tr>\\n\\n                        <tr *ngIf=\\\"invoice.status == 'Due'\\\">\\n                          <td></td>\\n                          <td></td>\\n                          <td></td>\\n                          <td></td>\\n                          <td style=\\\"background-color:red; color:#fff; padding-left: 200px;\\\">\\n                            <strong>Amount Due (INR)</strong>\\n                          </td>\\n                          <td style=\\\"padding-left:100px; background-color:red; color:#fff;\\\">\\n                            <strong>INR. {{ finalTotal }}</strong><br>\\n                          </td>\\n                        </tr>\\n                        \\n                        <tr>\\n                          <td></td>\\n                          <td></td>\\n                          <td></td>\\n                          <td></td>\\n                        \\n                          <td style=\\\"background-color:darkslategray; color:#fff; padding-left:200px;\\\">\\n                            <strong>TOTAL(in words)</strong>\\n                          </td>\\n                          <td style=\\\"background-color:rgb(245, 163, 10); color:#fff;\\\">\\n                            <strong style=\\\"text-transform: capitalize;\\\"> {{ finalTotalWords }} INR only</strong>\\n                          </td>\\n                        </tr>\\n                    \\n                  </tbody>\\n                </table>\\n                </div>\\n                \\n                        \\n                      <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6 col-xs-6\\\">\\n                      <h3 class=\\\"well\\\">Bank Details</h3>\\n                       <div class=\\\"table-responsive\\\">          \\n                    <table class=\\\"table table-hover\\\">\\n                      <thead>\\n                        <tr>\\n                          <th></th>\\n                          <th>AQUALITY Water Solutions Pvt Ltd</th>\\n                        </tr>\\n                      </thead>\\n                      <tbody>\\n                        <tr>\\n                          \\n                          <td></td>\\n                          <td>A/c No.</td>\\n                          <td><strong>111 905 000 338</strong></td>\\n                        </tr>\\n                        <tr>\\n                          \\n                          <td></td>\\n                          <td>Bank</td>\\n                          <td><strong>ICICI Bank - Filmnagar Br.</strong></td>\\n                        </tr>\\n                        <tr>\\n                          \\n                          <td></td>\\n                          <td>IFSC Code</td>\\n                          <td><strong>ICIC 000 1119</strong></td>\\n                        </tr>\\n                      </tbody>\\n                    </table>\\n                          \\n                  </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-6 col-xs-6\\\" style=\\\"margin-top:50px;\\\">\\n                    <div style=\\\"text-align: -webkit-center; margin-top:20%; \\\">\\n                       Name & Signature\\n                    </div>\\n                  </div>\\n                  </div><br> <br>\\n                  \\n\\n                 <div class=\\\"container-fluid\\\" style=\\\"background-color:none;\\\">\\n                  <div class=\\\"footer\\\">\\n                    <p><strong>THANK YOU FOR YOUR BUSINESS</strong> </p><hr>\\n                    <div class=\\\"footer-header\\\">\\n                      TERMS AND CONDITION\\n\\n                    </div>\\n                  </div>\\n\\n                 </div>\\n          \\n\\n            <!--<div class=\\\"col-md-6\\\" style=\\\"text-align: -webkit-left\\\">\\n\\n              <div>\\n                <strong>Aquality Water Solutions Pvt Ltd.</strong><br>\\n                <span># 8-1-284/OU/385/1&2, 4th Floor Bait-ul-Rida</span><br>\\n                <span>OU Colony Shaikpet, Lanco hills Lane</span><br>\\n                <span>Hyderabad, Telangana State - 500008</span><br>\\n                <span>India</span><br><br>\\n\\n                <span>Phone: +91 40 6888 8486</span><br>\\n                <span>Mobile: 709 389 8486</span><br>\\n                <span>www.aquality.in</span>\\n                <span>Email: accounts@aquality.in  | info@aquality.in</span>\\n                <span></span>\\n              </div>\\n            </div>\\n      \\n            \\n                <div class=\\\"col-md-offset-2 col-md-4\\\" style=\\\"text-align: -webkit-left;line-height: 2;\\\">\\n                    <span> <strong>Date: </strong> {{ invoice.created_on | date }} </span><br>\\n                    <span> <strong>Invoice ref: </strong> #123456</span><br><br>\\n                    \\n                  \\n                    <span> <strong>Valid upto: </strong> DD/MM/YYYY</span><br>\\n                    <span> <strong>Prepared by: </strong> Aquality</span><br>\\n                    <span> <strong>Mobile Number: </strong> {{ invoice.customerData?.mobile_primary }}</span><br>\\n                  <span> <strong>Invoice Number: </strong> #001</span><br>\\n                  <span> <strong>Invoice Date: </strong> {{ invoice.created_on | date }} </span><br>\\n                  <span> <strong>Payment Due: </strong> {{ invoice.created_on | date }}</span> <br>\\n                  <span> <strong>Amount Due (INR): </strong> INR. {{ invoice.amount_due }}</span><br>\\n                </div>-->\\n\\n                \\n              \\n          </div>\\n          <hr>\\n\\n          <!--middle row-->\\n          \\n          \\n        </div>\\n        <!--table section-->\\n        \\n      </div>\\n      <div style=\\\"margin-top:15px\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"downloadPDF()\\\"><i class=\\\"fa fa-download\\\"\\n                                                                                 aria-hidden=\\\"true\\\"></i>&nbsp;Download\\n          as PDF\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\"><i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>&nbsp;Export\\n          as CSV\\n        </button>\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-html/invoice-html.component.html\n// module id = ../../../../../src/app/invoice/invoice-html/invoice-html.component.html\n// module chunks = main","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  Input,\n  SimpleChanges,\n  OnChanges,\n  AfterContentInit,\n  AfterViewInit\n} from '@angular/core';\n\nimport {InvoiceService} from '../invoice.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from \"rxjs\";\nimport {Invoice} from '../invoice';\nimport {CustomerService} from '../../customer/customer.service';\nimport {ProductService} from '../../product/product.service';\nimport {GeneralService} from '../../general/general.service';\nimport * as _ from 'underscore';\nimport {DatePipe} from '@angular/common';\nimport {UploadService} from '../../upload.service';\n\ndeclare let jsPDF;\ndeclare let html2canvas;\n\n@Component({\n  selector: 'app-invoice-html',\n  templateUrl: './invoice-html.component.html',\n  styleUrls: ['./invoice-html.component.css']\n})\nexport class InvoiceHtmlComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('invoiceBox') invoiceBox: ElementRef;\n  @Input() autoInvoice: any;\n  private id: any;\n  private subscription: Subscription;\n  public invoice: Invoice;\n  private type = '';\n  private finalTotal;\n  private finalTotalWords;\n  public currentDate: number = Date.now();\n  public datePipe: DatePipe = new DatePipe('en-US');\n  public tempInvoice: Invoice;\n  public isAutoInvoice: boolean = false;\n\n  constructor(private generalService: GeneralService, private productService: ProductService, private customerService: CustomerService, private invoiceService: InvoiceService, private route: ActivatedRoute) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['autoInvoice']) {\n      this.isAutoInvoice = true;\n      this.tempInvoice = changes['autoInvoice'].currentValue;\n    }\n  }\n\n  ngOnInit() {\n    this.generalService.displaySidebar(false);\n    this.subscription = this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.type = params['type'];\n      if (!this.isAutoInvoice) {\n        this.getInvoiceById(params['id']);\n      } else {\n        this.invoice = this.tempInvoice;\n        this.invoice['created_on'] = this.currentDate;\n        this.finalTotal = this.invoice.amount_due - this.invoice.discount;\n        this.finalTotalWords = this.numberToEnglish(this.invoice.total, '');\n      }\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    // if (this.isAutoInvoice) {\n    //   this.downloadPDF();\n    //\n    // }\n  }\n\n  ngAfterViewInit(){\n    if (this.isAutoInvoice) {\n      this.downloadPDF();\n    }\n  }\n\n  downloadPDF() {\n    html2canvas(document.getElementById('invoice_body'), {\n      onrendered: (canvas) => {\n        var imgData = canvas.toDataURL(\"image/jpeg\", 1.0);\n        var pdf = new jsPDF(\"p\", \"mm\", \"a4\");\n        pdf.addImage(imgData, 'JPEG', 0, 0, 210, 200);\n        if (this.isAutoInvoice) {\n          var pdf = pdf.output('datauristring');\n          let data = {\n            pdf: pdf,\n            label: this.invoice.customerData.username + \"_\" + this.datePipe.transform(Date.now(), 'MMMM')\n          }\n\n          console.log(data);\n\n          this.invoiceService.saveAutoInvoice(data)\n            .subscribe(\n              (res) => {\n                console.log(res);\n              },\n              (err) => {\n                console.log(\"Error in auto pilot\");\n              }\n            )\n        } else {\n          pdf.save(this.invoice.customerData.username + \"_\" + this.datePipe.transform(Date.now(), 'MMMM') + \".pdf\");\n        }\n      }\n    });\n  }\n\n\n  \n\n  getInvoiceById(id: string) {\n    this.invoiceService.getInvoiceById(this.type, id)\n      .subscribe(\n        (res) => {\n          this.invoice = res;\n          this.invoice.total = 0;\n          this.invoice.productData = [];\n          // get product data\n          _.each(this.invoice.productList, (item) => {\n            this.productService.getProductById(item)\n              .subscribe(\n                (res) => {\n                  res['amount_with_vat'] = res['rate'] + (res['rate'] * (res['vat'] / 100));\n                  this.invoice.productData.push(res);\n                  this.invoice.total = this.invoice.total + res['amount_with_vat'];\n                  this.invoice.amount_due = this.invoice.total;\n                }, (err) => {\n\n                }, () => {\n                  if (this.invoice.amount_partially_paid.length > 0) {\n                    _.each(this.invoice.amount_partially_paid, (data) => {\n                      this.invoice.amount_due = this.invoice.amount_due - data['amount'];\n                    });\n                  }\n                  if (this.invoice.status == 'Paid') {\n                    this.invoice.amount_due = 0;\n                  }\n                  this.finalTotal = this.invoice.amount_due - this.invoice.discount;\n                  this.finalTotalWords = this.numberToEnglish(this.invoice.total, '');\n                }\n              )\n          });\n\n\n          //get customer data\n          this.customerService.getCustomerDetails(this.invoice.customer_id)\n            .subscribe(\n              (res) => {\n                this.invoice.customerData = res;\n              },\n              (err) => {\n\n              },\n              () => {\n                console.log(this.invoice);\n              }\n            )\n        },\n        (err) => {\n          console.log(err);\n        }\n      )\n  }\n\n  numberToEnglish(n, custom_join_character) {\n\n    var string = n.toString(),\n      units, tens, scales, start, end, chunks, chunksLen, chunk, ints, i, word, words;\n\n    var and = custom_join_character || 'and';\n\n    /* Is number zero? */\n    if (parseInt(string) === 0) {\n      return 'zero';\n    }\n\n    /* Array of units as words */\n    units = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\n\n    /* Array of tens as words */\n    tens = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\n\n    /* Array of scales as words */\n    scales = ['', 'thousand', 'million', 'billion', 'trillion', 'quadrillion', 'quintillion', 'sextillion', 'septillion', 'octillion', 'nonillion', 'decillion', 'undecillion', 'duodecillion', 'tredecillion', 'quatttuor-decillion', 'quindecillion', 'sexdecillion', 'septen-decillion', 'octodecillion', 'novemdecillion', 'vigintillion', 'centillion'];\n\n    /* Split user arguemnt into 3 digit chunks from right to left */\n    start = string.length;\n    chunks = [];\n    while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n    }\n\n    /* Check if function has enough scale words to be able to stringify the user argument */\n    chunksLen = chunks.length;\n    if (chunksLen > scales.length) {\n      return '';\n    }\n    /* Stringify each integer in each chunk */\n    words = [];\n    for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n      if (chunk) {\n        /* Split chunk into array of individual integers */\n        ints = chunks[i].split('').reverse().map(parseFloat);\n\n        /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n        if (ints[1] === 1) {\n          ints[0] += 10;\n        }\n\n        /* Add scale word if chunk is not zero and array item exists */\n        if ((word = scales[i])) {\n          words.push(word);\n        }\n\n        /* Add unit word if array item exists */\n        if ((word = units[ints[0]])) {\n          words.push(word);\n        }\n\n        /* Add tens word if array item exists */\n        if ((word = tens[ints[1]])) {\n          words.push(word);\n        }\n\n        /* Add 'and' string after units or tens integer if: */\n        if (ints[0] || ints[1]) {\n          /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n          if (ints[2] || !i && chunksLen) {\n            words.push(and);\n          }\n        }\n\n        /* Add hundreds word if array item exists */\n        if ((word = units[ints[2]])) {\n          words.push(word + ' hundred');\n        }\n      }\n    }\n    return words.reverse().join(' ');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-html/invoice-html.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-recent/invoice-recent.component.css\n// module id = ../../../../../src/app/invoice/invoice-recent/invoice-recent.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 1800px;\\\">\\n\\n  <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isInvoiceSaved\\\">Invoice Data Saved Successfully !!</div>\\n  <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isInvoiceError\\\">ERROR !! Please Try Again.</div>\\n\\n  <section class=\\\"content-header\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        Recent Invoices\\n        <small><em> Generated for the month of {{ currentDate | date: 'MMMM' }} </em></small>\\n      </h1>\\n      <ol class=\\\"breadcrumb\\\">\\n        <li><a [routerLink]=\\\"[ '/' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> InvoiceApp</a></li>\\n        <li><a [routerLink]=\\\"[ '/' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Invoice</a></li>\\n        <li class=\\\"active\\\">Recent</li>\\n      </ol>\\n\\n      <div class=\\\"alert alert-warning\\\" *ngIf=\\\"showRemoveConfirmation && delInvoice\\\">\\n        <h4>\\n          <strong>Delete Confirmation !!</strong> <br>\\n          Delete the invoice for <em>{{ delInvoice.customerData?.username }} </em> ?\\n        </h4>\\n        <br>\\n        <button class=\\\"btn btn-success btn-sm\\\" (click)=\\\"removeConfirmation(true)\\\">YES</button>\\n        <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeConfirmation(false)\\\">NO</button>\\n      </div>\\n\\n    </div>\\n  </section>\\n\\n  <section class=\\\"content\\\">\\n\\n    <!--  Page Content Here -->\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"box box-primary\\\">\\n        <div class=\\\"box-header\\\" style=\\\"margin-top: 20px;margin-bottom: 20px;\\\">\\n          <h3 class=\\\"box-title\\\">Recent Invoice List</h3>\\n          <br>\\n          <div class=\\\"box-tools\\\">\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-offset-2 col-lg-4\\\">\\n                Filter : &nbsp;\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"All\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">All</label>\\n\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Paid\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Paid</label>\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Due\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Due</label>\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Partially Paid\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Partially Paid</label>\\n              </div>\\n              <div class=\\\"col-lg-6\\\" style=\\\"float:right\\\">\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-btn\\\">\\n                    <select style=\\\"font-size: 15px;height: 34px;\\\" (change)=\\\"filterChange($event.target.value)\\\">\\n                      <option value=\\\"username\\\">Username</option>\\n                      <option value=\\\"mobile_number\\\">Mobile Number</option>\\n                      <option value=\\\"area\\\">Area</option>\\n                    </select>\\n                  </div>\\n                  <!-- /btn-group -->\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"...\\\" placeholder=\\\"Search Recent Invoices\\\"\\n                         (input)=\\\"quickSearch($event.target.value)\\\">\\n                </div>\\n                <!-- /input-group -->\\n              </div>\\n            </div>\\n            <br><br>\\n            <!-- /.row -->\\n            <!-- /.row -->\\n          </div>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body table-responsive no-padding\\\" *ngIf=\\\"invoiceList\\\">\\n\\n          <br>\\n          <div class=\\\"col-md-offset-4\\\">\\n            <pagination-controls (pageChange)=\\\"onPaginate($event);p=$event\\\"></pagination-controls>\\n          </div>\\n          <br>\\n\\n          <table class=\\\"table table-hover\\\">\\n            <tbody>\\n            <tr>\\n              <th>Username</th>\\n              <th>Fullname</th>\\n              <th>Mobile</th>\\n              <th>Area</th>\\n              <th>Product</th>\\n              <th>Due (INR)</th>\\n              <th>Paid (INR)</th>\\n              <th>Total (INR)</th>\\n              <th>Status</th>\\n              <th>Transaction Date</th>\\n              <th>Change Status</th>\\n              <th>Action</th>\\n            </tr>\\n            <tr\\n              *ngFor=\\\"let invoice of invoiceList | paginate: { itemsPerPage: 30, currentPage: p, totalItems:totalCustomerCount }\\\">\\n              <td>{{ invoice.customerData?.username }}</td>\\n              <td>{{ invoice.customerData?.fullname }}</td>\\n              <td>{{ invoice.customerData?.mobile_primary }}</td>\\n              <td>{{ invoice.customerData?.areaData?.name }}</td>\\n              <!--<td><span *ngIf=\\\"invoice.customerData?.productData?.length>0\\\"> {{ invoice.customerData?.productData[0]?.name }} - <em *ngIf=\\\"invoice.customerData?.productData[0]?.rate\\\">{{ invoice.customerData?.productData[0]?.rate }} INR/month</em> </span>\\n                  <small class=\\\"label bg-blue\\\">{{ invoice.customerData?.productData.length }}</small>\\n              </td>-->\\n              <td>\\n                <small class=\\\"label bg-blue\\\">{{ invoice.customerData?.productData?.length }}</small>\\n              </td>\\n              <td>{{ invoice?.amount_due }}</td>\\n              <td>{{ invoice?.total - invoice?.amount_due }}</td>\\n              <td>{{ invoice?.total }}</td>\\n              <td>\\n                <label class=\\\"label label-danger\\\" *ngIf=\\\"invoice.status=='Due'\\\"> {{ invoice.status }} </label>\\n                <label class=\\\"label label-success\\\" *ngIf=\\\"invoice.status=='Paid'\\\"> {{ invoice.status }} </label>\\n                <label class=\\\"label label-warning\\\" *ngIf=\\\"invoice.status=='Partially Paid'\\\"> {{ invoice.status\\n                  }} </label>\\n              </td>\\n              <td *ngIf=\\\"invoice?.status=='Due' || invoice?.status=='Partially Paid'\\\">\\n                {{ invoice?.payment_due_date | date }}\\n              </td>\\n              <td *ngIf=\\\"invoice?.status=='Paid'\\\">\\n                {{ invoice?.paid_date | date }}\\n              </td>\\n              <td>\\n                <button class=\\\"btn btn-success btn-xs\\\" (click)=\\\"changeStatus('Paid',invoice)\\\"> Paid</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"changeStatus('Partially Paid',invoice)\\\"\\n                        data-toggle=\\\"modal\\\" data-target=\\\"#partiallyPaymentModal\\\"> Partially Paid\\n                </button>\\n                <button class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"changeStatus('Due',invoice)\\\"> Due</button>\\n              </td>\\n              <td>\\n                <a type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\"\\n                   [routerLink]=\\\"['/dashboard/invoice/view','recent',invoice?._id]\\\"> View</a>\\n                <!--<button class=\\\"btn btn-xs btn-danger\\\" (click)=\\\"remove(invoice)\\\"><i class=\\\"fa fa-times\\\"-->\\n                <!--aria-hidden=\\\"true\\\"></i></button>-->\\n              </td>\\n\\n              <!-- Modal for Partially payment -->\\n              <div class=\\\"modal fade\\\" id=\\\"partiallyPaymentModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n                   aria-labelledby=\\\"myModalLabel\\\">\\n                <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                  <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span\\n                        aria-hidden=\\\"true\\\">&times;</span></button>\\n                      <h2 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Partially Payment</h2>\\n                    </div>\\n                    <div class=\\\"modal-body\\\" *ngIf=\\\"partialInvoice\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                          <h4 style=\\\"text-align: center\\\">Total: {{ partialInvoice?.total }} INR</h4>\\n                          <h4 style=\\\"text-align: center\\\">Due: {{ partialInvoice?.amount_due }} INR</h4>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                          <div *ngFor=\\\"let x of partialInvoice?.amount_partially_paid\\\">\\n                            <h4 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} INR</h4>\\n                            <h4 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} INR</h4>\\n                            <br>\\n                          </div>\\n\\n                        </div>\\n                      </div>\\n                      <br>\\n                      <form class=\\\"form-horizontal\\\" *ngIf=\\\"partialInvoice\\\">\\n                        <!--amoount partially paid-->\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid\\n                            (INR) </label>\\n                          <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"text\\\" name=\\\"partialPay\\\" [(ngModel)]=\\\"partialPay\\\" class=\\\"form-control \\\"\\n                                   id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">\\n                          </div>\\n                        </div>\\n                      </form>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                      <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>-->\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePartialPay()\\\"\\n                              data-dismiss=\\\"modal\\\">Save changes\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </tr>\\n            </tbody>\\n\\n          </table>\\n        </div>\\n        <!-- /.box-body -->\\n      </div>\\n      <!-- /.box -->\\n      <div class=\\\"col-md-offset-4\\\">\\n        <pagination-controls (pageChange)=\\\"onPaginate($event);p=$event\\\"></pagination-controls>\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-recent/invoice-recent.component.html\n// module id = ../../../../../src/app/invoice/invoice-recent/invoice-recent.component.html\n// module chunks = main","import {Router} from '@angular/router';\nimport {Product} from '../../product/product';\nimport {Component, OnInit} from '@angular/core';\nimport {InvoiceService} from '../invoice.service';\nimport {Customer} from '../../customer/customer';\nimport * as _ from 'underscore';\nimport {Invoice} from '../invoice';\nimport {ProductService} from '../../product/product.service';\nimport {AreaService} from '../../area/area.service';\nimport {CustomerService} from '../../customer/customer.service';\n\n@Component({\n  selector: 'app-invoice-recent',\n  templateUrl: './invoice-recent.component.html',\n  styleUrls: ['./invoice-recent.component.css']\n})\nexport class InvoiceRecentComponent implements OnInit {\n  public currentDate: number = Date.now();\n  public invoiceList: Invoice[] = [];\n  public searchMode = 'username';\n  public partialInvoice: Invoice;\n  public paymentStatus: string;\n  public partialPay: any;\n  public isInvoiceSaved: boolean = false;\n  public isInvoiceError: boolean = false;\n  public showRemoveConfirmation: boolean = false;\n  public delInvoice: any;\n  public paginator = 1;\n  totalCustomerCount: number = 0;\n\n  constructor(private customerService: CustomerService, private router: Router, private invoiceService: InvoiceService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  ngOnInit() {\n    this.customerService.getTotalCustomerCount()\n      .subscribe(\n        (res) => {\n          this.totalCustomerCount = res.count;\n        }\n      )\n    this.getRecentInvoiceDB();\n    // this.wakeUpInvoiceDemon();\n  }\n\n  //useless shitty method\n  wakeUpInvoiceDemon() {\n    this.invoiceService.cleanInvoice()\n      .subscribe(\n        (res) => {\n          if (res.status) {\n            this.generateNewInvoice();\n          } else {\n            this.getRecentInvoiceDB();\n          }\n        }\n      )\n  }\n\n  //useless shitty method\n  generateNewInvoice() {\n    this.invoiceService.dropRecentInvoice()\n      .subscribe(\n        (res) => {\n          this.buildAndSaveRecentInvoice();\n        }\n      )\n  }\n\n  getRecentInvoiceDB() {\n    this.invoiceList = [];\n    this.invoiceService.getRecentInvoiceDB(this.paginator)\n      .subscribe(\n        (res: Invoice[]) => {\n          _.each(res, (invoice: Invoice) => {\n            let customer: Customer;\n            this.customerService.getCustomerDetails(invoice.customer_id)\n              .subscribe(\n                (res: Customer) => {\n                  if (res['status']) {\n                    customer = res;\n                    customer.productData = [];\n                    if (invoice.productList.length > 0) {\n                      _.each(invoice.productList, (element) => {\n                        this.productService.getProductById(element)\n                          .subscribe(\n                            (res: Product) => {\n                              customer[\"productData\"].push(res);\n                            }\n                          )\n                      });\n                    }\n                    this.areaService.getAreaById(customer.area)\n                      .subscribe(\n                        (res) => {\n                          customer[\"areaData\"] = res;\n                        },\n                      )\n                    invoice.customerData = customer;\n                    this.invoiceList.push(invoice);\n                  }\n                }\n              )\n          });\n        },\n        (err) => {\n\n        },\n        () => {\n          for (let i = 0; i < this.invoiceList.length; i++) {\n            console.log(\"Hello World\");\n          }\n        }\n      )\n  }\n\n  buildAndSaveRecentInvoice() {\n    this.invoiceService.buildAndSaveRecentInvoice()\n      .subscribe(\n        (res) => {\n          this.getRecentInvoiceDB();\n        },\n        (err) => {\n          console.log('Error in build and save');\n        }\n      )\n  }\n\n  saveRecentInvoice(invoice: Invoice) {\n    this.invoiceService.saveRecentInvoice(invoice)\n      .subscribe(\n        (res) => {\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  filterChange(event: any) {\n    this.searchMode = event;\n  }\n\n  quickSearch(event: any) {\n    if (event == '') {\n      this.getRecentInvoiceDB();\n      return;\n    }\n    let reg = new RegExp(event, \"i\");\n    let resArray = [];\n    if (this.searchMode == 'username') {\n      _.each(this.invoiceList, (item) => {\n        if (reg.test(item['customerData']['username'])) {\n          resArray.push(item);\n        }\n      });\n      this.invoiceList = resArray;\n    }\n    else if (this.searchMode == 'mobile_number') {\n      _.each(this.invoiceList, (item) => {\n        if (reg.test(item['customerData']['mobile_primary'])) {\n          resArray.push(item);\n        }\n      });\n      this.invoiceList = resArray;\n    }\n    else if (this.searchMode == 'area') {\n      _.each(this.invoiceList, (item) => {\n        if (reg.test(item['customerData']['areaData']['name'])) {\n          resArray.push(item);\n        }\n      });\n      this.invoiceList = resArray;\n    }\n  }\n\n  changeStatus(status: string, invoice: Invoice) {\n    if (status == 'Paid') {\n      this.setPaidDateCounter(invoice);\n      invoice.status = 'Paid';\n      invoice.paid_date = Date.now();\n      invoice.amount_due = 0;\n    } else if (status == 'Due') {\n      invoice.status = 'Due';\n      invoice.amount_due = invoice.total;\n      invoice.amount_partially_paid = [];\n    } else if (status == 'Partially Paid') {\n      this.partialInvoice = invoice;\n    }\n\n    invoice['type'] = 'recent';\n    this.invoiceService.changeInvoiceStatus(invoice)\n      .subscribe(\n        (res) => {\n        }\n      )\n  }\n\n  setPaidDateCounter(invoice: Invoice) {\n    this.invoiceService.setPaidDateCounter(invoice)\n      .subscribe(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          console.log(\"Error in setpaiddatecounter\");\n        }\n      )\n  }\n\n  toggleSearchStatus(event: any) {\n    this.getRecentInvoiceDB();\n    this.paymentStatus = event.target.value;\n    if (this.paymentStatus == 'All') {\n      return;\n    }\n    let resArray = [];\n    _.each(this.invoiceList, (item) => {\n      if (_.isEqual(item.status, this.paymentStatus)) {\n        resArray.push(item);\n      }\n    });\n    this.invoiceList = resArray;\n  }\n\n  savePartialPay() {\n    let data = {\n      id: this.partialInvoice['_id'],\n      amount_partially_paid: this.partialPay\n    }\n\n    this.invoiceService.savePartialPay(data)\n      .subscribe(\n        (res) => {\n          if (res['status']) {\n            this.partialPay = 0;\n            this.getRecentInvoiceDB();\n          }\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  remove(delInvoice) {\n    this.showRemoveConfirmation = true;\n    this.delInvoice = delInvoice;\n  }\n\n  removeConfirmation(status) {\n    if (status) {\n      this.invoiceService.deleteInvoice(this.delInvoice)\n        .subscribe(\n          (res) => {\n            if (res['status']) {\n              this.invoiceList = _.without(this.invoiceList, _.findWhere(this.invoiceList, {\n                _id: this.delInvoice['_id']\n              }));\n              this.showRemoveConfirmation = false;\n            }\n          },\n          (err) => {\n          }\n        )\n    } else {\n      this.delInvoice = undefined;\n      this.showRemoveConfirmation = false;\n    }\n  }\n\n  //  for pagination\n  onPaginate(event: any) {\n    this.paginator = event;\n    this.getRecentInvoiceDB();\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-recent/invoice-recent.component.ts","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nconst invoiceRoutes = [\n];\n@NgModule({\n    imports: [\n        RouterModule.forChild(invoiceRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class InvoiceRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-search/invoice-search.component.css\n// module id = ../../../../../src/app/invoice/invoice-search/invoice-search.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height:100vh\\\">\\n\\n  <div class=\\\"alert alert-warning\\\" *ngIf=\\\"showRemoveConfirmation && delInvoice\\\">\\n    <h4>\\n      <strong>Delete Confirmation !!</strong> <br>\\n      Delete the invoice for <em>{{ delInvoice.customerData?.username }} </em>  ?\\n    </h4>\\n    <br>\\n    <button class=\\\"btn btn-success btn-sm\\\" (click)=\\\"removeConfirmation(true)\\\">YES</button>\\n    <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeConfirmation(false)\\\">NO</button>\\n  </div>\\n\\n  <section class=\\\"content\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"box box-primary\\\">\\n        <h2 style=\\\"margin-left:10px\\\">Search Invoices of any customer</h2>\\n        <hr>\\n\\n        <!--search results for invoices show box-->\\n        <div class=\\\"box-body table-responsive no-padding\\\" style=\\\"margin-top:20px;margin-bottom: 20px\\\"\\n             *ngIf=\\\"invoiceList.length>0\\\">\\n          <table class=\\\"table table-hover\\\">\\n            <tbody>\\n            <tr>\\n              <th>Username</th>\\n              <th>Fullname</th>\\n              <th>Mobile</th>\\n              <th>Area</th>\\n              <th>Product</th>\\n              <th>Due (INR)</th>\\n              <th>Paid (INR)</th>\\n              <th>Total (INR)</th>\\n              <th>Status</th>\\n              <th>Invoice Generated On</th>\\n              <th>Last Transaction Date</th>\\n              <th>Change Status</th>\\n              <th>Action</th>\\n            </tr>\\n            <tr\\n              *ngFor=\\\"let invoice of invoiceList\\\">\\n              <td>{{ invoice.customerData?.username }}</td>\\n              <td>{{ invoice.customerData?.fullname }}</td>\\n              <td>{{ invoice.customerData?.mobile_primary }}</td>\\n              <td>{{ invoice.customerData?.areaData?.name }}</td>\\n\\n              <!--<td><span *ngIf=\\\"invoice.customerData?.productData?.length>0\\\"> {{ invoice.customerData?.productData[0]?.name }} - <em *ngIf=\\\"invoice.customerData?.productData[0]?.rate\\\">{{ invoice.customerData?.productData[0]?.rate }} INR/month</em> </span>\\n                  <small class=\\\"label bg-blue\\\">{{ invoice.customerData?.productData.length }}</small>\\n              </td>-->\\n\\n              <td>\\n                <small class=\\\"label bg-blue\\\">{{ invoice.customerData?.productData?.length }}</small>\\n              </td>\\n              <td>{{ invoice?.amount_due }}</td>\\n              <td>{{ invoice?.total - invoice?.amount_due }}</td>\\n              <td>{{ invoice?.total }}</td>\\n              <td>\\n                <label class=\\\"label label-danger\\\" *ngIf=\\\"invoice.status=='Due'\\\"> {{ invoice.status }} </label>\\n                <label class=\\\"label label-success\\\" *ngIf=\\\"invoice.status=='Paid'\\\"> {{ invoice.status }} </label>\\n                <label class=\\\"label label-warning\\\" *ngIf=\\\"invoice.status=='Partially Paid'\\\"> {{ invoice.status\\n                  }} </label>\\n              </td>\\n              <td>\\n                {{ invoice?.created_on | date: 'yMMMd' }}\\n              </td>\\n              <td *ngIf=\\\"invoice?.status=='Due' || invoice?.status=='Partially Paid'\\\">\\n                {{ invoice?.payment_due_date | date }}\\n              </td>\\n              <td *ngIf=\\\"invoice?.status=='Paid'\\\">\\n                {{ invoice?.paid_date | date }}\\n              </td>\\n              <td>\\n                <button class=\\\"btn btn-success btn-xs\\\" (click)=\\\"changeStatus('Paid',invoice)\\\"> Paid</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"changeStatus('Partially Paid',invoice)\\\"\\n                        data-toggle=\\\"modal\\\" data-target=\\\"#partiallyPaymentModal\\\"> Partially Paid\\n                </button>\\n                <button class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"changeStatus('Due',invoice)\\\"> Due</button>\\n              </td>\\n              <td>\\n                <a type=\\\"button\\\" *ngIf=\\\"invoice?.type=='recent'\\\" class=\\\"btn btn-primary btn-xs\\\"\\n                   [routerLink]=\\\"['/dashboard/invoice/view','recent',invoice?._id]\\\">\\n                  View</a>\\n                <a type=\\\"button\\\" *ngIf=\\\"invoice?.type!='recent'\\\" class=\\\"btn btn-primary btn-xs\\\"\\n                   [routerLink]=\\\"['/dashboard/invoice/view','all',invoice?._id]\\\">\\n                  View</a>\\n\\n                <button class=\\\"btn btn-xs btn-danger\\\" (click)=\\\"remove(invoice)\\\"><i class=\\\"fa fa-times\\\"\\n                                                                                   aria-hidden=\\\"true\\\"></i></button>\\n              </td>\\n\\n              <!-- Modal for Partially payment -->\\n              <div class=\\\"modal fade\\\" id=\\\"partiallyPaymentModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n                   aria-labelledby=\\\"myModalLabel\\\">\\n                <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                  <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span\\n                        aria-hidden=\\\"true\\\">&times;</span></button>\\n                      <h2 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Partially Payment</h2>\\n                    </div>\\n                    <div class=\\\"modal-body\\\" *ngIf=\\\"partialInvoice\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                          <h4 style=\\\"text-align: center\\\">Total: {{ partialInvoice?.total }} INR</h4>\\n                          <h4 style=\\\"text-align: center\\\">Due: {{ partialInvoice?.amount_due }} INR</h4>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                          <div *ngFor=\\\"let x of partialInvoice?.amount_partially_paid\\\">\\n                            <h4 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} INR</h4>\\n                            <h4 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} INR</h4>\\n                            <br>\\n                          </div>\\n\\n                        </div>\\n                      </div>\\n                      <br>\\n                      <form class=\\\"form-horizontal\\\" *ngIf=\\\"partialInvoice\\\">\\n                        <!--amoount partially paid-->\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid\\n                            (INR) </label>\\n                          <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"text\\\" name=\\\"partialPay\\\" [(ngModel)]=\\\"partialPay\\\" class=\\\"form-control \\\"\\n                                   id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">\\n                          </div>\\n                        </div>\\n                      </form>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                      <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>-->\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePartialPay(partialInvoice)\\\"\\n                              data-dismiss=\\\"modal\\\">Save changes\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </tr>\\n            </tbody>\\n\\n          </table>\\n        </div>\\n\\n        <!--search box and functionality-->\\n        <div class=\\\"container\\\">\\n          <div class=\\\"col-lg-12\\\">\\n            <form class=\\\"form-group\\\">\\n              <input style=\\\"width:100%\\\" (keyup)=\\\"getSearchText($event)\\\" id=\\\"search_form\\\" type=\\\"text\\\" class=\\\"\\\"\\n                     placeholder=\\\"Search for a customer\\\">\\n            </form>\\n\\n            <!--search resultsa-->\\n            <div *ngIf=\\\"searchResults.length>0\\\">\\n              <strong style=\\\"font-size: 20px\\\"> Search results: </strong> <span class=\\\"search_text\\\"\\n                                                                               style=\\\"color:blue;font-size: 20px\\\">{{ searchText }}</span>\\n              <br>\\n              <ul style=\\\"list-style-type:none\\\">\\n                <li *ngFor=\\\"let customer of searchResults\\\">\\n                 <span style=\\\"font-size: 20px\\\">\\n                   <a href=\\\"javascript:void(0)\\\" (click)=\\\"getSearchDetails(customer)\\\">\\n                   <em>{{ customer['username'] }}</em> - {{ customer['fullname']}}\\n                 </a>\\n                 </span>\\n                  <br>\\n                </li>\\n                <hr>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </section>\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-search/invoice-search.component.html\n// module id = ../../../../../src/app/invoice/invoice-search/invoice-search.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {Invoice} from '../invoice';\nimport {InvoiceService} from '../invoice.service';\nimport {Customer} from '../../customer/customer';\nimport {Product} from '../../product/product';\nimport {AreaService} from '../../area/area.service';\nimport {CustomerService} from '../../customer/customer.service';\nimport {ProductService} from '../../product/product.service';\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-invoice-search',\n  templateUrl: './invoice-search.component.html',\n  styleUrls: ['./invoice-search.component.css']\n})\nexport class InvoiceSearchComponent implements OnInit {\n  public searchText: string;\n  public searchResults: any[] = [];\n  public invoiceList: Invoice[] = [];\n  public partialInvoice: Invoice;\n  public partialPay: any;\n  public delInvoice: Invoice;\n  public showRemoveConfirmation: boolean = false;\n\n  constructor(private customerService: CustomerService, private invoiceService: InvoiceService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  ngOnInit() {\n  }\n\n\n  getSearchText(event: any) {\n    this.invoiceList = [];\n    this.searchResults = [];\n    this.searchText = event.target.value;\n    this.getGlobalInvoiceSearchByCustomer();\n  }\n\n\n  getGlobalInvoiceSearchByCustomer() {\n    this.invoiceService.globalInvoiceSearchByCustomer(this.searchText)\n      .subscribe(\n        (res) => {\n          this.searchResults = res;\n        }\n      )\n  }\n\n  getSearchDetails(data) {\n    let id = data['_id'];\n    this.invoiceList = [];\n    this.invoiceService.getInvoiceByCustomerId(id)\n      .subscribe(\n        (res) => {\n          _.each(res, (invoice: Invoice) => {\n            let customer: Customer;\n\n            if (invoice['type']=='') {\n              invoice['type'] = 'recent';\n            }\n\n            this.customerService.getCustomerDetails(invoice.customer_id)\n              .subscribe(\n                (res: Customer) => {\n                  customer = res;\n                  if (customer['status']) {\n                    customer.productData = [];\n                    if (invoice.productList.length > 0) {\n                      _.each(invoice.productList, (element) => {\n                        this.productService.getProductById(element)\n                          .subscribe(\n                            (res: Product) => {\n                              customer['productData'].push(res);\n                            }\n                          )\n                      })\n                    }\n\n                    this.areaService.getAreaById(customer.area)\n                      .subscribe(\n                        (res) => {\n                          customer['areaData'] = res;\n                        }\n                      )\n                    invoice.customerData = customer;\n                    this.invoiceList.push(invoice);\n                  }\n                }\n              )\n          })\n        },\n        (err) => {\n          console.log('Error in getSearchDetails');\n        }\n      )\n  }\n\n\n  changeStatus(status: string, invoice: Invoice) {\n    if (status == 'Paid') {\n      this.setPaidDateCounter(invoice);\n      invoice.status = 'Paid';\n      invoice.paid_date = Date.now();\n      invoice.amount_due = 0;\n    } else if (status == 'Due') {\n      invoice.status = 'Due';\n      invoice.amount_due = invoice.total;\n      invoice.amount_partially_paid = [];\n    } else if (status == 'Partially Paid') {\n      this.partialInvoice = invoice;\n    }\n\n    if (invoice['type'] != 'recent') {\n      invoice['type'] = 'all';\n    }\n    this.invoiceService.changeInvoiceStatus(invoice)\n      .subscribe(\n        (res) => {\n\n        }\n      )\n  }\n\n  setPaidDateCounter(invoice: Invoice) {\n    this.invoiceService.setPaidDateCounter(invoice)\n      .subscribe(\n        (res) => {\n          // console.log(res);\n        },\n        (err) => {\n          console.log(\"Error in setpaiddatecounter\");\n        }\n      )\n  }\n\n  savePartialPay(invoice: Invoice) {\n    let data = {\n      id: this.partialInvoice['_id'],\n      amount_partially_paid: this.partialPay\n    }\n\n    this.invoiceService.savePartialPay(data)\n      .subscribe(\n        (res) => {\n          if (res['status']) {\n            this.partialPay = 0;\n            this.getSearchDetails({_id: invoice.customer_id});\n          }\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  remove(invoice: Invoice) {\n    this.showRemoveConfirmation = true;\n    this.delInvoice = invoice;\n  }\n\n\n  removeConfirmation(status) {\n    if (status) {\n      this.invoiceService.deleteInvoice(this.delInvoice)\n        .subscribe(\n          (res) => {\n            if (res['status']) {\n              this.invoiceList = _.without(this.invoiceList, _.findWhere(this.invoiceList, {\n                _id: this.delInvoice['_id']\n              }));\n              this.showRemoveConfirmation = false;\n            }\n          },\n          (err) => {\n\n          }\n        )\n    } else {\n      this.delInvoice = undefined;\n      this.showRemoveConfirmation = false;\n    }\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice-search/invoice-search.component.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {Ng2PaginationModule} from 'ng2-pagination';\nimport {DialogModule} from 'primeng/primeng';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {InvoiceRoutingModule} from './invoice-routing.module';\nimport {InvoiceAllComponent} from './invoice-all/invoice-all.component';\nimport {InvoiceCreateComponent} from './invoice-create/invoice-create.component';\nimport {InvoiceService} from './invoice.service';\nimport {InvoiceRecentComponent} from './invoice-recent/invoice-recent.component';\nimport {ProductService} from '../product/product.service';\nimport {AreaService} from '../area/area.service';\nimport {InvoiceEditComponent} from './invoice-edit/invoice-edit.component';\nimport {InvoiceHtmlComponent} from './invoice-html/invoice-html.component';\nimport {CustomerService} from '../customer/customer.service';\nimport {GeneralService} from '../general/general.service';\nimport { InvoiceSearchComponent } from './invoice-search/invoice-search.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Ng2PaginationModule,\n    DialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InvoiceRoutingModule,\n  ],\n  declarations: [\n    InvoiceAllComponent,\n    InvoiceCreateComponent,\n    InvoiceRecentComponent,\n    InvoiceEditComponent,\n    InvoiceHtmlComponent,\n    InvoiceSearchComponent\n  ],\n  exports: [\n    InvoiceHtmlComponent\n  ],\n  providers: [\n    InvoiceService,\n    ProductService,\n    AreaService,\n    CustomerService,\n    GeneralService\n  ]\n})\nexport class InvoiceModule {\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice.module.ts","import {Injectable} from '@angular/core';\nimport {CustomHttpService} from \"../custom-http.service\";\nimport {environment} from \"../../environments/environment\";\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class InvoiceService {\n\n  private invoiceUrl = environment.api_server + 'invoice/';\n\n  constructor(private http: CustomHttpService) {\n  }\n\n  removeInvoice(invoice) {\n    let url = this.invoiceUrl + 'remove-invoice';\n    return this.http.post(url, invoice).map((res) => res.json());\n  }\n\n  getInvoiceByCustomerId(id) {\n    let url = this.invoiceUrl + 'by-customer-id/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  globalInvoiceSearchByCustomer(query) {\n    let url = this.invoiceUrl + 'global-search-by-customer/' + query;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  saveAutoInvoice(data) {\n    let url = this.invoiceUrl + 'save-auto-invoice';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  getAllInvoice(paginator) {\n    let url = this.invoiceUrl + 'all/page=' + paginator;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  getRecentInvoice() {\n    let url = this.invoiceUrl + 'recent';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  storeInvoice(data: any) {\n    let url = this.invoiceUrl + 'create';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  downloadPDF(data: any) {\n    let url = this.invoiceUrl + 'generate/pdf';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  getInvoiceById(type: string, id: string) {\n    let url = this.invoiceUrl + type + '/id/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  searchByUsername(data: any) {\n    let url = this.invoiceUrl + 'search/username/';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  saveRecentInvoice(data: any) {\n    let url = this.invoiceUrl + 'recent/save';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  dropRecentInvoice() {\n    let url = this.invoiceUrl + 'drop/recent/all';\n    return this.http.get(url).map(res => res.json());\n  }\n\n  checkIfRecentInvoiceExists() {\n    let url = this.invoiceUrl + 'recent_invoice/exists';\n    return this.http.get(url).map(res => res.json());\n  }\n\n  getRecentInvoiceDB(paginator: number) {\n    let url = this.invoiceUrl + 'recent_invoice_db/paginator=' + paginator;\n    return this.http.get(url).map(res => res.json());\n  }\n\n  cleanInvoice() {\n    let url = this.invoiceUrl + 'clean_invoice';\n    return this.http.get(url).map(res => res.json());\n  }\n\n  changeInvoiceStatus(data: any) {\n    let url = this.invoiceUrl + 'change_status';\n    return this.http.put(url, data).map((res) => res.json());\n  }\n\n  //get total of all products in product list\n  getTotal(data: any) {\n    let url = this.invoiceUrl + 'product_list/total';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  buildAndSaveRecentInvoice() {\n    let url = this.invoiceUrl + 'recent/build_and_save';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  savePartialPay(data: any) {\n    let url = this.invoiceUrl + 'recent/partial_pay/save';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  preGenerateInvoiceUpdate(data: any) {\n    let url = this.invoiceUrl + 'pre_generate_update';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  deleteInvoice(invoice) {\n    let url = this.invoiceUrl + 'delete';\n    return this.http.post(url, invoice).map((res) => res.json());\n  }\n\n  setPaidDateCounter(invoice) {\n    let url = this.invoiceUrl + 'set_paid_date_counter';\n    return this.http.post(url, invoice).map((res) => res.json());\n  }\n\n  getPaidDateCounter() {\n    let url = this.invoiceUrl + 'get_paid_date_counter';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  getAllInvoiceCount() {\n    let url = this.invoiceUrl + 'all_invoice_count';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  createNewInvoice(data: any) {\n    let url = this.invoiceUrl + 'create/new';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/invoice/invoice.service.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content-wrapper {\\n    min-height: 1200px;\\n    /*font-size: 20px;*/\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/product/product-all/product-all.component.css\n// module id = ../../../../../src/app/product/product-all/product-all.component.css\n// module chunks = main","module.exports = \"<section class=\\\"content-header\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h2>\\n      All Products\\n    </h2>\\n  </div>\\n</section>\\n<section class=\\\"content\\\">\\n  <!--  Page Content Here -->\\n  <div class=\\\"col-xs-12\\\">\\n    <div class=\\\"box box-primary\\\">\\n      <div class=\\\"box-header\\\">\\n        <h3 class=\\\"box-title\\\">List Of All Products</h3>\\n        <br>\\n      </div>\\n      <!-- /.box-header -->\\n      <div class=\\\"box-body table-responsive no-padding\\\">\\n        <table class=\\\"table table-hover\\\">\\n          <tbody>\\n          <tr>\\n            <th>Name</th>\\n            <th>Rate &nbsp;(INR/month)</th>\\n            <th>Quantity</th>\\n            <th>GST(%)</th>\\n            <th>Description</th>\\n            <th>Action</th>\\n\\n          </tr>\\n          <tr *ngFor=\\\"let product of products | paginate: { itemsPerPage: 10, currentPage: p }\\\">\\n            <td>{{ product.name }}</td>\\n            <td>{{ product.rate }}</td>\\n            <td>{{ product.quantity }}</td>\\n            <td>{{ product.vat }}</td>\\n            <td>{{ product.description }}</td>\\n            <td *ngIf=\\\"product.status\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\" (click)=\\\"toggleStatus(product._id,product.status)\\\"> Active</button>\\n            </td>\\n            <td *ngIf=\\\"!product.status\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"toggleStatus(product._id,product.status)\\\"> Inactive</button>\\n            </td>\\n            <td>\\n              <a type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\" (click)=\\\"editProduct(product._id)\\\"> Edit</a>\\n            </td>\\n          </tr>\\n          </tbody>\\n\\n        </table>\\n      </div>\\n      <!-- /.box-body -->\\n    </div>\\n    <!-- /.box -->\\n    <div class=\\\"col-md-offset-4\\\">\\n      <pagination-controls (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n    </div>\\n  </div>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/product/product-all/product-all.component.html\n// module id = ../../../../../src/app/product/product-all/product-all.component.html\n// module chunks = main","import { Component, OnInit, Output, Input, SimpleChange, EventEmitter } from '@angular/core';\nimport { ProductService } from '../product.service';\nimport { Product } from '../product';\n\n@Component({\n  selector: 'app-product-all',\n  templateUrl: './product-all.component.html',\n  styleUrls: ['./product-all.component.css']\n})\nexport class ProductAllComponent implements OnInit {\n  @Input() products: Product[] = [];\n  @Output() statusChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n  @Output() showEditForm: EventEmitter<string> = new EventEmitter<string>();\n  constructor(private productService: ProductService) { }\n\n  ngOnInit() {\n  }\n\n\n  toggleStatus(id, status) {\n    let data = {\n      id: id,\n      status: !status\n    };\n\n    this.productService.setStatus(data)\n      .subscribe(\n      (res) => {\n        if (res.status) {\n          this.statusChange.emit(true);\n        } else {\n          this.statusChange.emit(false);\n        }\n      },\n      (err) => {\n        console.log('Error in toggleStatus');\n      }\n      )\n  }\n\n\n  editProduct(id){\n    this.showEditForm.emit(id);\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/product/product-all/product-all.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content-wrapper {\\n    min-height: 1200px;\\n    /*font-size: 20px;*/\\n}\\n\\n.box-primary {\\n    padding: 30px 30px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/product/product-create/product-create.component.css\n// module id = ../../../../../src/app/product/product-create/product-create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height:1000px\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"showSuccess\\\">New Product Created Successfully !!</div>\\n    <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"showError\\\">ERROR !! Please Try Again.</div>\\n    <ol class=\\\"breadcrumb \\\">\\n      <li><a [routerLink]=\\\"[ '/dashboard/home' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Sofkul</a></li>\\n      <li><a [routerLink]=\\\"[ '/dashboard/product' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Product</a></li>\\n      <li class=\\\"active \\\">New</li>\\n    </ol>\\n  </div>\\n  <section class=\\\"content-header\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\"\\n              (click)=\\\"createModeOn()\\\">\\n        <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> &nbsp;New Product\\n      </button>\\n      <h2 *ngIf=\\\"!editMode && createMode\\\">\\n        Create New Product\\n      </h2>\\n      <h2 *ngIf=\\\"editMode && !createMode\\\">\\n        Update Product\\n      </h2>\\n    </div>\\n  </section>\\n\\n  <section class=\\\"content\\\" *ngIf=\\\"createMode || editMode\\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n      <div class=\\\"box box-primary\\\">\\n\\n          <input  type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"quantity2\\\" [(ngModel)]=\\\"sqty2\\\" placeholder=\\\"enter Qr input\\\" (ngModelChange)=\\\"setValue3()\\\">\\n\\n        <!--  Page Content Here -->\\n        <form class=\\\"form-horizontal \\\" [formGroup]=\\\"productCreateForm\\\" (submit)=\\\"submitCreateProductForm()\\\">\\n         \\n         \\n          <!--name-->\\n          <div class=\\\" form-group\\\">\\n            <label for=\\\"name\\\" class=\\\"col-sm-2 control-label \\\">Name</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input formControlName=\\\"name\\\" type=\\\"text \\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"product name \\\" [(ngModel)]=\\\"sname\\\" >\\n            </div>\\n          </div>\\n          <!--rate-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"rate\\\" class=\\\"col-sm-2 control-label \\\">Rate</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input formControlName=\\\"rate\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"rate\\\"  placeholder=\\\"monthly rate in INR\\\" [(ngModel)]=\\\"srate\\\">\\n            </div>\\n          </div>\\n          <!--Qauntity-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"rate\\\" class=\\\"col-sm-2 control-label \\\">Quantity</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input formControlName=\\\"quantity\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"quantity\\\" [(ngModel)]=\\\"sqty\\\"\\n                     placeholder=\\\"enter quantity\\\">\\n            </div>\\n          </div>\\n\\n          <!--VAT %-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"rate\\\" class=\\\"col-sm-2 control-label \\\">GST (%)</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <input formControlName=\\\"vat\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"vat\\\" placeholder=\\\"GST (%)\\\" [(ngModel)]=\\\"sgst\\\">\\n            </div>\\n          </div>\\n          <!--description-->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"rate\\\" class=\\\"col-sm-2 control-label \\\">Description</label>\\n            <div class=\\\"col-sm-10 \\\">\\n              <textarea formControlName=\\\"description\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"sdesc\\\"></textarea>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"form-group \\\">\\n            <div class=\\\"col-sm-offset-2 col-sm-10 \\\">\\n              <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"!editMode\\\">Save</button>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-warning\\\" *ngIf=\\\"editMode\\\">Update</button>\\n              \\n\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" *ngIf=\\\"editMode || createMode\\\" (click)=\\\"cancelEdit()\\\"> Cancel</button>\\n              \\n            </div>\\n          </div>\\n\\n        </form>\\n        \\n      </div>\\n    </div>\\n  </section>\\n  <app-product-all (showEditForm)=\\\"showEditForm($event)\\\" (statusChange)=\\\"statusChanged($event)\\\" [products]=\\\"products\\\"></app-product-all>                 \\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/product/product-create/product-create.component.html\n// module id = ../../../../../src/app/product/product-create/product-create.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { Product } from '../product';\nimport { ProductService } from '../product.service';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n  \n\n  public products: Product[] = [];\n  public productCreateForm: FormGroup;\n  showSuccess: boolean = false;\n  showError: boolean = false;\n  editMode: boolean = false;\n  createMode: boolean = false;\n  private id: any;\n  updateSuccess: boolean = false;\n  test: any = \"\";\n  name: string = 'abcd';\n  sname:string='';\n  srate:string='';\n  sqty:string='';\n  sqty2:string='';\n  sdesc:string='';\n  sgst:string='';\n  sgst2:string='';\n  sqr:any='';\n\n  constructor(private fb: FormBuilder, private productService: ProductService) { }\n\n  ngOnInit() {\n    this.buildForm();\n    this.getAllProduct();\n  // product.q \n  }\n\n\n setValue2()\n  { \n    var str = 'p2-xyz,r2-300,q2-5,g-6%,d2-this xyz product companyyy';\n   this.f_GetByQrCode(str);\n  }\n  setValue()\n  { \n    var str = 'p-xyz,r-300,q-5,g-6%,d-this xyz product companyyy'\n   this.f_GetByQrCode(str);\n  }\n  setValue3()\n  { \n  //  var s = this.sqr;\n    var q2 = this.sqty2;\n   // var q1 = this.sqty;\n   // alert(\"q2 \"+q2+\"\\n q1=\"+q1);\n   this.f_GetByQrCode(q2);\n  }\n  fmakeQr()\n  {\n\n  }\nfqr()\n{\n//  var s=this.sqr;\n//alert(\"qr value \"+s);\nalert(\"qr value chng\");\n}\n\n\nf_GetByQrCode(str)\n{\n//alert(str);\nvar str_array = str.split(',');\n    \n    for(var i = 0; i < str_array.length; i++)\n     {\n      str_array[i] = str_array[i].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\");\n      ///  alert(str_array[i]+\"\\n i=\"+i);\n        if(i==0)//name\n        {\n           this.sname=str_array[i].toString();\n         }\n        else if(i==1)//rate\n        {\n this.srate=str_array[i].toString();\n        }\n        else if(i==2)//qty\n        {\n    this.sqty=str_array[i].toString();\n \n        }\n        else if(i==3)//gst\n        {\n this.sgst=str_array[i].toString();\n        }\n        else if(i==4)//desc\n        {\n this.sdesc=str_array[i].toString();\n        }\n      }\n}\n\n\n  buildForm() {\n    this.productCreateForm = this.fb.group({\n      name: ['', Validators.required],\n      rate: ['', Validators.required],\n      quantity: ['', Validators.required],\n      description: [''],\n      status: [true],\n      vat: [''],\n      tb:['value on build'],\n      test:['hh']\n    });\n  }\n\n  submitCreateProductForm() {\n    this.showError = false;\n    this.showSuccess = false;\n    // console.log(this.productCreateForm.value);\n    let data = {\n      id: this.id,\n      name: this.productCreateForm.value.name,\n      rate: this.productCreateForm.value.rate,\n      quantity: this.productCreateForm.value.quantity,\n      description: this.productCreateForm.value.description,\n      status: true,\n      vat: this.productCreateForm.value.vat\n      \n\n    }\n\n    if (!this.editMode) {\n      this.productService.createProduct(data)\n        .subscribe(\n        (res) => {\n          if (res.status) {\n            this.getAllProduct();\n            this.showSuccess = true;\n            this.productCreateForm.reset();\n          } else {\n            this.showError = true;\n          }\n        },\n        (err) => {\n          console.log(\"ERROR from createProduct\");\n          this.showError = true;\n        }\n        )\n    } else {\n      this.productService.updateProduct(data)\n        .subscribe(\n        (res) => {\n          // console.log(res);\n          this.getAllProduct();\n          this.productCreateForm.reset();\n          this.editMode = false;\n        },\n        (err) => {\n\n        }\n        )\n    }\n  }\n  \n\n  getAllProduct() {\n    this.productService.getAllProduct()\n      .subscribe(\n      (res) => {\n        this.products = res;\n      },\n      (err) => {\n        console.log(\"Error in getAllProduct\");\n      }\n      )\n  }\n\n  statusChanged(event: any) {\n    this.getAllProduct();\n  }\n\n  showEditForm(event) {\n    this.editMode = true;\n    this.createMode = false;\n    this.id = event;\n    this.productService.getProductById(event)\n      .subscribe(\n      (res) => {\n        this.productCreateForm.patchValue({\n          name: res.name,\n          rate: res.rate,\n          quantity: res.quantity,\n          description: res.description,\n          status: res.status,\n          vat: res.vat\n        });\n      },\n      (err) => {\n\n      }\n      )\n  }\n\n\n  cancelEdit() {\n    this.editMode = false;\n    this.createMode = false;\n    this.productCreateForm.reset();\n    this.getAllProduct();\n  }\n\n \n\n  createModeOn(){\n    this.editMode = false;\n    this.createMode = true;\n    this.productCreateForm.reset();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/product/product-create/product-create.component.ts","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nconst productRoutes = [\n];\n@NgModule({\n    imports: [\n        RouterModule.forChild(productRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class ProductRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/product/product-routing.module.ts","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { Ng2PaginationModule } from 'ng2-pagination';\nimport { DialogModule } from 'primeng/primeng';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ProductRoutingModule } from './product-routing.module';\nimport { ProductCreateComponent } from './product-create/product-create.component';\nimport { ProductService } from './product.service';\nimport { ProductAllComponent } from './product-all/product-all.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ProductRoutingModule,\n        Ng2PaginationModule,\n        DialogModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        ProductCreateComponent,\n        ProductAllComponent],\n    exports: [\n\n    ],\n    providers: [\n        ProductService\n    ]\n})\nexport class ProductModule { }\n\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/product/product.module.ts","import { Injectable } from '@angular/core';\nimport { CustomHttpService } from \"../custom-http.service\";\nimport { environment } from \"../../environments/environment\";\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class ProductService {\n\n  private productUrl = environment.api_server + 'product/';\n  constructor(private http: CustomHttpService) { }\n  createProduct(data: any) {\n    let url = this.productUrl + 'create/';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n\n  getAllProduct() {\n    let url = this.productUrl + 'all';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  setStatus(data: any) {\n    let url = this.productUrl + 'status_change/';\n    return this.http.put(url, data).map((res) => res.json());\n  }\n  getProductById(id: any) {\n    let url = this.productUrl + 'id/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n  updateProduct(data: any) {\n    let url = this.productUrl + 'update/';\n    return this.http.put(url, data).map((res) => res.json());\n  }\n  searchByName(data: any) {\n    let url = this.productUrl + 'search/name/';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n}\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/product/product.service.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-all/proforma-all.component.css\n// module id = ../../../../../src/app/proforma/proforma-all/proforma-all.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 3000px;\\\">\\r\\n    <section class=\\\"content-header\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <h1>\\r\\n          All Proformas\\r\\n        </h1>\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n          <li><a [routerLink]=\\\"[ '/dashboard/home' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Sofkul</a></li>\\r\\n          <li><a [routerLink]=\\\"[ '/dashboard/proforma/all' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Proforma</a></li>\\r\\n          <li class=\\\"active\\\">All</li>\\r\\n        </ol>\\r\\n      </div>\\r\\n    </section>\\r\\n  \\r\\n    <section class=\\\"content\\\">\\r\\n      <!--  Page Content Here -->\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <div class=\\\"box box-primary\\\">\\r\\n          <div class=\\\"box-header\\\" style=\\\"margin-top: 20px;margin-bottom: 20px;\\\">\\r\\n            <h3 class=\\\"box-title\\\">List Of All Proforma</h3>\\r\\n            <br>\\r\\n            <div class=\\\"box-tools\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n               <!-- <div class=\\\"col-md-offset-2 col-lg-4\\\">\\r\\n                  Filter : &nbsp;\\r\\n                  <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"All\\\"\\r\\n                                                     (change)=\\\"toggleSearchStatus($event)\\\">All</label>\\r\\n  \\r\\n                  <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Paid\\\"\\r\\n                                                     (change)=\\\"toggleSearchStatus($event)\\\">Paid</label>\\r\\n                  <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Due\\\"\\r\\n                                                     (change)=\\\"toggleSearchStatus($event)\\\">Due</label>\\r\\n                  <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Partially Paid\\\"\\r\\n                                                     (change)=\\\"toggleSearchStatus($event)\\\">Partially Paid</label>\\r\\n                </div>-->\\r\\n                <div class=\\\"col-lg-6\\\" style=\\\"float:right\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <div class=\\\"input-group-btn\\\">\\r\\n                      <select style=\\\"font-size: 15px;height: 34px;\\\" (change)=\\\"filterChange($event.target.value)\\\">\\r\\n                        <option value=\\\"username\\\">Username</option>\\r\\n                        <option value=\\\"mobile_number\\\">Mobile Number</option>\\r\\n                        <option value=\\\"area\\\">Area</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <!-- /btn-group -->\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"...\\\" placeholder=\\\"Search Recent Proformas\\\"\\r\\n                           (input)=\\\"quickSearch($event.target.value)\\\">\\r\\n                  </div>\\r\\n                  <!-- /input-group -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <br><br>\\r\\n              <!-- /.row -->\\r\\n              <!-- /.row -->\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- /.box-header -->\\r\\n          <div class=\\\"box-body table-responsive no-padding\\\" *ngIf=\\\"proformaList\\\">\\r\\n            <table class=\\\"table table-hover\\\">\\r\\n              <tbody>\\r\\n              <tr>\\r\\n                <th>Username</th>\\r\\n                <th>Fullname</th>\\r\\n                <th>Mobile</th>\\r\\n                <th>Area</th>\\r\\n                <th>Product</th>\\r\\n                <!--<th>Due (INR)</th>\\r\\n                <th>Paid (INR)</th>-->\\r\\n                <th>Total (INR)</th>\\r\\n                <!--<th>Status</th>-->\\r\\n                <th>Proforma Generated On</th>\\r\\n                <!--<th>Last Transaction Date</th>-->\\r\\n                <!--<th>Change Status</th>-->\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n              <tr\\r\\n                *ngFor=\\\"let proforma of proformaList | paginate: { itemsPerPage: 30, currentPage: p, totalItems:totalProformaCount }\\\">\\r\\n                <td>{{ proforma.customerData?.username }}</td>\\r\\n                <td>{{ proforma.customerData?.fullname }}</td>\\r\\n                <td>{{ proforma.customerData?.mobile_primary }}</td>\\r\\n                <td>{{ proforma.customerData?.areaData?.name }}</td>\\r\\n                <!--<td><span *ngIf=\\\"proforma.customerData?.productData?.length>0\\\"> {{ proforma.customerData?.productData[0]?.name }} - <em *ngIf=\\\"proforma.customerData?.productData[0]?.rate\\\">{{ proforma.customerData?.productData[0]?.rate }} INR/month</em> </span>\\r\\n                    <small class=\\\"label bg-blue\\\">{{ proforma.customerData?.productData.length }}</small>\\r\\n                </td>-->\\r\\n                <td>\\r\\n                  <small class=\\\"label bg-blue\\\">{{ proforma.customerData?.productData?.length }}</small>\\r\\n                </td>\\r\\n                <!--<td>{{ proforma?.amount_due }}</td>-->\\r\\n                <!--<td>{{ proforma?.total - proforma?.amount_due }}</td>-->\\r\\n                <td>{{ proforma?.total }}</td>\\r\\n                <!--<td>\\r\\n                  <label class=\\\"label label-danger\\\" *ngIf=\\\"proforma.status=='Due'\\\"> {{ proforma.status }} </label>\\r\\n                  <label class=\\\"label label-success\\\" *ngIf=\\\"proforma.status=='Paid'\\\"> {{ proforma.status }} </label>\\r\\n                  <label class=\\\"label label-warning\\\" *ngIf=\\\"proforma.status=='Partially Paid'\\\"> {{ proforma.status\\r\\n                    }} </label>\\r\\n                </td>-->\\r\\n                <td>\\r\\n                  {{ proforma?.created_on | date: 'yMMMd' }}\\r\\n                </td>\\r\\n               <!-- <td *ngIf=\\\"proforma?.status=='Due' || proforma?.status=='Partially Paid'\\\">\\r\\n                  {{ proforma?.payment_due_date | date }}\\r\\n                </td>-->\\r\\n                <!--<td *ngIf=\\\"proforma?.status=='Paid'\\\">\\r\\n                  {{ proforma?.paid_date | date }}\\r\\n                </td>-->\\r\\n               <!-- <td>\\r\\n                  <button class=\\\"btn btn-success btn-xs\\\" (click)=\\\"changeStatus('Paid',proforma)\\\"> Paid</button>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"changeStatus('Partially Paid',proforma)\\\"\\r\\n                          data-toggle=\\\"modal\\\" data-target=\\\"#partiallyPaymentModal\\\"> Partially Paid\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"changeStatus('Due',proforma)\\\"> Due</button>\\r\\n                </td>-->\\r\\n                <td>\\r\\n                  <a type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\"\\r\\n                     [routerLink]=\\\"['/dashboard/proforma/view','all',proforma?._id]\\\">\\r\\n                    View</a>\\r\\n                </td>\\r\\n  \\r\\n                <!-- Modal for Partially payment -->\\r\\n                <!--<div class=\\\"modal fade\\\" id=\\\"partiallyPaymentModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n                     aria-labelledby=\\\"myModalLabel\\\">\\r\\n                  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n                    <div class=\\\"modal-content\\\">\\r\\n                      <div class=\\\"modal-header\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span\\r\\n                          aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n                        <h2 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Partially Payment</h2>\\r\\n                      </div>\\r\\n                      <div class=\\\"modal-body\\\" *ngIf=\\\"partialProforma\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                          <div class=\\\"col-md-6\\\">\\r\\n                            <h4 style=\\\"text-align: center\\\">Total: {{ partialProforma?.total }} INR</h4>\\r\\n                            <h4 style=\\\"text-align: center\\\">Due: {{ partialProforma?.amount_due }} INR</h4>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-md-6\\\">\\r\\n                            <div *ngFor=\\\"let x of partialProforma?.amount_partially_paid\\\">\\r\\n                              <h4 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} INR</h4>\\r\\n                              <h4 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} INR</h4>\\r\\n                              <br>\\r\\n                            </div>\\r\\n  \\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <br>\\r\\n                        <form class=\\\"form-horizontal\\\" *ngIf=\\\"partialProforma\\\">-->\\r\\n                          <!--amoount partially paid-->\\r\\n                        <!-- <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid\\r\\n                              (INR) </label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                              <input type=\\\"text\\\" name=\\\"partialPay\\\" [(ngModel)]=\\\"partialPay\\\" class=\\\"form-control \\\"\\r\\n                                     id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </form>\\r\\n                      </div>\\r\\n                      <div class=\\\"modal-footer\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePartialPay()\\\"\\r\\n                                data-dismiss=\\\"modal\\\">Save changes\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>-->\\r\\n              </tr>\\r\\n              </tbody>\\r\\n  \\r\\n            </table>\\r\\n          </div>\\r\\n          <!-- /.box-body -->\\r\\n        </div>\\r\\n        <!-- /.box -->\\r\\n        <div class=\\\"col-md-offset-4\\\">\\r\\n          <pagination-controls (pageChange)=\\\"onPaginate($event);p=$event\\\"></pagination-controls>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-all/proforma-all.component.html\n// module id = ../../../../../src/app/proforma/proforma-all/proforma-all.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {ProformaService} from '../proforma.service';\r\nimport {Proforma} from '../proforma';\r\nimport {Customer} from '../../customer/customer';\r\nimport {Product} from '../../product/product';\r\nimport {AreaService} from '../../area/area.service';\r\nimport {CustomerService} from '../../customer/customer.service';\r\nimport {ProductService} from '../../product/product.service';\r\nimport * as _ from 'underscore';\r\n\r\n@Component({\r\n  selector: 'app-proforma-all',\r\n  templateUrl: './proforma-all.component.html',\r\n  styleUrls: ['./proforma-all.component.css']\r\n})\r\nexport class ProformaAllComponent implements OnInit {\r\n\r\n  public proformaList: Proforma[] = [];\r\n  public partialProforma: Proforma;\r\n  totalProformaCount: number = 0;\r\n  public paginator = 1;\r\n\r\n  constructor(private customerService: CustomerService, private router: Router, private proformaService: ProformaService, private productService: ProductService, private areaService: AreaService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.proformaService.getAllProformaCount()\r\n      .subscribe(\r\n        (res) => {\r\n          this.totalProformaCount = res.count;\r\n        }\r\n      );\r\n    this.getAllProforma();\r\n\r\n  }\r\n\r\n  getAllProforma() {\r\n    this.proformaList = [];\r\n    this.proformaService.getAllProforma(this.paginator)\r\n      .subscribe(\r\n        (res: Proforma[]) => {\r\n          if (res.length == 0) {\r\n            this.proformaList = [];\r\n          } else {\r\n            _.each(res, (proforma: Proforma) => {\r\n              let customer: Customer;\r\n              this.customerService.getCustomerDetails(proforma.customer_id)\r\n                .subscribe(\r\n                  (res: Customer) => {\r\n                    customer = res;\r\n                    customer.productData = [];\r\n                    if (proforma.productList.length > 0) {\r\n                      _.each(proforma.productList, (element) => {\r\n                        this.productService.getProductById(element)\r\n                          .subscribe(\r\n                            (res: Product) => {\r\n                              customer['productData'].push(res);\r\n                            }\r\n                          )\r\n                      });\r\n                    }\r\n\r\n                    this.areaService.getAreaById(customer.area)\r\n                      .subscribe(\r\n                        (res) => {\r\n                          customer['areaData'] = res;\r\n                        }\r\n                      )\r\n                      proforma.customerData = customer;\r\n                    this.proformaList.push(proforma);\r\n                  }\r\n                )\r\n            });\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log('ERROR in getAllProforma');\r\n        }\r\n      )\r\n  }\r\n\r\n  toggleSearchStatus(event: any) {\r\n    console.log(event);\r\n  }\r\n\r\n  filterChange(event: any) {\r\n\r\n  }\r\n\r\n  quickSearch(event: any) {\r\n\r\n  }\r\n\r\n /* changeStatus(status: string, proforma: Proforma) {\r\n    if (status == 'Paid') {\r\n      this.setPaidDateCounter(proforma);\r\n      proforma.status = 'Paid';\r\n      proforma.paid_date = Date.now();\r\n      proforma.amount_due = 0;\r\n    } else if (status == 'Due') {\r\n      proforma.status = 'Due';\r\n      proforma.amount_due = proforma.total;\r\n      proforma.amount_partially_paid = [];\r\n    } else if (status == 'Partially Paid') {\r\n      this.partialProforma = proforma;\r\n    }\r\n\r\n    proforma['type'] = 'all';\r\n\r\n    this.proformaService.changeProformaStatus(proforma)\r\n      .subscribe(\r\n        (res) => {\r\n\r\n        }\r\n      )\r\n  }*/\r\n\r\n  //  for pagination\r\n  onPaginate(event: any) {\r\n    this.paginator = event;\r\n    this.getAllProforma();\r\n  }\r\n\r\n\r\n  setPaidDateCounter(proforma: Proforma) {\r\n    this.proformaService.setPaidDateCounter(proforma)\r\n      .subscribe(\r\n        (res) => {\r\n          console.log(res);\r\n        },\r\n        (err) => {\r\n          console.log(\"Error in setpaiddatecounter\");\r\n        }\r\n      )\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-all/proforma-all.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-create/proforma-create.component.css\n// module id = ../../../../../src/app/proforma/proforma-create/proforma-create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 3000px;\\\">\\r\\n    <section class=\\\" content-header \\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <h1>\\r\\n          Create New Proforma\\r\\n        </h1>\\r\\n        <ol class=\\\"breadcrumb \\\">\\r\\n          <li><a [routerLink]=\\\"[ '/dashboard/home' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Sofkul</a></li>\\r\\n          <li><a [routerLink]=\\\"[ '/dashboard/proforma/create' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Proforma</a></li>\\r\\n          <li class=\\\"active \\\">Create</li>\\r\\n        </ol>\\r\\n      </div>\\r\\n    </section>\\r\\n    <section class=\\\"content \\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"box box-primary\\\" style=\\\"height:2000px\\\">\\r\\n          <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"showSuccess\\\">New Proforma Created Successfully !!</div>\\r\\n          <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"showError\\\">ERROR !! Please Try Again.</div>\\r\\n          <!--  Page Content Here -->\\r\\n          <br>\\r\\n          <!--customer list-->\\r\\n          <form class=\\\"form-horizontal \\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\" form-group \\\">\\r\\n                <label class=\\\"col-sm-2 control-label \\\">Choose Customer: </label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <div>\\r\\n                    <select required *ngIf=\\\"customerList\\\" class=\\\"form-control\\\" (change)=\\\"getCustomer($event)\\\">\\r\\n                      <option *ngFor=\\\"let customer of customerList\\\" value=\\\"{{ customer._id }}\\\">\\r\\n                        <strong> {{ customer.username }} </strong> - <em> {{ customer.fullname }} </em>\\r\\n                      </option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <hr>\\r\\n            <br><br>\\r\\n          </form>\\r\\n  \\r\\n  \\r\\n          <form class=\\\"form-horizontal \\\" style=\\\"margin-top:30px\\\" [formGroup]=\\\"proformaCreateForm\\\"\\r\\n                (submit)=\\\"submitProformaCreateForm()\\\">\\r\\n            <div class=\\\"col-md-12\\\" *ngIf=\\\"resCustomer\\\">\\r\\n              <!--username-->\\r\\n              <div class=\\\" form-group \\\">\\r\\n                <label for=\\\"username \\\" class=\\\"col-sm-2 control-label \\\">Username</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"username\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"username \\\"\\r\\n                         placeholder=\\\"Username \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!--email-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"email \\\" class=\\\"col-sm-2 control-label \\\">Email</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"email\\\" type=\\\"email \\\" class=\\\"form-control \\\" id=\\\"email \\\" placeholder=\\\"Email \\\"\\r\\n                         readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!--fullname-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"fullname \\\" class=\\\"col-sm-2 control-label \\\">Fullname</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"fullname\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"fullname \\\"\\r\\n                         placeholder=\\\"Fullname \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--mobile_primary-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"mobile_primary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Primary</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"mobile_primary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_primary \\\"\\r\\n                         placeholder=\\\"Mobile primary \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--mobile_secondary-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"mobile_secondary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Secondary</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"mobile_secondary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_secondary \\\"\\r\\n                         placeholder=\\\"Mobile secondary \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--location-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"location \\\" class=\\\"col-sm-2 control-label \\\">Location</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"text \\\" formControlName=\\\"location\\\" class=\\\"form-control \\\" id=\\\"location \\\"\\r\\n                         placeholder=\\\"location \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--area-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"area \\\" class=\\\"col-sm-2 control-label \\\">Area</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"text \\\" formControlName=\\\"area\\\" class=\\\"form-control \\\" id=\\\"area \\\" placeholder=\\\"area \\\"\\r\\n                         readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--city-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"city \\\" class=\\\"col-sm-2 control-label \\\">City</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"text \\\" formControlName=\\\"city\\\" class=\\\"form-control \\\" id=\\\"city \\\" placeholder=\\\"city \\\"\\r\\n                         readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--<div class=\\\"form-group \\\">\\r\\n                <label for=\\\"status\\\" class=\\\"col-sm-2 control-label \\\">Status</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <label class=\\\"label label-danger\\\">Due</label>\\r\\n                </div>\\r\\n              </div>-->\\r\\n              <br>\\r\\n  \\r\\n              <!--proforma_created_date-->\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"date\\\" class=\\\"col-sm-2 control-label\\\">Proforma Date</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"date\\\" formControlName=\\\"date\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--total amount-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"amount_due_minus_discount \\\" class=\\\"col-sm-2 control-label \\\">Total (BDT)</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"number \\\" formControlName=\\\"total\\\" class=\\\"form-control \\\" id=\\\"amount_due_minus_discount \\\"\\r\\n                         placeholder=\\\"total \\\"\\r\\n                         readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--discount-->\\r\\n              <!--<div class=\\\"form-group \\\">-->\\r\\n              <!--<label for=\\\"discount \\\" class=\\\"col-sm-2 control-label \\\">Discount</label>-->\\r\\n              <!--<div class=\\\"col-sm-10\\\">-->\\r\\n              <!--<input type=\\\"number \\\" (keyup)=\\\"updateDiscount($event.target.value)\\\" formControlName=\\\"discount\\\"-->\\r\\n              <!--class=\\\"form-control \\\" id=\\\"discount \\\" placeholder=\\\"discount \\\"-->\\r\\n              <!--&gt;-->\\r\\n              <!--</div>-->\\r\\n              <!--</div>-->\\r\\n  \\r\\n              <!--product list-->\\r\\n              <div class=\\\"form-group \\\" *ngFor=\\\"let item of createRange(allProductCounter);let i=index\\\">\\r\\n                <label class=\\\"col-sm-2 control-label \\\">Product [{{ i+1 }}]</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <div class=\\\"productSelectBox\\\">\\r\\n                    <select required *ngIf=\\\"productList\\\" class=\\\"form-control\\\" (change)=\\\"onProductChange($event,i)\\\">\\r\\n                      <option *ngFor=\\\"let product of productList\\\" value=\\\"{{ product._id }}\\\">\\r\\n                        {{ product.name }} - <em> {{ product.rate }} BDT/month </em>\\r\\n                      </option>\\r\\n                    </select>\\r\\n                    <button *ngIf=\\\"i>0\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-danger btn-xs\\\" (click)=\\\"removeProduct(i)\\\">\\r\\n                      <i\\r\\n                        class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <button (click)=\\\"addProduct()\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-success\\\"><i class=\\\"fa fa-plus\\\"\\r\\n                                                                                                 aria-hidden=\\\"true\\\"></i>\\r\\n                &nbsp; Add Product\\r\\n              </button>\\r\\n  \\r\\n              <div class=\\\"form-group \\\">\\r\\n                <div class=\\\"col-md-offset-2 col-md-10\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success btn-lg\\\">Save</button>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger btn-lg\\\">Cancel</button>\\r\\n  \\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <br>\\r\\n            <hr>\\r\\n            <div class=\\\"col-md-12\\\" *ngIf=\\\"isSaved\\\">\\r\\n              <div class=\\\"alert alert-success\\\" role=\\\"alert\\\">Proforma Created Successfully !!</div>\\r\\n              <a class=\\\"btn btn-lg btn-info\\\" [routerLink]=\\\"['/dashboard/proforma/display/all/',resultProforma._id]\\\">Generate Proforma Now</a>\\r\\n            </div>\\r\\n  \\r\\n          </form>\\r\\n        </div>\\r\\n  \\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-create/proforma-create.component.html\n// module id = ../../../../../src/app/proforma/proforma-create/proforma-create.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {FormGroup, FormBuilder} from \"@angular/forms\";\r\nimport {ProductService} from '../../product/product.service';\r\nimport {AreaService} from '../../area/area.service';\r\nimport {CustomerService} from '../../customer/customer.service';\r\nimport {Customer} from '../../customer/customer';\r\nimport * as _ from 'underscore';\r\nimport {Product} from '../../product/product';\r\nimport {Area} from \"../../area/area\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {Proforma} from '../proforma';\r\nimport {ProformaService} from '../proforma.service';\r\n\r\n@Component({\r\n  selector: 'app-proforma-create',\r\n  templateUrl: './proforma-create.component.html',\r\n  styleUrls: ['./proforma-create.component.css']\r\n})\r\nexport class ProformaCreateComponent implements OnInit {\r\n\r\n  public productList: any[] = [];\r\n  showSuccess: boolean = false;\r\n  showError: boolean = false;\r\n  public proformaCreateForm: FormGroup;\r\n  public customerList: Customer[] = [];\r\n  public resCustomer: Customer;\r\n  private subscription: Subscription;\r\n  public proforma: Proforma;\r\n  public allProductCounter = 1;\r\n  public allProducts: any[] = [];\r\n  public isSaved: boolean = false;\r\n  public resultProforma;\r\n\r\n\r\n  constructor(private proformaService: ProformaService, private fb: FormBuilder, private customerService: CustomerService, private productService: ProductService, private areaService: AreaService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.getProductList();\r\n    this.getAllCustomers();\r\n  }\r\n\r\n  buildForm() {\r\n    let date = Date.now();\r\n    this.proformaCreateForm = this.fb.group({\r\n      customer_id: [''],\r\n      username: [''],\r\n      email: [''],\r\n      fullname: [''],\r\n      location: [''],\r\n      area: [''],\r\n      city: [''],\r\n      mobile_primary: [''],\r\n      mobile_secondary: [''],\r\n     // amount_due: [''],\r\n      total: [''],\r\n    //  discount: [0],\r\n      date: [date],\r\n     // status: ['Due'],\r\n      productList: []\r\n    });\r\n  }\r\n\r\n  getAllCustomers() {\r\n    this.customerService.getAllCustomers('all')\r\n      .subscribe(\r\n        (res) => {\r\n          this.customerList = res;\r\n        },\r\n        (err) => {\r\n\r\n        }\r\n      );\r\n  }\r\n\r\n  getCustomer(event: any) {\r\n    this.resCustomer = _.find(this.customerList, function (item) {\r\n      return item['_id'] == event.target.value;\r\n    });\r\n\r\n    this.proformaCreateForm.patchValue({\r\n      username: this.resCustomer.username,\r\n      email: this.resCustomer.email,\r\n      fullname: this.resCustomer.fullname,\r\n      location: this.resCustomer.location,\r\n      city: this.resCustomer.city,\r\n      mobile_primary: this.resCustomer.mobile_primary,\r\n      mobile_secondary: this.resCustomer.mobile_secondary,\r\n    });\r\n\r\n    this.resCustomer.productData = [];\r\n    if (this.resCustomer.area) {\r\n      this.areaService.getAreaById(this.resCustomer.area)\r\n        .subscribe(\r\n          (res: Area) => {\r\n            this.resCustomer.areaData = res;\r\n            this.proformaCreateForm.patchValue({\r\n              area: this.resCustomer.areaData.name\r\n            });\r\n          },\r\n          (err) => {\r\n\r\n          }\r\n        )\r\n    }\r\n  }\r\n\r\n  getProductList() {\r\n    this.productList = [];\r\n    this.productService.getAllProduct()\r\n      .subscribe(\r\n        (res) => {\r\n          _.each(res, (item) => {\r\n            if (item['status']) {\r\n              this.productList.push(item);\r\n            }\r\n          });\r\n        },\r\n        (err) => {\r\n          console.log(\"ERROR from productList\");\r\n        },\r\n        () => {\r\n          this.allProducts.push(this.productList[0]);\r\n          this.proformaCreateForm.patchValue({\r\n            total: this.productList[0].rate\r\n          })\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n  removeProduct(index) {\r\n    this.allProductCounter--;\r\n    this.allProducts.splice(index, 1);\r\n  }\r\n\r\n  addProduct() {\r\n    this.allProductCounter++;\r\n    let newProduct = this.productList[0];\r\n    this.allProducts.push(newProduct);\r\n    this.updateTotal();\r\n  }\r\n\r\n  onProductChange(event: any, index) {\r\n    let result = _.find(this.productList, function (item) {\r\n      return item['_id'] == event.target.value;\r\n    })\r\n    this.allProducts[index] = result;\r\n    this.updateTotal();\r\n  }\r\n\r\n  createRange(number) {\r\n    let items: number[] = [];\r\n    for (let i = 1; i <= number; i++) {\r\n      items.push(i);\r\n    }\r\n    return items;\r\n  }\r\n\r\n  updateTotal() {\r\n    let total = 0;\r\n    _.each(this.allProducts, (product) => {\r\n      total += product['rate'];\r\n    });\r\n    this.proformaCreateForm.patchValue({\r\n      total: total\r\n    })\r\n  }\r\n\r\n  submitProformaCreateForm() {\r\n    let product_list = _.pluck(this.allProducts, '_id');\r\n    this.proformaCreateForm.patchValue({\r\n      productList: product_list,\r\n      customer_id: this.resCustomer['_id']\r\n    });\r\n\r\n    this.proformaService.createNewProforma(this.proformaCreateForm.value)\r\n      .subscribe(\r\n        (res) => {\r\n          this.resultProforma = res;\r\n          this.isSaved = true;\r\n        }\r\n      )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-create/proforma-create.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content-wrapper {\\n    min-height: 1200px;\\n    /*font-size: 20px;*/\\n}\\n\\n.box-primary {\\n    padding: 30px 30px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-edit/proforma-edit.component.css\n// module id = ../../../../../src/app/proforma/proforma-edit/proforma-edit.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"showForm\\\" class=\\\"content-wrapper\\\" style=\\\"height: 2000px;\\\">\\r\\n    <section class=\\\" content-header \\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <h1>\\r\\n          Proforma Details of <em>{{ proforma.customerData?.username }}</em>\\r\\n          <small>for the month of {{ proforma?.created_on | date:'MMMM'}}</small>\\r\\n        </h1>\\r\\n        <ol class=\\\"breadcrumb \\\">\\r\\n          <li><a [routerLink]=\\\"[ '/dashboard/home' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Sofkul</a></li>\\r\\n          <li><a [routerLink]=\\\"[ '/dashboard/proforma/all' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Proforma</a></li>\\r\\n          <li class=\\\"active \\\">Edit</li>\\r\\n        </ol>\\r\\n      </div>\\r\\n    </section>\\r\\n    <section class=\\\"content \\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"box box-primary\\\" *ngIf=\\\"proforma\\\">\\r\\n          <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"showSuccess\\\">Proforma Data Updated Successfully !!</div>\\r\\n          <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"showError\\\">ERROR !! Please Try Again.</div>\\r\\n          <!--  Page Content Here -->\\r\\n          <form class=\\\"form-horizontal \\\" [formGroup]=\\\"proformaDetailForm\\\" *ngIf=\\\"proforma\\\"\\r\\n                (submit)=\\\"submitProformaEditForm()\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <!--username-->\\r\\n              <div class=\\\" form-group \\\">\\r\\n                <label for=\\\"username \\\" class=\\\"col-sm-2 control-label \\\">Username</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"username\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"username \\\"\\r\\n                         placeholder=\\\"Username \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!--email-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"email \\\" class=\\\"col-sm-2 control-label \\\">Email</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"email\\\" type=\\\"email \\\" class=\\\"form-control \\\" id=\\\"email \\\" placeholder=\\\"Email \\\"\\r\\n                         readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!--fullname-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"fullname \\\" class=\\\"col-sm-2 control-label \\\">Fullname</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"fullname\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"fullname \\\"\\r\\n                         placeholder=\\\"Fullname \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--mobile_primary-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"mobile_primary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Primary</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"mobile_primary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_primary \\\"\\r\\n                         placeholder=\\\"Mobile primary \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--mobile_secondary-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"mobile_secondary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Secondary</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"mobile_secondary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_secondary \\\"\\r\\n                         placeholder=\\\"Mobile secondary \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--location-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"location \\\" class=\\\"col-sm-2 control-label \\\">Location</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"text \\\" formControlName=\\\"location\\\" class=\\\"form-control \\\" id=\\\"location \\\"\\r\\n                         placeholder=\\\"location \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--area-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"area \\\" class=\\\"col-sm-2 control-label \\\">Area</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"text \\\" formControlName=\\\"area\\\" class=\\\"form-control \\\" id=\\\"area \\\" placeholder=\\\"area \\\"\\r\\n                         readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--city-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"city \\\" class=\\\"col-sm-2 control-label \\\">City</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"text \\\" formControlName=\\\"city\\\" class=\\\"form-control \\\" id=\\\"city \\\" placeholder=\\\"city \\\"\\r\\n                         readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n  \\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <!--choose status-->\\r\\n              <!--<div class=\\\"form-group \\\">\\r\\n                <label for=\\\"status \\\" class=\\\"col-sm-6 control-label \\\">Payment Status</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <label class=\\\"label label-warning\\\" *ngIf=\\\"proforma.status=='Partially Paid'\\\">{{ proforma.status }}</label>\\r\\n                  <label class=\\\"label label-danger\\\" *ngIf=\\\"proforma.status=='Due'\\\">{{ proforma.status }}</label>\\r\\n                  <label class=\\\"label label-success\\\" *ngIf=\\\"proforma.status=='Paid'\\\">{{ proforma.status }}</label>\\r\\n                </div>\\r\\n              </div>-->\\r\\n  \\r\\n              <!--invoice_created_date-->\\r\\n              <!--<div class=\\\"form-group \\\">-->\\r\\n              <!--<label for=\\\"invoice_created_date \\\" class=\\\"col-sm-2 control-label \\\">Invoice created on</label>-->\\r\\n              <!--<div class=\\\"col-sm-10\\\">-->\\r\\n              <!--<input type=\\\"date\\\" formControlName=\\\"invoice_created_date\\\">-->\\r\\n              <!--</div>-->\\r\\n              <!--</div>-->\\r\\n  \\r\\n              <!--payment_due_date-->\\r\\n              <!--<div class=\\\"form-group \\\" *ngIf=\\\"paymentStatus=='Due'\\\">\\r\\n                  <label for=\\\"payment_due_date \\\" class=\\\"col-sm-2 control-label \\\">Payment Due Date</label>\\r\\n                  <div class=\\\"col-sm-10\\\">\\r\\n                      <input type=\\\"date\\\" formControlName=\\\"payment_due_date\\\" value=\\\"currentDate.toString('Y-m-d')\\\">\\r\\n                  </div>\\r\\n              </div>-->\\r\\n  \\r\\n              <!--for partial payment only-->\\r\\n              <div class=\\\"form-group \\\" *ngIf=\\\"proforma.status=='Partially Paid' \\\">\\r\\n                <div *ngFor=\\\"let x of proforma?.amount_partially_paid;let i = index\\\">\\r\\n                  <label for=\\\"status \\\" class=\\\"col-sm-6 control-label \\\">Partial Payment : [{{ i+1 }}] </label>\\r\\n                  <div class=\\\"col-sm-6\\\">\\r\\n                    <h5 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} INR</h5>\\r\\n                    <h5 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} INR</h5>\\r\\n                    <br>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--payment paid / partially paid date-->\\r\\n              <div class=\\\"form-group \\\" *ngIf=\\\"proforma.status=='Paid' && paymentStatus!='Due'\\\">\\r\\n                <label for=\\\"paid \\\" class=\\\"col-sm-2 control-label \\\">Payment Paid Date</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"date\\\" formControlName=\\\"paid_date\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--amoount partially paid-->\\r\\n              <!--<div class=\\\"form-group \\\" *ngIf=\\\"proforma.status=='Partially Paid'\\\">-->\\r\\n              <!--<label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid (BDT) </label>-->\\r\\n              <!--<div class=\\\"col-sm-10\\\">-->\\r\\n              <!--<input type=\\\"text \\\" (keyup)=\\\"getPartiallyPaid($event)\\\" formControlName=\\\"amount_partially_paid\\\" class=\\\"form-control \\\" id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">-->\\r\\n              <!--</div>-->\\r\\n              <!--</div>-->\\r\\n  \\r\\n              <!--amount_due-->\\r\\n              <!--<div class=\\\"form-group \\\" *ngIf=\\\"proforma.status!='Paid'\\\">\\r\\n                <label for=\\\"amount_due \\\" class=\\\"col-sm-2 control-label \\\">Amount Due (INR) </label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input *ngIf=\\\"proforma.status=='Due'\\\" type=\\\"text \\\" formControlName=\\\"amount_due\\\" class=\\\"form-control \\\"\\r\\n                         id=\\\"amount_due \\\" placeholder=\\\"amount due\\\" readonly>\\r\\n                  <input *ngIf=\\\"proforma.status=='Partially Paid'\\\" type=\\\"text \\\" formControlName=\\\"amount_due\\\"\\r\\n                         class=\\\"form-control \\\" id=\\\"amount_due \\\" placeholder=\\\"amount due\\\" readonly>\\r\\n                </div>\\r\\n              </div>-->\\r\\n  \\r\\n  \\r\\n              <!--discount-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"discount \\\" class=\\\"col-sm-2 control-label\\\">Discounts (INR) </label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input (keyup)=\\\"getDiscount($event)\\\" type=\\\"text\\\" formControlName=\\\"discount\\\" class=\\\"form-control \\\"\\r\\n                         id=\\\"discount \\\" placeholder=\\\"discount\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--total-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"discount \\\" class=\\\"col-sm-2 control-label \\\">Total (INR) </label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input *ngIf=\\\"proforma.status!='Paid'\\\" type=\\\"text \\\" formControlName=\\\"total\\\" class=\\\"form-control \\\"\\r\\n                         id=\\\"total \\\" placeholder=\\\"total\\\">\\r\\n                  <input *ngIf=\\\"proforma.status=='Paid'\\\" type=\\\"text \\\" formControlName=\\\"total\\\" class=\\\"form-control \\\"\\r\\n                         id=\\\"total \\\" placeholder=\\\"total\\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div>\\r\\n                <!--for products already list-->\\r\\n                <div class=\\\"form-group \\\" *ngFor=\\\"let myProduct of proforma.customerData?.productData;let i=index\\\">\\r\\n                  <label for=\\\"\\\" class=\\\"col-sm-2 control-label \\\">Product [{{ i+1 }}]</label>\\r\\n                  <div class=\\\"col-sm-10 \\\">\\r\\n                    <div class=\\\"productSelectBox\\\">\\r\\n                      <select (change)=\\\"onProductChange($event,i,'my')\\\" required *ngIf=\\\"productList\\\" class=\\\"form-control\\\"\\r\\n                              style=\\\"margin-bottom:10px\\\">\\r\\n                        <option [selected]=\\\"product._id == myProduct._id\\\" *ngFor=\\\"let product of productList\\\"\\r\\n                                value=\\\"{{ product._id }}\\\">\\r\\n                          {{ product.name }} - <em> {{ product.rate }} INR/month </em>\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n  \\r\\n                <!--for new additional products-->\\r\\n                <div class=\\\"form-group \\\" *ngFor=\\\"let newProduct of additionalProducts;let i=index\\\">\\r\\n                  <label for=\\\"\\\" class=\\\"col-sm-2 control-label \\\">Product [{{ i+proforma.customerData?.productData.length+1\\r\\n                    }}]</label>\\r\\n                  <div class=\\\"col-sm-10 \\\">\\r\\n                    <div class=\\\"productSelectBox\\\">\\r\\n                      <select (change)=\\\"onProductChange($event,i,'add')\\\" required *ngIf=\\\"productList\\\" class=\\\"form-control\\\"\\r\\n                              style=\\\"margin-bottom:10px\\\">\\r\\n                        <option *ngFor=\\\"let product of productList\\\" value=\\\"{{ product._id }}\\\">\\r\\n                          {{ product.name }} - <em> {{ product.rate }} INR/month </em></option>\\r\\n                      </select>\\r\\n                      <button *ngIf=\\\"proforma.status!='Paid'\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-danger btn-xs\\\"\\r\\n                              (click)=\\\"removeProduct(i)\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <button *ngIf=\\\"proforma.status!='Paid'\\\" (click)=\\\"addProduct()\\\" type=\\\"button\\\"\\r\\n                        class=\\\"pull-right btn btn-success\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> &nbsp; Add\\r\\n                  Product\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-sm-offset-1 col-sm-10 \\\" style=\\\"margin-top:10px\\\">\\r\\n                <!--<button type=\\\"submit \\\" class=\\\"btn btn-success\\\">Save</button>-->\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-info btn-lg\\\">Generate Proforma</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-edit/proforma-edit.component.html\n// module id = ../../../../../src/app/proforma/proforma-edit/proforma-edit.component.html\n// module chunks = main","import {DatePipe} from '@angular/common';\nimport {Component, OnInit, ElementRef, ViewChild} from '@angular/core';\nimport {ProformaService} from '../proforma.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from \"rxjs\";\nimport {Proforma} from '../proforma';\nimport {Router} from \"@angular/router\";\nimport {FormGroup, FormBuilder} from \"@angular/forms\";\nimport {ProductService} from '../../product/product.service';\nimport {CustomerService} from '../../customer/customer.service';\nimport * as _ from 'underscore';\nimport {AreaService} from '../../area/area.service';\n\n@Component({\n  selector: 'app-proforma-edit',\n  templateUrl: './proforma-edit.component.html',\n  styleUrls: ['./proforma-edit.component.css']\n})\nexport class ProformaEditComponent implements OnInit {\n  @ViewChild('productSelectBox') productSelectBox: ElementRef;\n\n  public productList: any[] = [];\n  public additionalProducts: any[] = [];\n  public addProductCounter: number = 0;\n  public allProductsAdd: any[] = [];\n\n\n  public productSuggestions: any[] = [];\n\n  private subscription: Subscription;\n  public proformaDetailForm: FormGroup;\n  private id: any;\n  public proforma: Proforma;\n  public currentDate: number = Date.now();\n  public datePipe: DatePipe = new DatePipe('en-US');\n  public paymentStatus: string = 'Due';\n  public showForm: boolean = false;\n  private type: string;\n\n  constructor(private areaService: AreaService, private customerService: CustomerService, private elementRef: ElementRef, private productService: ProductService, private fb: FormBuilder, private proformaService: ProformaService, private route: ActivatedRoute, private router: Router) {\n\n  }\n\n  ngOnInit() {\n    this.getProductList();\n    this.subscription = this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.type = params['type'];\n      if (this.id) {\n        this.proformaService.getProformaById(this.type, this.id)\n          .subscribe(\n            (res) => {\n              this.proforma = res;\n              this.allProductsAdd = this.proforma.productList;\n              this.buildForm();\n            },\n            (err) => {\n\n            }\n          )\n      }\n    });\n  }\n\n  buildForm() {\n    this.customerService.getCustomerDetails(this.proforma.customer_id)\n      .subscribe(\n        (res) => {\n          this.proforma.customerData = res;\n          this.proforma.customerData.productData = [];\n         // let total_partially_paid = 0;\n          _.each(this.proforma.productList, (item) => {\n            this.productService.getProductById(item)\n              .subscribe(\n                (res) => {\n                  this.proforma.customerData.productData.push(res);\n                }\n              )\n           // total_partially_paid += item['amount'];\n          });\n\n          this.proformaDetailForm = this.fb.group({\n            username: [res['username']],\n            email: [res['email']],\n            fullname: [res['fullname']],\n            location: [res['location']],\n            area: [''],\n            city: [res['city']],\n            mobile_primary: [res['mobile_primary']],\n            mobile_secondary: [res['mobile_secondary']],\n            payment_due_date: [this.proforma['payment_due_date']],\n            amount_due: [this.proforma['amount_due']],\n            status: [this.proforma['status']],\n            total: [this.proforma['total']],\n            discount: [this.proforma['discount']],\n            proforma_created_date: [this.proforma['proforma_created_date']],\n            paid_date: [this.proforma['paid_date']],\n           // amount_partially_paid: total_partially_paid\n          });\n\n          this.areaService.getAreaById(res['area'])\n            .subscribe(\n              (res) => {\n                this.proformaDetailForm.patchValue({\n                  area: res['name']\n                });\n              }\n            )\n          this.showForm = true;\n        }\n      )\n\n  }\n\n  getProductSuggestions(event: any) {\n    let data = {\n      text: event.query\n    }\n\n    this.productService.searchByName(data)\n      .subscribe(\n        (res) => {\n          this.productSuggestions = res;\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  getProductList() {\n    this.productList = [];\n    this.productService.getAllProduct()\n      .subscribe(\n        (res) => {\n          _.each(res, (item) => {\n            if (item['status']) {\n              this.productList.push(item);\n            }\n          });\n        },\n        (err) => {\n          console.log(\"ERROR from productList\");\n        }\n      )\n  }\n\n  addProduct() {\n    let newProduct = this.productList[0];\n    this.additionalProducts.push(newProduct);\n    this.allProductsAdd.push(newProduct._id);\n    this.updatePayments();\n  }\n\n  removeProduct(index) {\n    let delIndex = this.allProductsAdd.indexOf(this.additionalProducts[index]);\n    this.allProductsAdd.splice(delIndex, 1);\n    this.additionalProducts.splice(index, 1);\n    this.updatePayments();\n  }\n\n  onProductChange(event: any, index, mode) {\n    if (mode != 'my') {\n      index = index + this.proforma.customerData.productData.length;\n    }\n    this.allProductsAdd[index] = event.target.value;\n    this.updatePayments();\n  }\n\n  submitProformaEditForm() {\n    let data = {};\n    data = {\n      id: this.id,\n      amount_due: this.proformaDetailForm.value.amount_due,\n      total: this.proformaDetailForm.value.total,\n      discount: this.proformaDetailForm.value.discount,\n      productList: this.allProductsAdd,\n     // amount_partially_paid: this.proforma.amount_partially_paid,\n      type: this.type\n    }\n\n    this.proformaService.preGenerateProformaUpdate(data)\n      .subscribe(\n        (res) => {\n          this.router.navigate(['dashboard/proforma/display', this.type, this.id]);\n        },\n        (err) => {\n          console.log('Error in Pre Generator');\n        }\n      )\n  }\n\n\n  changeStatus(event: any) {\n    this.paymentStatus = event.target.value;\n    if (this.paymentStatus == 'Paid') {\n      let currentDate = this.datePipe.transform(Date.now(), 'y-MM-dd');\n      this.proformaDetailForm.patchValue({\n        paid_date: currentDate\n      });\n    }\n  }\n\n  getPartiallyPaid(event: any) {\n    this.proformaDetailForm.patchValue({\n      amount_partially_paid: event.target.value,\n      amount_due: this.proforma.amount_due - event.target.value\n    });\n  }\n\n  getDiscount(event: any) {\n    this.proformaDetailForm.patchValue({\n      total: this.proformaDetailForm.value.amount_due - event.target.value\n    });\n  }\n\n  updatePayments() {\n    let total = 0;\n    _.each(this.allProductsAdd, (item) => {\n      let product = _.findWhere(this.productList, {_id: item});\n      total += product.rate;\n    });\n\n    this.proformaDetailForm.patchValue({\n      total: total,\n      discount: 0,\n      amount_due: total\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-edit/proforma-edit.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#proforma_box {\\n  background-color: #fff;\\n  font-size: 20px;\\n  padding-left: 20px;\\n  padding-right: 20px;\\n}\\n\\n#proforma_table {\\n  background-color: #fff;\\n  font-size: 20px;\\n}\\n\\n#company_logo {\\n  margin-top: 50px;\\n  margin-left: 10px;\\n  width: 210px;\\n  height: 180px;\\n}\\n\\n.row-divide {\\n  border-bottom: 4px solid #d2d6de;\\n}\\n\\n#proforma_box {\\n  font-weight: 550;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-html/proforma-html.component.css\n// module id = ../../../../../src/app/proforma/proforma-html/proforma-html.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 2000px;margin-left: 0vw;\\\">\\n  <section class=\\\" content-header\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        Proforma Display\\n      </h1>\\n      <ol class=\\\"breadcrumb \\\">\\n        <li><a [routerLink]=\\\"[ '/' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> SofkulApp</a></li>\\n        <li><a [routerLink]=\\\"[ '/dashboard/proforma' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Proforma</a></li>\\n        <li class=\\\"active \\\">Display</li>\\n      </ol>\\n    </div>\\n  </section>\\n  <section class=\\\"content \\\" *ngIf=\\\"proforma\\\">\\n    <div class=\\\"col-xs-12\\\" id=\\\"proforma_main\\\">\\n      <div id=\\\"proforma_body\\\">\\n        <!--proforma display starts here-->\\n        <div class=\\\"\\\" id=\\\"proforma_box\\\" style=\\\"margin-top:10px\\\" #proformaBox>\\n          <!--head row-->\\n          <div class=\\\"row \\\">\\n            <!--left section-->\\n            <div class=\\\"col-md-6\\\">\\n              <img src=\\\"/assets/dist/img/Aquality.jpg\\\" style=\\\"width:40%; height:50%;\\\" id=\\\"company_logo\\\">\\n            </div>\\n            <!--right section-->\\n            <div class=\\\"col-md-offset-2 col-md-4\\\" style=\\\"text-align: -webkit-left; margin-top:8px;\\\">\\n              <h3 style=\\\"font-size: 60px;\\\"></h3><br>\\n\\n            </div>\\n\\n            \\n              <div class=row style=\\\"background-color:darkslategray; margin-top:150px; width:100%; height:200px;margin-left: 0vw;\\\">\\n                <div class=\\\"col-md-4 col-xs-4\\\" >\\n                  <div class=\\\"\\\" style=\\\"color:white; margin-left:40px;margin-top:20px; padding:10px; font-size:16px; \\\">\\n                      <span> Proforma for: </span><br>\\n                      <strong> {{ proforma.customerData?.fullname }} </strong><br>\\n                      <!--<span> {{ proforma.customerData?.location }} </span><br>-->\\n                      <span> {{ proforma.customerData?.city }} </span><br>\\n                      <span> India </span>\\n                      <span> {{ proforma.customerData?.mobile_primary }} </span><br>\\n                      <span> {{ proforma.customerData?.email }} </span><br>\\n                      <!--<span> {{ proforma.customerData?.area }} </span><br>-->\\n                      </div>\\n                </div>\\n                <div class=\\\"col-md-offset-2 col-md-6 col-xs-2\\\">\\n                  <div style=\\\"padding-top:40px;\\\">\\n                    <span style=\\\"color:rgb(245, 163, 10); font-size:70px;\\\">PROFORMA</span>\\n                    </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\" style=\\\"margin-left: 0vw; background-color:black;width:100%;color:#fff; height:60px; text-align: -webkit-center; font-size:15px;\\\">\\n                <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\" >\\n                    <span> Date: {{ proforma.created_on | date }} </span>\\n                </div>\\n                <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                    <span> Valid upto: DD/MM/YYYY</span>\\n                  </div>\\n                  <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                      <span> Proforma ref: #123456</span>\\n                    </div>\\n              </div>\\n              <div class=\\\"row\\\" style=\\\"margin-left: 0vw; background-color:black;width:100%;color:#fff; height:60px; text-align: -webkit-center; font-size:15px;\\\">\\n                  <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\" >\\n                      \\n                      <span> <strong>Proforma Number: </strong> #001</span>\\n                  </div>\\n                  <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                      <span> <strong>Mobile Number: </strong> {{ proforma.customerData?.mobile_primary }}</span>\\n                    </div>\\n                    <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                        <span> <strong>Prepared by: </strong> Aquality</span><br>\\n                    \\n                  \\n                      </div>\\n                </div>\\n\\n              <!--table-->\\n              <div id=\\\"proforma_table\\\">\\n              <table class=\\\"table table-hover table-responsive\\\" *ngIf=\\\"proforma.productData\\\" style=\\\"width:100%; height:200px;margin-left: 0vw;\\\" >\\n                  <thead style=\\\"background-color:rgb(245, 163, 10); color:#fff;\\\">\\n                    <tr>\\n                      <th>ITEM DESCRIPTION</th>\\n                      <th>UNIT PRICE</th>\\n                      <th>GST</th>\\n                      <th>TAX RATE</th>\\n                      <th style=\\\"padding-left:200px;\\\">QUANTITY</th>\\n                      <th style=\\\"padding-left:100px;\\\">AMOUNT</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let product of proforma.productData;let i=index\\\"\\n                    [ngClass]=\\\"i==proforma.productData.length-1 ? 'row-divide' : '' \\\">\\n                    <td>{{ product?.name }}</td>\\n                    <td>INR. {{ product?.rate }}</td>\\n                    <td> {{ product?.vat }}%</td>\\n                    <td></td>\\n                    \\n                    \\n                      <td style=\\\"padding-left:200px; width:30%;\\\">1</td>\\n                      <td style=\\\"padding-left:100px; background-color:#ffe6e6; width:20%;\\\">INR. {{ product?.amount_with_vat * 1 }}</td>\\n                    </tr>\\n                    <tr>\\n                        <td></td>\\n                        <td></td>\\n                        <td></td>\\n                        <td></td>\\n                        \\n                        <td style=\\\"padding-left:200px;\\\">\\n                          <strong>SUB TOTAL: </strong>\\n                        </td>\\n                        <td style=\\\"padding-left:100px; background-color:#ffe6e6;width:20%;\\\">\\n                          INR. {{ proforma.total }}\\n                        </td>\\n                      </tr>\\n\\n                      <tr *ngFor=\\\"let x of proforma?.amount_partially_paid;let i = index\\\">\\n                          <td></td>\\n                          \\n                        \\n                          <td>\\n                            <strong>Payment On : {{ x.date | date }} </strong>\\n                          </td>\\n                          <td>\\n                            INR. {{ x.amount }}\\n                          </td>\\n                        </tr>\\n            \\n                        \\n                  \\n                          <tr>\\n                              <td></td>\\n                              <td></td>\\n                              <td></td>\\n                              <td></td>\\n                              \\n                              <td style=\\\"padding-left:200px;\\\">\\n                                Adjusyments\\n                              </td>\\n                              <td style=\\\"padding-left:100px; background-color:#ffe6e6;\\\">\\n                                INR. {{ proforma.discount }}\\n                              </td>\\n    \\n                            </tr>\\n                            <tr>\\n                              <td></td>\\n                              <td></td>\\n                              <td></td>\\n                              <td></td>\\n                              \\n                              <td style=\\\"padding-left:200px;\\\">\\n                                Transport\\n                              </td>\\n                              <td style=\\\"padding-left:100px; background-color:#ffe6e6;\\\">\\n                                INR. \\n                              </td>\\n    \\n                            </tr>\\n\\n                            <tr>\\n                                <td></td>\\n                                <td></td>\\n                                <td></td>\\n                                <td></td>\\n                                \\n                                <td style=\\\"background-color:darkslategray; color:#fff;padding-left:200px;\\\">\\n                                  GRAND TOTAL\\n                                </td>\\n                                <td style=\\\"background-color:rgb(245, 163, 10); color:#fff;padding-left:100px; \\\">\\n                                  INR. {{ proforma.total - proforma.discount }}\\n                                </td>\\n      \\n                              </tr>\\n                        <!--<tr *ngIf=\\\"proforma.status == 'Paid'\\\">\\n                          <td></td>\\n                          <td></td>-->\\n                          <!--<td></td>-->\\n                          <!--<td>\\n                            <strong>Amount Paid (INR)</strong>\\n                          </td>\\n                          <td>\\n                            <strong>INR. {{ proforma.total }}</strong>\\n                          </td>-->\\n                        <!--</tr>-->\\n                        \\n                        <tr>\\n                          <td></td>\\n                          <td></td>\\n                          <td></td>\\n                          <td></td>\\n                        \\n                          <td style=\\\"background-color:darkslategray; color:#fff; padding-left:200px;\\\">\\n                            <strong>TOTAL(in words)</strong>\\n                          </td>\\n                          <td style=\\\"background-color:rgb(245, 163, 10); color:#fff;\\\">\\n                            <strong style=\\\"text-transform: capitalize;\\\"> {{ finalTotalWords }} INR only</strong>\\n                          </td>\\n                        </tr>\\n                    \\n                  </tbody>\\n                </table>\\n                </div>\\n                \\n                        \\n                      <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6 col-xs-6\\\">\\n                      <h3 class=\\\"well\\\">Bank Details</h3>\\n                       <div class=\\\"table-responsive\\\">          \\n                    <table class=\\\"table table-hover\\\">\\n                      <thead>\\n                        <tr>\\n                          <th></th>\\n                          <th>AQUALITY Water Solutions Pvt Ltd</th>\\n                        </tr>\\n                      </thead>\\n                      <tbody>\\n                        <tr>\\n                          \\n                          <td></td>\\n                          <td>A/c No.</td>\\n                          <td><strong>111 905 000 338</strong></td>\\n                        </tr>\\n                        <tr>\\n                          \\n                          <td></td>\\n                          <td>Bank</td>\\n                          <td><strong>ICICI Bank - Filmnagar Br.</strong></td>\\n                        </tr>\\n                        <tr>\\n                          \\n                          <td></td>\\n                          <td>IFSC Code</td>\\n                          <td><strong>ICIC 000 1119</strong></td>\\n                        </tr>\\n                      </tbody>\\n                    </table>\\n                          \\n                  </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-6 col-xs-6\\\" style=\\\"margin-top:50px;\\\">\\n                    <div style=\\\"text-align: -webkit-center; margin-top:20%; \\\">\\n                       Name & Signature\\n                    </div>\\n                  </div>\\n                  </div><br> <br>\\n                  \\n\\n                 <div class=\\\"container-fluid\\\" style=\\\"background-color:none;\\\">\\n                  <div class=\\\"footer\\\">\\n                    <p><strong>THANK YOU FOR YOUR BUSINESS</strong> </p><hr>\\n                    <div class=\\\"footer-header\\\">\\n                      TERMS AND CONDITION\\n\\n                    </div>\\n                  </div>\\n\\n                 </div>\\n          \\n\\n            <!--<div class=\\\"col-md-6\\\" style=\\\"text-align: -webkit-left\\\">\\n\\n              <div>\\n                <strong>Aquality Water Solutions Pvt Ltd.</strong><br>\\n                <span># 8-1-284/OU/385/1&2, 4th Floor Bait-ul-Rida</span><br>\\n                <span>OU Colony Shaikpet, Lanco hills Lane</span><br>\\n                <span>Hyderabad, Telangana State - 500008</span><br>\\n                <span>India</span><br><br>\\n\\n                <span>Phone: +91 40 6888 8486</span><br>\\n                <span>Mobile: 709 389 8486</span><br>\\n                <span>www.aquality.in</span>\\n                <span>Email: accounts@aquality.in  | info@aquality.in</span>\\n                <span></span>\\n              </div>\\n            </div>\\n      \\n            \\n                <div class=\\\"col-md-offset-2 col-md-4\\\" style=\\\"text-align: -webkit-left;line-height: 2;\\\">\\n                    <span> <strong>Date: </strong> {{ proforma.created_on | date }} </span><br>\\n                    <span> <strong>Proforma ref: </strong> #123456</span><br><br>\\n                    \\n                  \\n                    <span> <strong>Valid upto: </strong> DD/MM/YYYY</span><br>\\n                    <span> <strong>Prepared by: </strong> Aquality</span><br>\\n                    <span> <strong>Mobile Number: </strong> {{ proforma.customerData?.mobile_primary }}</span><br>\\n                  <span> <strong>Proforma Number: </strong> #001</span><br>\\n                  <span> <strong>Proforma Date: </strong> {{ proforma.created_on | date }} </span><br>\\n                  <span> <strong>Payment Due: </strong> {{ proforma.created_on | date }}</span> <br>\\n                  <span> <strong>Amount Due (INR): </strong> INR. {{ proforma.amount_due }}</span><br>\\n                </div>-->\\n\\n                \\n              \\n          </div>\\n          <hr>\\n\\n          <!--middle row-->\\n          \\n          \\n        </div>\\n        <!--table section-->\\n        \\n      </div>\\n      <div style=\\\"margin-top:15px\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"downloadPDF()\\\"><i class=\\\"fa fa-download\\\"\\n                                                                                 aria-hidden=\\\"true\\\"></i>&nbsp;Download\\n          as PDF\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\"><i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>&nbsp;Export\\n          as CSV\\n        </button>\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-html/proforma-html.component.html\n// module id = ../../../../../src/app/proforma/proforma-html/proforma-html.component.html\n// module chunks = main","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  Input,\n  SimpleChanges,\n  OnChanges,\n  AfterContentInit,\n  AfterViewInit\n} from '@angular/core';\n\nimport {ProformaService} from '../proforma.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from \"rxjs\";\nimport {Proforma} from '../proforma';\nimport {CustomerService} from '../../customer/customer.service';\nimport {ProductService} from '../../product/product.service';\nimport {GeneralService} from '../../general/general.service';\nimport * as _ from 'underscore';\nimport {DatePipe} from '@angular/common';\nimport {UploadService} from '../../upload.service';\n\ndeclare let jsPDF;\ndeclare let html2canvas;\n\n@Component({\n  selector: 'app-proforma-html',\n  templateUrl: './proforma-html.component.html',\n  styleUrls: ['./proforma-html.component.css']\n})\nexport class ProformaHtmlComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('proformaBox') proformaBox: ElementRef;\n  @Input() autoProforma: any;\n  private id: any;\n  private subscription: Subscription;\n  public proforma: Proforma;\n  private type = '';\n  private finalTotal;\n  private finalTotalWords;\n  public currentDate: number = Date.now();\n  public datePipe: DatePipe = new DatePipe('en-US');\n  public tempProforma: Proforma;\n  public isAutoProforma: boolean = false;\n\n  constructor(private generalService: GeneralService, private productService: ProductService, private customerService: CustomerService, private proformaService: ProformaService, private route: ActivatedRoute) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['autoProforma']) {\n      this.isAutoProforma = true;\n      this.tempProforma = changes['autoProforma'].currentValue;\n    }\n  }\n\n  ngOnInit() {\n    this.generalService.displaySidebar(false);\n    this.subscription = this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.type = params['type'];\n      if (!this.isAutoProforma) {\n        this.getProformaById(params['id']);\n      } else {\n        this.proforma = this.tempProforma;\n        this.proforma['created_on'] = this.currentDate;\n        this.finalTotal = this.proforma.amount_due - this.proforma.discount;\n        this.finalTotalWords = this.numberToEnglish(this.proforma.total, '');\n      }\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    // if (this.isAutoproforma) {\n    //   this.downloadPDF();\n    //\n    // }\n  }\n\n  ngAfterViewInit(){\n    if (this.isAutoProforma) {\n      this.downloadPDF();\n    }\n  }\n\n  downloadPDF() {\n    html2canvas(document.getElementById('proforma_body'), {\n      onrendered: (canvas) => {\n        var imgData = canvas.toDataURL(\"image/jpeg\", 1.0);\n        var pdf = new jsPDF(\"p\", \"mm\", \"a4\");\n        pdf.addImage(imgData, 'JPEG', 0, 0, 210, 200);\n        if (this.isAutoProforma) {\n          var pdf = pdf.output('datauristring');\n          let data = {\n            pdf: pdf,\n            label: this.proforma.customerData.username + \"_\" + this.datePipe.transform(Date.now(), 'MMMM')\n          }\n\n          console.log(data);\n\n          this.proformaService.saveAutoProforma(data)\n            .subscribe(\n              (res) => {\n                console.log(res);\n              },\n              (err) => {\n                console.log(\"Error in auto pilot\");\n              }\n            )\n        } else {\n          pdf.save(this.proforma.customerData.username + \"_\" + this.datePipe.transform(Date.now(), 'MMMM') + \".pdf\");\n        }\n      }\n    });\n  }\n\n\n  getProformaById(id: string) {\n    this.proformaService.getProformaById(this.type, id)\n      .subscribe(\n        (res) => {\n          this.proforma = res;\n          this.proforma.total = 0;\n          this.proforma.productData = [];\n          // get product data\n          _.each(this.proforma.productList, (item) => {\n            this.productService.getProductById(item)\n              .subscribe(\n                (res) => {\n                  res['amount_with_vat'] = res['rate'] + (res['rate'] * (res['vat'] / 100));\n                  this.proforma.productData.push(res);\n                  this.proforma.total = this.proforma.total + res['amount_with_vat'];\n                  this.proforma.amount_due = this.proforma.total;\n                }, (err) => {\n\n                }, () => {\n                  if (this.proforma.amount_partially_paid.length > 0) {\n                    _.each(this.proforma.amount_partially_paid, (data) => {\n                      this.proforma.amount_due = this.proforma.amount_due - data['amount'];\n                    });\n                  }\n                  if (this.proforma.status == 'Paid') {\n                    this.proforma.amount_due = 0;\n                  }\n                  this.finalTotal = this.proforma.amount_due - this.proforma.discount;\n                  this.finalTotalWords = this.numberToEnglish(this.proforma.total, '');\n                }\n              )\n          });\n\n\n          //get customer data\n          this.customerService.getCustomerDetails(this.proforma.customer_id)\n            .subscribe(\n              (res) => {\n                this.proforma.customerData = res;\n              },\n              (err) => {\n\n              },\n              () => {\n                console.log(this.proforma);\n              }\n            )\n        },\n        (err) => {\n          console.log(err);\n        }\n      )\n  }\n\n  numberToEnglish(n, custom_join_character) {\n\n    var string = n.toString(),\n      units, tens, scales, start, end, chunks, chunksLen, chunk, ints, i, word, words;\n\n    var and = custom_join_character || 'and';\n\n    /* Is number zero? */\n    if (parseInt(string) === 0) {\n      return 'zero';\n    }\n\n    /* Array of units as words */\n    units = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\n\n    /* Array of tens as words */\n    tens = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\n\n    /* Array of scales as words */\n    scales = ['', 'thousand', 'million', 'billion', 'trillion', 'quadrillion', 'quintillion', 'sextillion', 'septillion', 'octillion', 'nonillion', 'decillion', 'undecillion', 'duodecillion', 'tredecillion', 'quatttuor-decillion', 'quindecillion', 'sexdecillion', 'septen-decillion', 'octodecillion', 'novemdecillion', 'vigintillion', 'centillion'];\n\n    /* Split user arguemnt into 3 digit chunks from right to left */\n    start = string.length;\n    chunks = [];\n    while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n    }\n\n    /* Check if function has enough scale words to be able to stringify the user argument */\n    chunksLen = chunks.length;\n    if (chunksLen > scales.length) {\n      return '';\n    }\n    /* Stringify each integer in each chunk */\n    words = [];\n    for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n      if (chunk) {\n        /* Split chunk into array of individual integers */\n        ints = chunks[i].split('').reverse().map(parseFloat);\n\n        /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n        if (ints[1] === 1) {\n          ints[0] += 10;\n        }\n\n        /* Add scale word if chunk is not zero and array item exists */\n        if ((word = scales[i])) {\n          words.push(word);\n        }\n\n        /* Add unit word if array item exists */\n        if ((word = units[ints[0]])) {\n          words.push(word);\n        }\n\n        /* Add tens word if array item exists */\n        if ((word = tens[ints[1]])) {\n          words.push(word);\n        }\n\n        /* Add 'and' string after units or tens integer if: */\n        if (ints[0] || ints[1]) {\n          /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n          if (ints[2] || !i && chunksLen) {\n            words.push(and);\n          }\n        }\n\n        /* Add hundreds word if array item exists */\n        if ((word = units[ints[2]])) {\n          words.push(word + ' hundred');\n        }\n      }\n    }\n    return words.reverse().join(' ');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-html/proforma-html.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-recent/proforma-recent.component.css\n// module id = ../../../../../src/app/proforma/proforma-recent/proforma-recent.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 1800px;\\\">\\n\\n  <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isProformaSaved\\\">Proforma Data Saved Successfully !!</div>\\n  <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isProformaError\\\">ERROR !! Please Try Again.</div>\\n\\n  <section class=\\\"content-header\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        Recent Proforma's\\n        <small><em> Generated for the month of {{ currentDate | date: 'MMMM' }} </em></small>\\n      </h1>\\n      <ol class=\\\"breadcrumb\\\">\\n        <li><a [routerLink]=\\\"[ '/' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> InvoiceApp</a></li>\\n        <li><a [routerLink]=\\\"[ '/' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Proforma</a></li>\\n        <li class=\\\"active\\\">Recent</li>\\n      </ol>\\n\\n      <div class=\\\"alert alert-warning\\\" *ngIf=\\\"showRemoveConfirmation && delProforma\\\">\\n        <h4>\\n          <strong>Delete Confirmation !!</strong> <br>\\n          Delete the proforma for <em>{{ delProforma.customerData?.username }} </em> ?\\n        </h4>\\n        <br>\\n        <button class=\\\"btn btn-success btn-sm\\\" (click)=\\\"removeConfirmation(true)\\\">YES</button>\\n        <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeConfirmation(false)\\\">NO</button>\\n      </div>\\n\\n    </div>\\n  </section>\\n\\n  <section class=\\\"content\\\">\\n\\n    <!--  Page Content Here -->\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"box box-primary\\\">\\n        <div class=\\\"box-header\\\" style=\\\"margin-top: 20px;margin-bottom: 20px;\\\">\\n          <h3 class=\\\"box-title\\\">Recent Proforma List</h3>\\n          <br>\\n          <div class=\\\"box-tools\\\">\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-offset-2 col-lg-4\\\">\\n                Filter : &nbsp;\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"All\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">All</label>\\n\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Paid\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Paid</label>\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Due\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Due</label>\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Partially Paid\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Partially Paid</label>\\n              </div>\\n              <div class=\\\"col-lg-6\\\" style=\\\"float:right\\\">\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-btn\\\">\\n                    <select style=\\\"font-size: 15px;height: 34px;\\\" (change)=\\\"filterChange($event.target.value)\\\">\\n                      <option value=\\\"username\\\">Username</option>\\n                      <option value=\\\"mobile_number\\\">Mobile Number</option>\\n                      <option value=\\\"area\\\">Area</option>\\n                    </select>\\n                  </div>\\n                  <!-- /btn-group -->\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"...\\\" placeholder=\\\"Search Recent Proformas\\\"\\n                         (input)=\\\"quickSearch($event.target.value)\\\">\\n                </div>\\n                <!-- /input-group -->\\n              </div>\\n            </div>\\n            <br><br>\\n            <!-- /.row -->\\n            <!-- /.row -->\\n          </div>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body table-responsive no-padding\\\" *ngIf=\\\"proformaList\\\">\\n\\n          <br>\\n          <div class=\\\"col-md-offset-4\\\">\\n            <pagination-controls (pageChange)=\\\"onPaginate($event);p=$event\\\"></pagination-controls>\\n          </div>\\n          <br>\\n\\n          <table class=\\\"table table-hover\\\">\\n            <tbody>\\n            <tr>\\n              <th>Username</th>\\n              <th>Fullname</th>\\n              <th>Mobile</th>\\n              <th>Area</th>\\n              <th>Product</th>\\n              <th>Due (INR)</th>\\n              <th>Paid (INR)</th>\\n              <th>Total (INR)</th>\\n              <th>Status</th>\\n              <th>Transaction Date</th>\\n              <th>Change Status</th>\\n              <th>Action</th>\\n            </tr>\\n            <tr\\n              *ngFor=\\\"let proforma of proformaList | paginate: { itemsPerPage: 30, currentPage: p, totalItems:totalCustomerCount }\\\">\\n              <td>{{ proforma.customerData?.username }}</td>\\n              <td>{{ proforma.customerData?.fullname }}</td>\\n              <td>{{ proforma.customerData?.mobile_primary }}</td>\\n              <td>{{ proforma.customerData?.areaData?.name }}</td>\\n              <!--<td><span *ngIf=\\\"proforma.customerData?.productData?.length>0\\\"> {{ proforma.customerData?.productData[0]?.name }} - <em *ngIf=\\\"proforma.customerData?.productData[0]?.rate\\\">{{ proforma.customerData?.productData[0]?.rate }} INR/month</em> </span>\\n                  <small class=\\\"label bg-blue\\\">{{ proforma.customerData?.productData.length }}</small>\\n              </td>-->\\n              <td>\\n                <small class=\\\"label bg-blue\\\">{{ proforma.customerData?.productData?.length }}</small>\\n              </td>\\n              <td>{{ proforma?.amount_due }}</td>\\n              <td>{{ proforma?.total - proforma?.amount_due }}</td>\\n              <td>{{ proforma?.total }}</td>\\n              <td>\\n                <label class=\\\"label label-danger\\\" *ngIf=\\\"proforma.status=='Due'\\\"> {{ proforma.status }} </label>\\n                <label class=\\\"label label-success\\\" *ngIf=\\\"proforma.status=='Paid'\\\"> {{ proforma.status }} </label>\\n                <label class=\\\"label label-warning\\\" *ngIf=\\\"proforma.status=='Partially Paid'\\\"> {{ proforma.status\\n                  }} </label>\\n              </td>\\n              <td *ngIf=\\\"proforma?.status=='Due' || proforma?.status=='Partially Paid'\\\">\\n                {{ proforma?.payment_due_date | date }}\\n              </td>\\n              <td *ngIf=\\\"proforma?.status=='Paid'\\\">\\n                {{ proforma?.paid_date | date }}\\n              </td>\\n              <td>\\n                <button class=\\\"btn btn-success btn-xs\\\" (click)=\\\"changeStatus('Paid',proforma)\\\"> Paid</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"changeStatus('Partially Paid',proforma)\\\"\\n                        data-toggle=\\\"modal\\\" data-target=\\\"#partiallyPaymentModal\\\"> Partially Paid\\n                </button>\\n                <button class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"changeStatus('Due',proforma)\\\"> Due</button>\\n              </td>\\n              <td>\\n                <a type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\"\\n                   [routerLink]=\\\"['/dashboard/proforma/view','recent',proforma?._id]\\\"> View</a>\\n                <!--<button class=\\\"btn btn-xs btn-danger\\\" (click)=\\\"remove(proforma)\\\"><i class=\\\"fa fa-times\\\"-->\\n                <!--aria-hidden=\\\"true\\\"></i></button>-->\\n              </td>\\n\\n              <!-- Modal for Partially payment -->\\n              <div class=\\\"modal fade\\\" id=\\\"partiallyPaymentModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n                   aria-labelledby=\\\"myModalLabel\\\">\\n                <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                  <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span\\n                        aria-hidden=\\\"true\\\">&times;</span></button>\\n                      <h2 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Partially Payment</h2>\\n                    </div>\\n                    <div class=\\\"modal-body\\\" *ngIf=\\\"partialProforma\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                          <h4 style=\\\"text-align: center\\\">Total: {{ partialProforma?.total }} BDT</h4>\\n                          <h4 style=\\\"text-align: center\\\">Due: {{ partialProforma?.amount_due }} BDT</h4>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                          <div *ngFor=\\\"let x of partialProforma?.amount_partially_paid\\\">\\n                            <h4 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} BDT</h4>\\n                            <h4 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} BDT</h4>\\n                            <br>\\n                          </div>\\n\\n                        </div>\\n                      </div>\\n                      <br>\\n                      <form class=\\\"form-horizontal\\\" *ngIf=\\\"partialProforma\\\">\\n                        <!--amoount partially paid-->\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid\\n                            (BDT) </label>\\n                          <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"text\\\" name=\\\"partialPay\\\" [(ngModel)]=\\\"partialPay\\\" class=\\\"form-control \\\"\\n                                   id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">\\n                          </div>\\n                        </div>\\n                      </form>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                      <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>-->\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePartialPay()\\\"\\n                              data-dismiss=\\\"modal\\\">Save changes\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </tr>\\n            </tbody>\\n\\n          </table>\\n        </div>\\n        <!-- /.box-body -->\\n      </div>\\n      <!-- /.box -->\\n      <div class=\\\"col-md-offset-4\\\">\\n        <pagination-controls (pageChange)=\\\"onPaginate($event);p=$event\\\"></pagination-controls>\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-recent/proforma-recent.component.html\n// module id = ../../../../../src/app/proforma/proforma-recent/proforma-recent.component.html\n// module chunks = main","import {Router} from '@angular/router';\nimport {Product} from '../../product/product';\nimport {Component, OnInit} from '@angular/core';\nimport {ProformaService} from '../proforma.service';\nimport {Customer} from '../../customer/customer';\nimport * as _ from 'underscore';\nimport {Proforma} from '../proforma';\nimport {ProductService} from '../../product/product.service';\nimport {AreaService} from '../../area/area.service';\nimport {CustomerService} from '../../customer/customer.service';\n\n@Component({\n  selector: 'app-proforma-recent',\n  templateUrl: './proforma-recent.component.html',\n  styleUrls: ['./proforma-recent.component.css']\n})\nexport class ProformaRecentComponent implements OnInit {\n  public currentDate: number = Date.now();\n  public proformaList: Proforma[] = [];\n  public searchMode = 'username';\n  public partialProforma: Proforma;\n  public paymentStatus: string;\n  public partialPay: any;\n  public isProformaSaved: boolean = false;\n  public isProformaError: boolean = false;\n  public showRemoveConfirmation: boolean = false;\n  public delProforma: any;\n  public paginator = 1;\n  totalCustomerCount: number = 0;\n\n  constructor(private customerService: CustomerService, private router: Router, private proformaService: ProformaService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  ngOnInit() {\n    this.customerService.getTotalCustomerCount()\n      .subscribe(\n        (res) => {\n          this.totalCustomerCount = res.count;\n        }\n      )\n    this.getRecentProformaDB();\n    // this.wakeUpProformaDemon();\n  }\n\n  //useless shitty method\n  wakeUpProformaDemon() {\n    this.proformaService.cleanProforma()\n      .subscribe(\n        (res) => {\n          if (res.status) {\n            this.generateNewProforma();\n          } else {\n            this.getRecentProformaDB();\n          }\n        }\n      )\n  }\n\n  //useless shitty method\n  generateNewProforma() {\n    this.proformaService.dropRecentProforma()\n      .subscribe(\n        (res) => {\n          this.buildAndSaveRecentProforma();\n        }\n      )\n  }\n\n  getRecentProformaDB() {\n    this.proformaList = [];\n    this.proformaService.getRecentProformaDB(this.paginator)\n      .subscribe(\n        (res: Proforma[]) => {\n          _.each(res, (proforma: Proforma) => {\n            let customer: Customer;\n            this.customerService.getCustomerDetails(proforma.customer_id)\n              .subscribe(\n                (res: Customer) => {\n                  if (res['status']) {\n                    customer = res;\n                    customer.productData = [];\n                    if (proforma.productList.length > 0) {\n                      _.each(proforma.productList, (element) => {\n                        this.productService.getProductById(element)\n                          .subscribe(\n                            (res: Product) => {\n                              customer[\"productData\"].push(res);\n                            }\n                          )\n                      });\n                    }\n                    this.areaService.getAreaById(customer.area)\n                      .subscribe(\n                        (res) => {\n                          customer[\"areaData\"] = res;\n                        },\n                      )\n                      proforma.customerData = customer;\n                    this.proformaList.push(proforma);\n                  }\n                }\n              )\n          });\n        },\n        (err) => {\n\n        },\n        () => {\n          for (let i = 0; i < this.proformaList.length; i++) {\n            console.log(\"Hello World\");\n          }\n        }\n      )\n  }\n\n  buildAndSaveRecentProforma() {\n    this.proformaService.buildAndSaveRecentProforma()\n      .subscribe(\n        (res) => {\n          this.getRecentProformaDB();\n        },\n        (err) => {\n          console.log('Error in build and save');\n        }\n      )\n  }\n\n  saveRecentProforma(proforma: Proforma) {\n    this.proformaService.saveRecentProforma(proforma)\n      .subscribe(\n        (res) => {\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  filterChange(event: any) {\n    this.searchMode = event;\n  }\n\n  quickSearch(event: any) {\n    if (event == '') {\n      this.getRecentProformaDB();\n      return;\n    }\n    let reg = new RegExp(event, \"i\");\n    let resArray = [];\n    if (this.searchMode == 'username') {\n      _.each(this.proformaList, (item) => {\n        if (reg.test(item['customerData']['username'])) {\n          resArray.push(item);\n        }\n      });\n      this.proformaList = resArray;\n    }\n    else if (this.searchMode == 'mobile_number') {\n      _.each(this.proformaList, (item) => {\n        if (reg.test(item['customerData']['mobile_primary'])) {\n          resArray.push(item);\n        }\n      });\n      this.proformaList = resArray;\n    }\n    else if (this.searchMode == 'area') {\n      _.each(this.proformaList, (item) => {\n        if (reg.test(item['customerData']['areaData']['name'])) {\n          resArray.push(item);\n        }\n      });\n      this.proformaList = resArray;\n    }\n  }\n\n  changeStatus(status: string, proforma: Proforma) {\n    if (status == 'Paid') {\n      this.setPaidDateCounter(proforma);\n      proforma.status = 'Paid';\n      proforma.paid_date = Date.now();\n      proforma.amount_due = 0;\n    } else if (status == 'Due') {\n      proforma.status = 'Due';\n      proforma.amount_due = proforma.total;\n      proforma.amount_partially_paid = [];\n    } else if (status == 'Partially Paid') {\n      this.partialProforma = proforma;\n    }\n\n    proforma['type'] = 'recent';\n    this.proformaService.changeProformaStatus(proforma)\n      .subscribe(\n        (res) => {\n        }\n      )\n  }\n\n  setPaidDateCounter(proforma: Proforma) {\n    this.proformaService.setPaidDateCounter(proforma)\n      .subscribe(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          console.log(\"Error in setpaiddatecounter\");\n        }\n      )\n  }\n\n  toggleSearchStatus(event: any) {\n    this.getRecentProformaDB();\n    this.paymentStatus = event.target.value;\n    if (this.paymentStatus == 'All') {\n      return;\n    }\n    let resArray = [];\n    _.each(this.proformaList, (item) => {\n      if (_.isEqual(item.status, this.paymentStatus)) {\n        resArray.push(item);\n      }\n    });\n    this.proformaList = resArray;\n  }\n\n  savePartialPay() {\n    let data = {\n      id: this.partialProforma['_id'],\n      amount_partially_paid: this.partialPay\n    }\n\n    this.proformaService.savePartialPay(data)\n      .subscribe(\n        (res) => {\n          if (res['status']) {\n            this.partialPay = 0;\n            this.getRecentProformaDB();\n          }\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  remove(delProforma) {\n    this.showRemoveConfirmation = true;\n    this.delProforma = delProforma;\n  }\n\n  removeConfirmation(status) {\n    if (status) {\n      this.proformaService.deleteProforma(this.delProforma)\n        .subscribe(\n          (res) => {\n            if (res['status']) {\n              this.proformaList = _.without(this.proformaList, _.findWhere(this.proformaList, {\n                _id: this.delProforma['_id']\n              }));\n              this.showRemoveConfirmation = false;\n            }\n          },\n          (err) => {\n          }\n        )\n    } else {\n      this.delProforma = undefined;\n      this.showRemoveConfirmation = false;\n    }\n  }\n\n  //  for pagination\n  onPaginate(event: any) {\n    this.paginator = event;\n    this.getRecentProformaDB();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-recent/proforma-recent.component.ts","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nconst proformaRoutes = [\n];\n@NgModule({\n    imports: [\n        RouterModule.forChild(proformaRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class ProformaRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-search/proforma-search.component.css\n// module id = ../../../../../src/app/proforma/proforma-search/proforma-search.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height:100vh\\\">\\n\\n  <div class=\\\"alert alert-warning\\\" *ngIf=\\\"showRemoveConfirmation && delProforma\\\">\\n    <h4>\\n      <strong>Delete Confirmation !!</strong> <br>\\n      Delete the proforma for <em>{{ delProforma.customerData?.username }} </em>  ?\\n    </h4>\\n    <br>\\n    <button class=\\\"btn btn-success btn-sm\\\" (click)=\\\"removeConfirmation(true)\\\">YES</button>\\n    <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeConfirmation(false)\\\">NO</button>\\n  </div>\\n\\n  <section class=\\\"content\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"box box-primary\\\">\\n        <h2 style=\\\"margin-left:10px\\\">Search Proforma's of any customer</h2>\\n        <hr>\\n\\n        <!--search results for proformas show box-->\\n        <div class=\\\"box-body table-responsive no-padding\\\" style=\\\"margin-top:20px;margin-bottom: 20px\\\"\\n             *ngIf=\\\"proformaList.length>0\\\">\\n          <table class=\\\"table table-hover\\\">\\n            <tbody>\\n            <tr>\\n              <th>Username</th>\\n              <th>Fullname</th>\\n              <th>Mobile</th>\\n              <th>Area</th>\\n              <th>Product</th>\\n              <!--<th>Due (INR)</th>\\n              <th>Paid (INR)</th>-->\\n              <th>Total (INR)</th>\\n              <!--<th>Status</th>-->\\n              <th>Proforma Generated On</th>\\n              <!--<th>Last Transaction Date</th>\\n              <th>Change Status</th>-->\\n              <th>Action</th>\\n            </tr>\\n            <tr\\n              *ngFor=\\\"let proforma of proformaList\\\">\\n              <td>{{ proforma.customerData?.username }}</td>\\n              <td>{{ proforma.customerData?.fullname }}</td>\\n              <td>{{ proforma.customerData?.mobile_primary }}</td>\\n              <td>{{ proforma.customerData?.areaData?.name }}</td>\\n              <td><span *ngIf=\\\"proforma.customerData?.productData?.length>0\\\"> {{ proforma.customerData?.productData[0]?.name }} - <em *ngIf=\\\"proforma.customerData?.productData[0]?.rate\\\">{{ proforma.customerData?.productData[0]?.rate }} INR/month</em> </span>\\n                  <small class=\\\"label bg-blue\\\">{{ proforma.customerData?.productData.length }}</small>\\n              </td>\\n              <!--<td>\\n                <small class=\\\"label bg-blue\\\">{{ proforma.customerData?.productData?.length }}</small>\\n              </td>-->\\n              <!--<td>{{ proforma?.amount_due }}</td>-->\\n              <!--<td>{{ proforma?.total - proforma?.amount_due }}</td>-->\\n              <td>{{ proforma?.total }}</td>\\n              <!--<td>\\n                <label class=\\\"label label-danger\\\" *ngIf=\\\"proforma.status=='Due'\\\"> {{ proforma.status }} </label>\\n                <label class=\\\"label label-success\\\" *ngIf=\\\"proforma.status=='Paid'\\\"> {{ proforma.status }} </label>\\n                <label class=\\\"label label-warning\\\" *ngIf=\\\"proforma.status=='Partially Paid'\\\"> {{ proforma.status\\n                  }} </label>\\n              </td>-->\\n              <td>\\n                {{ proforma?.created_on | date: 'yMMMd' }}\\n              </td>\\n              <!--<td *ngIf=\\\"proforma?.status=='Due' || proforma?.status=='Partially Paid'\\\">\\n                {{ proforma?.payment_due_date | date }}\\n              </td>-->\\n              <td *ngIf=\\\"proforma?.status=='Paid'\\\">\\n                {{ proforma?.paid_date | date }}\\n              </td>\\n             <!-- <td>\\n                <button class=\\\"btn btn-success btn-xs\\\" (click)=\\\"changeStatus('Paid',proforma)\\\"> Paid</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"changeStatus('Partially Paid',proforma)\\\"\\n                        data-toggle=\\\"modal\\\" data-target=\\\"#partiallyPaymentModal\\\"> Partially Paid\\n                </button>\\n                <button class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"changeStatus('Due',proforma)\\\"> Due</button>\\n              </td>-->\\n              <td>\\n                <a type=\\\"button\\\" *ngIf=\\\"proforma?.type=='recent'\\\" class=\\\"btn btn-primary btn-xs\\\"\\n                   [routerLink]=\\\"['/dashboard/proforma/view','recent',proforma?._id]\\\">\\n                  View</a>\\n                <a type=\\\"button\\\" *ngIf=\\\"proforma?.type!='recent'\\\" class=\\\"btn btn-primary btn-xs\\\"\\n                   [routerLink]=\\\"['/dashboard/proforma/view','all',proforma?._id]\\\">\\n                  View</a>\\n\\n                <button class=\\\"btn btn-xs btn-danger\\\" (click)=\\\"remove(proforma)\\\"><i class=\\\"fa fa-times\\\"\\n                                                                                   aria-hidden=\\\"true\\\"></i></button>\\n              </td>\\n\\n              <!-- Modal for Partially payment -->\\n              <div class=\\\"modal fade\\\" id=\\\"partiallyPaymentModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n                   aria-labelledby=\\\"myModalLabel\\\">\\n                <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                  <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span\\n                        aria-hidden=\\\"true\\\">&times;</span></button>\\n                      <h2 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Partially Payment</h2>\\n                    </div>\\n                    <div class=\\\"modal-body\\\" *ngIf=\\\"partialProforma\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                          <h4 style=\\\"text-align: center\\\">Total: {{ partialProforma?.total }} INR</h4>\\n                          <h4 style=\\\"text-align: center\\\">Due: {{ partialProforma?.amount_due }} INR</h4>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                          <div *ngFor=\\\"let x of partialProforma?.amount_partially_paid\\\">\\n                            <h4 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} INR</h4>\\n                            <h4 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} INR</h4>\\n                            <br>\\n                          </div>\\n\\n                        </div>\\n                      </div>\\n                      <br>\\n                      <form class=\\\"form-horizontal\\\" *ngIf=\\\"partialProforma\\\">\\n                        <!--amoount partially paid-->\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid\\n                            (INR) </label>\\n                          <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"text\\\" name=\\\"partialPay\\\" [(ngModel)]=\\\"partialPay\\\" class=\\\"form-control \\\"\\n                                   id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">\\n                          </div>\\n                        </div>\\n                      </form>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                      <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>-->\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePartialPay(partialProforma)\\\"\\n                              data-dismiss=\\\"modal\\\">Save changes\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </tr>\\n            </tbody>\\n\\n          </table>\\n        </div>\\n\\n        <!--search box and functionality-->\\n        <div class=\\\"container\\\">\\n          <div class=\\\"col-lg-12\\\">\\n            <form class=\\\"form-group\\\">\\n              <input style=\\\"width:100%\\\" (keyup)=\\\"getSearchText($event)\\\" id=\\\"search_form\\\" type=\\\"text\\\" class=\\\"\\\"\\n                     placeholder=\\\"Search for a customer\\\">\\n            </form>\\n\\n            <!--search resultsa-->\\n            <div *ngIf=\\\"searchResults.length>0\\\">\\n              <strong style=\\\"font-size: 20px\\\"> Search results: </strong> <span class=\\\"search_text\\\"\\n                                                                               style=\\\"color:blue;font-size: 20px\\\">{{ searchText }}</span>\\n              <br>\\n              <ul style=\\\"list-style-type:none\\\">\\n                <li *ngFor=\\\"let customer of searchResults\\\">\\n                 <span style=\\\"font-size: 20px\\\">\\n                   <a href=\\\"javascript:void(0)\\\" (click)=\\\"getSearchDetails(customer)\\\">\\n                   <em>{{ customer['username'] }}</em> - {{ customer['fullname']}}\\n                 </a>\\n                 </span>\\n                  <br>\\n                </li>\\n                <hr>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </section>\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-search/proforma-search.component.html\n// module id = ../../../../../src/app/proforma/proforma-search/proforma-search.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {Proforma} from '../proforma';\nimport {ProformaService} from '../proforma.service';\nimport {Customer} from '../../customer/customer';\nimport {Product} from '../../product/product';\nimport {AreaService} from '../../area/area.service';\nimport {CustomerService} from '../../customer/customer.service';\nimport {ProductService} from '../../product/product.service';\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-proforma-search',\n  templateUrl: './proforma-search.component.html',\n  styleUrls: ['./proforma-search.component.css']\n})\nexport class ProformaSearchComponent implements OnInit {\n  public searchText: string;\n  public searchResults: any[] = [];\n  public proformaList: Proforma[] = [];\n  public partialProforma: Proforma;\n  public partialPay: any;\n  public delProforma: Proforma;\n  public showRemoveConfirmation: boolean = false;\n\n  constructor(private customerService: CustomerService, private proformaService: ProformaService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  ngOnInit() {\n  }\n\n\n  getSearchText(event: any) {\n    this.proformaList = [];\n    this.searchResults = [];\n    this.searchText = event.target.value;\n    this.getGlobalProformaSearchByCustomer();\n  }\n\n\n  getGlobalProformaSearchByCustomer() {\n    this.proformaService.globalProformaSearchByCustomer(this.searchText)\n      .subscribe(\n        (res) => {\n          this.searchResults = res;\n        }\n      )\n  }\n\n  getSearchDetails(data) {\n    let id = data['_id'];\n    this.proformaList = [];\n    this.proformaService.getProformaByCustomerId(id)\n      .subscribe(\n        (res) => {\n          _.each(res, (proforma: Proforma) => {\n            let customer: Customer;\n\n            if (proforma['type']=='') {\n              proforma['type'] = 'recent';\n            }\n\n            this.customerService.getCustomerDetails(proforma.customer_id)\n              .subscribe(\n                (res: Customer) => {\n                  customer = res;\n                  if (customer['status']) {\n                    customer.productData = [];\n                    if (proforma.productList.length > 0) {\n                      _.each(proforma.productList, (element) => {\n                        this.productService.getProductById(element)\n                          .subscribe(\n                            (res: Product) => {\n                              customer['productData'].push(res);\n                            }\n                          )\n                      })\n                    }\n\n                    this.areaService.getAreaById(customer.area)\n                      .subscribe(\n                        (res) => {\n                          customer['areaData'] = res;\n                        }\n                      )\n                      proforma.customerData = customer;\n                    this.proformaList.push(proforma);\n                  }\n                }\n              )\n          })\n        },\n        (err) => {\n          console.log('Error in getSearchDetails');\n        }\n      )\n  }\n\n\n  changeStatus(status: string, proforma: Proforma) {\n    if (status == 'Paid') {\n      this.setPaidDateCounter(proforma);\n      proforma.status = 'Paid';\n      proforma.paid_date = Date.now();\n      proforma.amount_due = 0;\n    } else if (status == 'Due') {\n      proforma.status = 'Due';\n      proforma.amount_due = proforma.total;\n      proforma.amount_partially_paid = [];\n    } else if (status == 'Partially Paid') {\n      this.partialProforma = proforma;\n    }\n\n    if (proforma['type'] != 'recent') {\n      proforma['type'] = 'all';\n    }\n    this.proformaService.changeProformaStatus(proforma)\n      .subscribe(\n        (res) => {\n\n        }\n      )\n  }\n\n  setPaidDateCounter(proforma: Proforma) {\n    this.proformaService.setPaidDateCounter(proforma)\n      .subscribe(\n        (res) => {\n          // console.log(res);\n        },\n        (err) => {\n          console.log(\"Error in setpaiddatecounter\");\n        }\n      )\n  }\n\n  savePartialPay(proforma: Proforma) {\n    let data = {\n      id: this.partialProforma['_id'],\n      amount_partially_paid: this.partialPay\n    }\n\n    this.proformaService.savePartialPay(data)\n      .subscribe(\n        (res) => {\n          if (res['status']) {\n            this.partialPay = 0;\n            this.getSearchDetails({_id: proforma.customer_id});\n          }\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  remove(proforma: Proforma) {\n    this.showRemoveConfirmation = true;\n    this.delProforma = proforma;\n  }\n\n\n  removeConfirmation(status) {\n    if (status) {\n      this.proformaService.deleteProforma(this.delProforma)\n        .subscribe(\n          (res) => {\n            if (res['status']) {\n              this.proformaList = _.without(this.proformaList, _.findWhere(this.proformaList, {\n                _id: this.delProforma['_id']\n              }));\n              this.showRemoveConfirmation = false;\n            }\n          },\n          (err) => {\n\n          }\n        )\n    } else {\n      this.delProforma = undefined;\n      this.showRemoveConfirmation = false;\n    }\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma-search/proforma-search.component.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {Ng2PaginationModule} from 'ng2-pagination';\nimport {DialogModule} from 'primeng/primeng';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ProformaRoutingModule} from './proforma-routing.module';\nimport {ProformaAllComponent} from './proforma-all/proforma-all.component';\nimport {ProformaCreateComponent} from './proforma-create/proforma-create.component';\nimport {ProformaService} from './proforma.service';\nimport {ProformaRecentComponent} from './proforma-recent/proforma-recent.component';\nimport {ProductService} from '../product/product.service';\nimport {AreaService} from '../area/area.service';\nimport {ProformaEditComponent} from './proforma-edit/proforma-edit.component';\nimport {ProformaHtmlComponent} from './proforma-html/proforma-html.component';\nimport {CustomerService} from '../customer/customer.service';\nimport {GeneralService} from '../general/general.service';\nimport { ProformaSearchComponent } from './proforma-search/proforma-search.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Ng2PaginationModule,\n    DialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ProformaRoutingModule,\n  ],\n  declarations: [\n    ProformaAllComponent,\n    ProformaCreateComponent,\n    ProformaRecentComponent,\n    ProformaEditComponent,\n    ProformaHtmlComponent,\n    ProformaSearchComponent\n  ],\n  exports: [\n    ProformaHtmlComponent\n  ],\n  providers: [\n    ProformaService,\n    ProductService,\n    AreaService,\n    CustomerService,\n    GeneralService\n  ]\n})\nexport class ProformaModule {\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma.module.ts","import {Injectable} from '@angular/core';\nimport {CustomHttpService} from \"../custom-http.service\";\nimport {environment} from \"../../environments/environment\";\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class ProformaService {\n\n  private proformaUrl = environment.api_server + 'proforma/';\n\n  constructor(private http: CustomHttpService) {\n  }\n\n  removeProforma(proforma) {\n    let url = this.proformaUrl + 'remove-proforma';\n    return this.http.post(url, proforma).map((res) => res.json());\n  }\n\n  getProformaByCustomerId(id) {\n    let url = this.proformaUrl + 'by-customer-id/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  globalProformaSearchByCustomer(query) {\n    let url = this.proformaUrl + 'global-search-by-customer/' + query;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  saveAutoProforma(data) {\n    let url = this.proformaUrl + 'save-auto-proforma';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  getAllProforma(paginator) {\n    let url = this.proformaUrl + 'all/page=' + paginator;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  getRecentProforma() {\n    let url = this.proformaUrl + 'recent';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  storeProforma(data: any) {\n    let url = this.proformaUrl + 'create';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  downloadPDF(data: any) {\n    let url = this.proformaUrl + 'generate/pdf';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  getProformaById(type: string, id: string) {\n    let url = this.proformaUrl + type + '/id/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  searchByUsername(data: any) {\n    let url = this.proformaUrl + 'search/username/';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  saveRecentProforma(data: any) {\n    let url = this.proformaUrl + 'recent/save';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  dropRecentProforma() {\n    let url = this.proformaUrl + 'drop/recent/all';\n    return this.http.get(url).map(res => res.json());\n  }\n\n  checkIfRecentProformaExists() {\n    let url = this.proformaUrl + 'recent_proforma/exists';\n    return this.http.get(url).map(res => res.json());\n  }\n\n  getRecentProformaDB(paginator: number) {\n    let url = this.proformaUrl + 'recent_proforma_db/paginator=' + paginator;\n    return this.http.get(url).map(res => res.json());\n  }\n\n  cleanProforma() {\n    let url = this.proformaUrl + 'clean_proforma';\n    return this.http.get(url).map(res => res.json());\n  }\n\n  changeProformaStatus(data: any) {\n    let url = this.proformaUrl + 'change_status';\n    return this.http.put(url, data).map((res) => res.json());\n  }\n\n  //get total of all products in product list\n  getTotal(data: any) {\n    let url = this.proformaUrl + 'product_list/total';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  buildAndSaveRecentProforma() {\n    let url = this.proformaUrl + 'recent/build_and_save';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  savePartialPay(data: any) {\n    let url = this.proformaUrl + 'recent/partial_pay/save';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  preGenerateProformaUpdate(data: any) {\n    let url = this.proformaUrl + 'pre_generate_update';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  deleteProforma(proforma) {\n    let url = this.proformaUrl + 'delete';\n    return this.http.post(url, proforma).map((res) => res.json());\n  }\n\n  setPaidDateCounter(proforma) {\n    let url = this.proformaUrl + 'set_paid_date_counter';\n    return this.http.post(url, proforma).map((res) => res.json());\n  }\n\n  getPaidDateCounter() {\n    let url = this.proformaUrl + 'get_paid_date_counter';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  getAllProformaCount() {\n    let url = this.proformaUrl + 'all_proforma_count';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  createNewProforma(data: any) {\n    let url = this.proformaUrl + 'create/new';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/proforma/proforma.service.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-all/quotation-all.component.css\n// module id = ../../../../../src/app/quotation/quotation-all/quotation-all.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 3000px;\\\">\\r\\n    <section class=\\\"content-header\\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <h1>\\r\\n          All Quotations\\r\\n        </h1>\\r\\n        <ol class=\\\"breadcrumb\\\">\\r\\n          <li><a [routerLink]=\\\"[ '/dashboard/home' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Sofkul</a></li>\\r\\n          <li><a [routerLink]=\\\"[ '/dashboard/quotation/all' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Quotation</a></li>\\r\\n          <li class=\\\"active\\\">All</li>\\r\\n        </ol>\\r\\n      </div>\\r\\n    </section>\\r\\n  \\r\\n    <section class=\\\"content\\\">\\r\\n      <!--  Page Content Here -->\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <div class=\\\"box box-primary\\\">\\r\\n          <div class=\\\"box-header\\\" style=\\\"margin-top: 20px;margin-bottom: 20px;\\\">\\r\\n            <h3 class=\\\"box-title\\\">List Of All Quotation</h3>\\r\\n            <br>\\r\\n            <div class=\\\"box-tools\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <!--<div class=\\\"col-md-offset-2 col-lg-4\\\">\\r\\n                  Filter : &nbsp;\\r\\n                  <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"All\\\"\\r\\n                                                     (change)=\\\"toggleSearchStatus($event)\\\">All</label>\\r\\n  \\r\\n                  <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Paid\\\"\\r\\n                                                     (change)=\\\"toggleSearchStatus($event)\\\">Paid</label>\\r\\n                  <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Due\\\"\\r\\n                                                     (change)=\\\"toggleSearchStatus($event)\\\">Due</label>\\r\\n                  <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Partially Paid\\\"\\r\\n                                                     (change)=\\\"toggleSearchStatus($event)\\\">Partially Paid</label>\\r\\n                </div>-->\\r\\n                <div class=\\\"col-lg-6\\\" style=\\\"float:right\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <div class=\\\"input-group-btn\\\">\\r\\n                      <select style=\\\"font-size: 15px;height: 34px;\\\" (change)=\\\"filterChange($event.target.value)\\\">\\r\\n                        <option value=\\\"username\\\">Username</option>\\r\\n                        <option value=\\\"mobile_number\\\">Mobile Number</option>\\r\\n                        <option value=\\\"area\\\">Area</option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                    <!-- /btn-group -->\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"...\\\" placeholder=\\\"Search Recent Quotations\\\"\\r\\n                           (input)=\\\"quickSearch($event.target.value)\\\">\\r\\n                  </div>\\r\\n                  <!-- /input-group -->\\r\\n                </div>\\r\\n              </div>\\r\\n              <br><br>\\r\\n              <!-- /.row -->\\r\\n              <!-- /.row -->\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- /.box-header -->\\r\\n          <div class=\\\"box-body table-responsive no-padding\\\" *ngIf=\\\"quotationList\\\">\\r\\n            <table class=\\\"table table-hover\\\">\\r\\n              <tbody>\\r\\n              <tr>\\r\\n                <th>Username</th>\\r\\n                <th>Fullname</th>\\r\\n                <th>Mobile</th>\\r\\n                <th>Area</th>\\r\\n                <th>Product</th>\\r\\n                <!--<th>Due (INR)</th>\\r\\n                <th>Paid (INR)</th>-->\\r\\n                <th>Total (INR)</th>\\r\\n                <!--<th>Status</th>-->\\r\\n                <th>Quotation Generated On</th>\\r\\n                <!--<th>Last Transaction Date</th>-->\\r\\n                <!--<th>Change Status</th>-->\\r\\n                <th>Action</th>\\r\\n              </tr>\\r\\n              <tr\\r\\n                *ngFor=\\\"let quotation of quotationList | paginate: { itemsPerPage: 30, currentPage: p, totalItems:totalQuotationCount }\\\">\\r\\n                <td>{{ quotation.customerData?.username }}</td>\\r\\n                <td>{{ quotation.customerData?.fullname }}</td>\\r\\n                <td>{{ quotation.customerData?.mobile_primary }}</td>\\r\\n                <td>{{ quotation.customerData?.areaData?.name }}</td>\\r\\n                <td><span *ngIf=\\\"quotation.customerData?.productData?.length>0\\\"> {{ quotation.customerData?.productData[0]?.name }} - <em *ngIf=\\\"quotation.customerData?.productData[0]?.rate\\\">{{ quotation.customerData?.productData[0]?.rate }} INR/month</em> </span>\\r\\n                    <small class=\\\"label bg-blue\\\">{{ quotation.customerData?.productData.length }}</small>\\r\\n                </td>\\r\\n                <!--<td>\\r\\n                  <small class=\\\"label bg-blue\\\">{{ quotation.customerData?.productData?.length }}</small>\\r\\n                </td>-->\\r\\n                <!--<td>{{ quotation?.amount_due }}</td>\\r\\n                <td>{{ quotation?.total - quotation?.amount_due }}</td>-->\\r\\n                <td>{{ quotation?.total }}</td>\\r\\n               <!-- <td>\\r\\n                  <label class=\\\"label label-danger\\\" *ngIf=\\\"quotation.status=='Due'\\\"> {{ quotation.status }} </label>\\r\\n                  <label class=\\\"label label-success\\\" *ngIf=\\\"quotation.status=='Paid'\\\"> {{ quotation.status }} </label>\\r\\n                  <label class=\\\"label label-warning\\\" *ngIf=\\\"quotation.status=='Partially Paid'\\\"> {{ quotation.status\\r\\n                    }} </label>\\r\\n                </td>-->\\r\\n                <td>\\r\\n                  {{ quotation?.created_on | date: 'yMMMd' }}\\r\\n                </td>\\r\\n               <!-- <td *ngIf=\\\"quotation?.status=='Due' || quotation?.status=='Partially Paid'\\\">\\r\\n                  {{ quotation?.payment_due_date | date }}\\r\\n                </td>-->\\r\\n                <td *ngIf=\\\"quotation?.status=='Paid'\\\">\\r\\n                  {{ quotation?.paid_date | date }}\\r\\n                </td>\\r\\n               <!-- <td>\\r\\n                  <button class=\\\"btn btn-success btn-xs\\\" (click)=\\\"changeStatus('Paid',quotation)\\\"> Paid</button>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"changeStatus('Partially Paid',quotation)\\\"\\r\\n                          data-toggle=\\\"modal\\\" data-target=\\\"#partiallyPaymentModal\\\"> Partially Paid\\r\\n                  </button>\\r\\n                  <button class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"changeStatus('Due',quotation)\\\"> Due</button>\\r\\n                </td>-->\\r\\n                <td>\\r\\n                  <a type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\"\\r\\n                     [routerLink]=\\\"['/dashboard/quotation/view','all',quotation?._id]\\\">\\r\\n                    View</a>\\r\\n                </td>\\r\\n  \\r\\n                <!-- Modal for Partially payment -->\\r\\n                <!--<div class=\\\"modal fade\\\" id=\\\"partiallyPaymentModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n                     aria-labelledby=\\\"myModalLabel\\\">\\r\\n                  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n                    <div class=\\\"modal-content\\\">\\r\\n                      <div class=\\\"modal-header\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span\\r\\n                          aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n                        <h2 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Partially Payment</h2>\\r\\n                      </div>\\r\\n                      <div class=\\\"modal-body\\\" *ngIf=\\\"partialQuotation\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                          <div class=\\\"col-md-6\\\">\\r\\n                            <h4 style=\\\"text-align: center\\\">Total: {{ partialQuotation?.total }} INR</h4>\\r\\n                            <h4 style=\\\"text-align: center\\\">Due: {{ partialQuotation?.amount_due }} INR</h4>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-md-6\\\">\\r\\n                            <div *ngFor=\\\"let x of partialQuotation?.amount_partially_paid\\\">\\r\\n                              <h4 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} INR</h4>\\r\\n                              <h4 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} INR</h4>\\r\\n                              <br>\\r\\n                            </div>\\r\\n  \\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <br>\\r\\n                        <form class=\\\"form-horizontal\\\" *ngIf=\\\"partialQuotation\\\">-->\\r\\n                          <!--amoount partially paid-->\\r\\n                         <!--<div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid\\r\\n                              (INR) </label>\\r\\n                            <div class=\\\"col-sm-10\\\">\\r\\n                              <input type=\\\"text\\\" name=\\\"partialPay\\\" [(ngModel)]=\\\"partialPay\\\" class=\\\"form-control \\\"\\r\\n                                     id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </form>\\r\\n                      </div>\\r\\n                      <div class=\\\"modal-footer\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePartialPay()\\\"\\r\\n                                data-dismiss=\\\"modal\\\">Save changes\\r\\n                        </button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>-->\\r\\n              </tr>\\r\\n              </tbody>\\r\\n  \\r\\n            </table>\\r\\n          </div>\\r\\n          <!-- /.box-body -->\\r\\n        </div>\\r\\n        <!-- /.box -->\\r\\n        <div class=\\\"col-md-offset-4\\\">\\r\\n          <pagination-controls (pageChange)=\\\"onPaginate($event);p=$event\\\"></pagination-controls>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-all/quotation-all.component.html\n// module id = ../../../../../src/app/quotation/quotation-all/quotation-all.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {QuotationService} from '../quotation.service';\r\nimport {Quotation} from '../quotation';\r\nimport {Customer} from '../../customer/customer';\r\nimport {Product} from '../../product/product';\r\nimport {AreaService} from '../../area/area.service';\r\nimport {CustomerService} from '../../customer/customer.service';\r\nimport {ProductService} from '../../product/product.service';\r\nimport * as _ from 'underscore';\r\n\r\n@Component({\r\n  selector: 'app-quotation-all',\r\n  templateUrl: './quotation-all.component.html',\r\n  styleUrls: ['./quotation-all.component.css']\r\n})\r\nexport class QuotationAllComponent implements OnInit {\r\n\r\n  public quotationList: Quotation[] = [];\r\n  public partialQuotation: Quotation;\r\n  totalQuotationCount: number = 0;\r\n  public paginator = 1;\r\n\r\n  constructor(private customerService: CustomerService, private router: Router, private quotationService: QuotationService, private productService: ProductService, private areaService: AreaService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.quotationService.getAllQuotationCount()\r\n      .subscribe(\r\n        (res) => {\r\n          this.totalQuotationCount = res.count;\r\n        }\r\n      );\r\n    this.getAllQuotation();\r\n\r\n  }\r\n\r\n  getAllQuotation() {\r\n    this.quotationList = [];\r\n    this.quotationService.getAllQuotation(this.paginator)\r\n      .subscribe(\r\n        (res: Quotation[]) => {\r\n          if (res.length == 0) {\r\n            this.quotationList = [];\r\n          } else {\r\n            _.each(res, (quotation: Quotation) => {\r\n              let customer: Customer;\r\n              this.customerService.getCustomerDetails(quotation.customer_id)\r\n                .subscribe(\r\n                  (res: Customer) => {\r\n                    customer = res;\r\n                    customer.productData = [];\r\n                    if (quotation.productList.length > 0) {\r\n                      _.each(quotation.productList, (element) => {\r\n                        this.productService.getProductById(element)\r\n                          .subscribe(\r\n                            (res: Product) => {\r\n                              customer['productData'].push(res);\r\n                            }\r\n                          )\r\n                      });\r\n                    }\r\n\r\n                    this.areaService.getAreaById(customer.area)\r\n                      .subscribe(\r\n                        (res) => {\r\n                          customer['areaData'] = res;\r\n                        }\r\n                      )\r\n                    quotation.customerData = customer;\r\n                    this.quotationList.push(quotation);\r\n                  }\r\n                )\r\n            });\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log('ERROR in getAllQuotation');\r\n        }\r\n      )\r\n  }\r\n\r\n  toggleSearchStatus(event: any) {\r\n    console.log(event);\r\n  }\r\n\r\n  filterChange(event: any) {\r\n\r\n  }\r\n\r\n  quickSearch(event: any) {\r\n\r\n  }\r\n\r\n  /*changeStatus(status: string, quotation: Quotation) {\r\n    if (status == 'Paid') {\r\n      this.setPaidDateCounter(quotation);\r\n      quotation.status = 'Paid';\r\n      //quotation.paid_date = Date.now();\r\n      quotation.amount_due = 0;\r\n    } else if (status == 'Due') {\r\n      quotation.status = 'Due';\r\n      //quotation.amount_due = quotation.total;\r\n      //quotation.amount_partially_paid = [];\r\n    } else if (status == 'Partially Paid') {\r\n      this.partialQuotation = quotation;\r\n    }\r\n\r\n    quotation['type'] = 'all';\r\n\r\n    this.quotationService.changeQuotationStatus(quotation)\r\n      .subscribe(\r\n        (res) => {\r\n\r\n        }\r\n      )\r\n  }*/\r\n\r\n  //  for pagination\r\n  onPaginate(event: any) {\r\n    this.paginator = event;\r\n    this.getAllQuotation();\r\n  }\r\n\r\n\r\n  setPaidDateCounter(quotation: Quotation) {\r\n    this.quotationService.setPaidDateCounter(quotation)\r\n      .subscribe(\r\n        (res) => {\r\n          console.log(res);\r\n        },\r\n        (err) => {\r\n          console.log(\"Error in setpaiddatecounter\");\r\n        }\r\n      )\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-all/quotation-all.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-create/quotation-create.component.css\n// module id = ../../../../../src/app/quotation/quotation-create/quotation-create.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 3000px;\\\">\\r\\n    <section class=\\\" content-header \\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <h1>\\r\\n          Create New Quotation\\r\\n        </h1>\\r\\n        <ol class=\\\"breadcrumb \\\">\\r\\n          <li><a [routerLink]=\\\"[ '/dashboard/home' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Sofkul</a></li>\\r\\n          <li><a [routerLink]=\\\"[ '/dashboard/quotation/create' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Quotations</a></li>\\r\\n          <li class=\\\"active \\\">Create</li>\\r\\n        </ol>\\r\\n      </div>\\r\\n    </section>\\r\\n    <section class=\\\"content \\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"box box-primary\\\" style=\\\"height:2000px\\\">\\r\\n          <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"showSuccess\\\">New Quotation Created Successfully !!</div>\\r\\n          <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"showError\\\">ERROR !! Please Try Again.</div>\\r\\n          <!--  Page Content Here -->\\r\\n          <br>\\r\\n          <!--customer list-->\\r\\n          <form class=\\\"form-horizontal \\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\" form-group \\\">\\r\\n                <label class=\\\"col-sm-2 control-label \\\">Choose Customer: </label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <div>\\r\\n                    <select required *ngIf=\\\"customerList\\\" class=\\\"form-control\\\" (change)=\\\"getCustomer($event)\\\">\\r\\n                      <option *ngFor=\\\"let customer of customerList\\\" value=\\\"{{ customer._id }}\\\">\\r\\n                        <strong> {{ customer.username }} </strong> - <em> {{ customer.fullname }} </em>\\r\\n                      </option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <hr>\\r\\n            <br><br>\\r\\n          </form>\\r\\n  \\r\\n  \\r\\n          <form class=\\\"form-horizontal \\\" style=\\\"margin-top:30px\\\" [formGroup]=\\\"quotationCreateForm\\\"\\r\\n                (submit)=\\\"submitQuotationCreateForm()\\\">\\r\\n            <div class=\\\"col-md-12\\\" *ngIf=\\\"resCustomer\\\">\\r\\n              <!--username-->\\r\\n              <div class=\\\" form-group \\\">\\r\\n                <label for=\\\"username \\\" class=\\\"col-sm-2 control-label \\\">Username</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"username\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"username \\\"\\r\\n                         placeholder=\\\"Username \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!--email-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"email \\\" class=\\\"col-sm-2 control-label \\\">Email</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"email\\\" type=\\\"email \\\" class=\\\"form-control \\\" id=\\\"email \\\" placeholder=\\\"Email \\\"\\r\\n                         readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!--fullname-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"fullname \\\" class=\\\"col-sm-2 control-label \\\">Fullname</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"fullname\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"fullname \\\"\\r\\n                         placeholder=\\\"Fullname \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--mobile_primary-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"mobile_primary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Primary</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"mobile_primary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_primary \\\"\\r\\n                         placeholder=\\\"Mobile primary \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--mobile_secondary-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"mobile_secondary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Secondary</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"mobile_secondary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_secondary \\\"\\r\\n                         placeholder=\\\"Mobile secondary \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--location-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"location \\\" class=\\\"col-sm-2 control-label \\\">Location</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"text \\\" formControlName=\\\"location\\\" class=\\\"form-control \\\" id=\\\"location \\\"\\r\\n                         placeholder=\\\"location \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--area-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"area \\\" class=\\\"col-sm-2 control-label \\\">Area</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"text \\\" formControlName=\\\"area\\\" class=\\\"form-control \\\" id=\\\"area \\\" placeholder=\\\"area \\\"\\r\\n                         readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--city-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"city \\\" class=\\\"col-sm-2 control-label \\\">City</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"text \\\" formControlName=\\\"city\\\" class=\\\"form-control \\\" id=\\\"city \\\" placeholder=\\\"city \\\"\\r\\n                         readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--<div class=\\\"form-group \\\">\\r\\n                <label for=\\\"status\\\" class=\\\"col-sm-2 control-label \\\">Status</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <label class=\\\"label label-danger\\\">Due</label>\\r\\n                </div>\\r\\n              </div>-->\\r\\n              <br>\\r\\n  \\r\\n              <!--quotation_created_date-->\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"date\\\" class=\\\"col-sm-2 control-label\\\">Quotation Date</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"date\\\" formControlName=\\\"date\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--total amount-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"amount_due_minus_discount \\\" class=\\\"col-sm-2 control-label \\\">Total (INR)</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"number \\\" formControlName=\\\"total\\\" class=\\\"form-control \\\" id=\\\"amount_due_minus_discount \\\"\\r\\n                         placeholder=\\\"total \\\"\\r\\n                         readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--discount-->\\r\\n              <!--<div class=\\\"form-group \\\">\\r\\n              <label for=\\\"discount \\\" class=\\\"col-sm-2 control-label \\\">Discount</label>\\r\\n              <div class=\\\"col-sm-10\\\">\\r\\n              <input type=\\\"number \\\" (keyup)=\\\"updateDiscount($event.target.value)\\\" formControlName=\\\"discount\\\"\\r\\n              class=\\\"form-control \\\" id=\\\"discount \\\" placeholder=\\\"discount \\\" &gt;>\\r\\n              </div>\\r\\n              </div>-->\\r\\n\\r\\n              <!--description-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"rate\\\" class=\\\"col-sm-2 control-label \\\">Description</label>\\r\\n                    <div class=\\\"col-sm-10 \\\">\\r\\n                      <textarea formControlName=\\\"description\\\" class=\\\"form-control\\\"></textarea>\\r\\n                    </div>\\r\\n                  </div>\\r\\n  \\r\\n              <!--product list-->\\r\\n              <div class=\\\"form-group \\\" *ngFor=\\\"let item of createRange(allProductCounter);let i=index\\\">\\r\\n                <label class=\\\"col-sm-2 control-label \\\">Product [{{ i+1 }}]</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <div class=\\\"productSelectBox\\\">\\r\\n                    <select required *ngIf=\\\"productList\\\" class=\\\"form-control\\\" (change)=\\\"onProductChange($event,i)\\\">\\r\\n                      <option *ngFor=\\\"let product of productList\\\" value=\\\"{{ product._id }}\\\">\\r\\n                        {{ product.name }} - <em> {{ product.rate }} INR/month </em>\\r\\n                      </option>\\r\\n                    </select>\\r\\n                    <button *ngIf=\\\"i>0\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-danger btn-xs\\\" (click)=\\\"removeProduct(i)\\\">\\r\\n                      <i\\r\\n                        class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <button (click)=\\\"addProduct()\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-success\\\"><i class=\\\"fa fa-plus\\\"\\r\\n                                                                                                 aria-hidden=\\\"true\\\"></i>\\r\\n                &nbsp; Add Product\\r\\n              </button>\\r\\n  \\r\\n              <div class=\\\"form-group \\\">\\r\\n                <div class=\\\"col-md-offset-2 col-md-10\\\">\\r\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success btn-lg\\\">Save</button>\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger btn-lg\\\">Cancel</button>\\r\\n  \\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <br>\\r\\n            <hr>\\r\\n            <div class=\\\"col-md-12\\\" *ngIf=\\\"isSaved\\\">\\r\\n              <div class=\\\"alert alert-success\\\" role=\\\"alert\\\">Quotation Created Successfully !!</div>\\r\\n              <a class=\\\"btn btn-lg btn-info\\\" [routerLink]=\\\"['/dashboard/quotation/display/all/',resultQuotation._id]\\\">Generate Quotation Now</a>\\r\\n            </div>\\r\\n  \\r\\n          </form>\\r\\n        </div>\\r\\n  \\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-create/quotation-create.component.html\n// module id = ../../../../../src/app/quotation/quotation-create/quotation-create.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\r\nimport {FormGroup, FormBuilder} from \"@angular/forms\";\r\nimport {ProductService} from '../../product/product.service';\r\nimport {AreaService} from '../../area/area.service';\r\nimport {CustomerService} from '../../customer/customer.service';\r\nimport {Customer} from '../../customer/customer';\r\nimport * as _ from 'underscore';\r\nimport {Product} from '../../product/product';\r\nimport {Area} from \"../../area/area\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {Quotation} from '../quotation';\r\nimport {QuotationService} from '../quotation.service';\r\n\r\n@Component({\r\n  selector: 'app-quotation-create',\r\n  templateUrl: './quotation-create.component.html',\r\n  styleUrls: ['./quotation-create.component.css']\r\n})\r\nexport class QuotationCreateComponent implements OnInit {\r\n\r\n  public productList: any[] = [];\r\n  showSuccess: boolean = false;\r\n  showError: boolean = false;\r\n  public quotationCreateForm: FormGroup;\r\n  public customerList: Customer[] = [];\r\n  public resCustomer: Customer;\r\n  private subscription: Subscription;\r\n  public quotation: Quotation;\r\n  public allProductCounter = 1;\r\n  public allProducts: any[] = [];\r\n  public isSaved: boolean = false;\r\n  public resultQuotation;\r\n\r\n\r\n  constructor(private quotationService: QuotationService, private fb: FormBuilder, private customerService: CustomerService, private productService: ProductService, private areaService: AreaService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    this.getProductList();\r\n    this.getAllCustomers();\r\n  }\r\n\r\n  buildForm() {\r\n    let date = Date.now();\r\n    this.quotationCreateForm = this.fb.group({\r\n      customer_id: [''],\r\n      username: [''],\r\n      email: [''],\r\n      fullname: [''],\r\n      location: [''],\r\n      area: [''],\r\n      city: [''],\r\n      mobile_primary: [''],\r\n      mobile_secondary: [''],\r\n      //amount_due: [''],\r\n      total: [''],\r\n      discount: [0],\r\n      date: [date],\r\n     // status: ['Due'],\r\n      productList: []\r\n    });\r\n  }\r\n\r\n  getAllCustomers() {\r\n    this.customerService.getAllCustomers('all')\r\n      .subscribe(\r\n        (res) => {\r\n          this.customerList = res;\r\n        },\r\n        (err) => {\r\n\r\n        }\r\n      );\r\n  }\r\n\r\n  getCustomer(event: any) {\r\n    this.resCustomer = _.find(this.customerList, function (item) {\r\n      return item['_id'] == event.target.value;\r\n    });\r\n\r\n    this.quotationCreateForm.patchValue({\r\n      username: this.resCustomer.username,\r\n      email: this.resCustomer.email,\r\n      fullname: this.resCustomer.fullname,\r\n      location: this.resCustomer.location,\r\n      city: this.resCustomer.city,\r\n      mobile_primary: this.resCustomer.mobile_primary,\r\n      mobile_secondary: this.resCustomer.mobile_secondary,\r\n    });\r\n\r\n    this.resCustomer.productData = [];\r\n    if (this.resCustomer.area) {\r\n      this.areaService.getAreaById(this.resCustomer.area)\r\n        .subscribe(\r\n          (res: Area) => {\r\n            this.resCustomer.areaData = res;\r\n            this.quotationCreateForm.patchValue({\r\n              area: this.resCustomer.areaData.name\r\n            });\r\n          },\r\n          (err) => {\r\n\r\n          }\r\n        )\r\n    }\r\n  }\r\n\r\n  getProductList() {\r\n    this.productList = [];\r\n    this.productService.getAllProduct()\r\n      .subscribe(\r\n        (res) => {\r\n          _.each(res, (item) => {\r\n            if (item['status']) {\r\n              this.productList.push(item);\r\n            }\r\n          });\r\n        },\r\n        (err) => {\r\n          console.log(\"ERROR from productList\");\r\n        },\r\n        () => {\r\n          this.allProducts.push(this.productList[0]);\r\n          this.quotationCreateForm.patchValue({\r\n            total: this.productList[0].rate\r\n          })\r\n        }\r\n      )\r\n  }\r\n\r\n\r\n  removeProduct(index) {\r\n    this.allProductCounter--;\r\n    this.allProducts.splice(index, 1);\r\n  }\r\n\r\n  addProduct() {\r\n    this.allProductCounter++;\r\n    let newProduct = this.productList[0];\r\n    this.allProducts.push(newProduct);\r\n    this.updateTotal();\r\n  }\r\n\r\n  onProductChange(event: any, index) {\r\n    let result = _.find(this.productList, function (item) {\r\n      return item['_id'] == event.target.value;\r\n    })\r\n    this.allProducts[index] = result;\r\n    this.updateTotal();\r\n  }\r\n\r\n  createRange(number) {\r\n    let items: number[] = [];\r\n    for (let i = 1; i <= number; i++) {\r\n      items.push(i);\r\n    }\r\n    return items;\r\n  }\r\n\r\n  updateTotal() {\r\n    let total = 0;\r\n    _.each(this.allProducts, (product) => {\r\n      total += product['rate'];\r\n    });\r\n    this.quotationCreateForm.patchValue({\r\n      total: total\r\n    })\r\n  }\r\n\r\n  submitQuotationCreateForm() {\r\n    let product_list = _.pluck(this.allProducts, '_id');\r\n    this.quotationCreateForm.patchValue({\r\n      productList: product_list,\r\n      customer_id: this.resCustomer['_id']\r\n    });\r\n\r\n    this.quotationService.createNewQuotation(this.quotationCreateForm.value)\r\n      .subscribe(\r\n        (res) => {\r\n          this.resultQuotation = res;\r\n          this.isSaved = true;\r\n        }\r\n      )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-create/quotation-create.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".content-wrapper {\\n    min-height: 1200px;\\n    /*font-size: 20px;*/\\n}\\n\\n.box-primary {\\n    padding: 30px 30px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-edit/quotation-edit.component.css\n// module id = ../../../../../src/app/quotation/quotation-edit/quotation-edit.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"showForm\\\" class=\\\"content-wrapper\\\" style=\\\"height: 2000px;\\\">\\r\\n    <section class=\\\" content-header \\\">\\r\\n      <div class=\\\"col-xs-12\\\">\\r\\n        <h1>\\r\\n          Quotation Details of <em>{{ quotation.customerData?.username }}</em>\\r\\n          <small>for the month of {{ quotation?.created_on | date:'MMMM'}}</small>\\r\\n        </h1>\\r\\n        <ol class=\\\"breadcrumb \\\">\\r\\n          <li><a [routerLink]=\\\"[ '/dashboard/home' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Sofkul</a></li>\\r\\n          <li><a [routerLink]=\\\"[ '/dashboard/quotation/all' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Quotation</a></li>\\r\\n          <li class=\\\"active \\\">Edit</li>\\r\\n        </ol>\\r\\n      </div>\\r\\n    </section>\\r\\n    <section class=\\\"content \\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"box box-primary\\\" *ngIf=\\\"quotation\\\">\\r\\n          <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"showSuccess\\\">Quotation Data Updated Successfully !!</div>\\r\\n          <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"showError\\\">ERROR !! Please Try Again.</div>\\r\\n          <!--  Page Content Here -->\\r\\n          <form class=\\\"form-horizontal \\\" [formGroup]=\\\"quotationDetailForm\\\" *ngIf=\\\"quotation\\\"\\r\\n                (submit)=\\\"submitQuotationEditForm()\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <!--username-->\\r\\n              <div class=\\\" form-group \\\">\\r\\n                <label for=\\\"username \\\" class=\\\"col-sm-2 control-label \\\">Username</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"username\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"username \\\"\\r\\n                         placeholder=\\\"Username \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!--email-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"email \\\" class=\\\"col-sm-2 control-label \\\">Email</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"email\\\" type=\\\"email \\\" class=\\\"form-control \\\" id=\\\"email \\\" placeholder=\\\"Email \\\"\\r\\n                         readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!--fullname-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"fullname \\\" class=\\\"col-sm-2 control-label \\\">Fullname</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"fullname\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"fullname \\\"\\r\\n                         placeholder=\\\"Fullname \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--mobile_primary-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"mobile_primary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Primary</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"mobile_primary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_primary \\\"\\r\\n                         placeholder=\\\"Mobile primary \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--mobile_secondary-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"mobile_secondary \\\" class=\\\"col-sm-2 control-label \\\">Mobile Secondary</label>\\r\\n                <div class=\\\"col-sm-10 \\\">\\r\\n                  <input formControlName=\\\"mobile_secondary\\\" type=\\\"text \\\" class=\\\"form-control \\\" id=\\\"mobile_secondary \\\"\\r\\n                         placeholder=\\\"Mobile secondary \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--location-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"location \\\" class=\\\"col-sm-2 control-label \\\">Location</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"text \\\" formControlName=\\\"location\\\" class=\\\"form-control \\\" id=\\\"location \\\"\\r\\n                         placeholder=\\\"location \\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--area-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"area \\\" class=\\\"col-sm-2 control-label \\\">Area</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"text \\\" formControlName=\\\"area\\\" class=\\\"form-control \\\" id=\\\"area \\\" placeholder=\\\"area \\\"\\r\\n                         readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--city-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"city \\\" class=\\\"col-sm-2 control-label \\\">City</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"text \\\" formControlName=\\\"city\\\" class=\\\"form-control \\\" id=\\\"city \\\" placeholder=\\\"city \\\"\\r\\n                         readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n  \\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <!--choose status-->\\r\\n              <!--<div class=\\\"form-group \\\">\\r\\n                <label for=\\\"status \\\" class=\\\"col-sm-6 control-label \\\">Payment Status</label>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <label class=\\\"label label-warning\\\" *ngIf=\\\"quotation.status=='Partially Paid'\\\">{{ quotation.status }}</label>\\r\\n                  <label class=\\\"label label-danger\\\" *ngIf=\\\"quotation.status=='Due'\\\">{{ quotation.status }}</label>\\r\\n                  <label class=\\\"label label-success\\\" *ngIf=\\\"quotation.status=='Paid'\\\">{{ quotation.status }}</label>\\r\\n                </div>\\r\\n              </div>-->\\r\\n  \\r\\n              <!--invoice_created_date-->\\r\\n              <!--<div class=\\\"form-group \\\">-->\\r\\n              <!--<label for=\\\"invoice_created_date \\\" class=\\\"col-sm-2 control-label \\\">Invoice created on</label>-->\\r\\n              <!--<div class=\\\"col-sm-10\\\">-->\\r\\n              <!--<input type=\\\"date\\\" formControlName=\\\"invoice_created_date\\\">-->\\r\\n              <!--</div>-->\\r\\n              <!--</div>-->\\r\\n  \\r\\n              <!--payment_due_date-->\\r\\n              <!--<div class=\\\"form-group \\\" *ngIf=\\\"paymentStatus=='Due'\\\">\\r\\n                  <label for=\\\"payment_due_date \\\" class=\\\"col-sm-2 control-label \\\">Payment Due Date</label>\\r\\n                  <div class=\\\"col-sm-10\\\">\\r\\n                      <input type=\\\"date\\\" formControlName=\\\"payment_due_date\\\" value=\\\"currentDate.toString('Y-m-d')\\\">\\r\\n                  </div>\\r\\n              </div>-->\\r\\n  \\r\\n              <!--for partial payment only-->\\r\\n              <div class=\\\"form-group \\\" *ngIf=\\\"quotation.status=='Partially Paid' \\\">\\r\\n                <div *ngFor=\\\"let x of quotation?.amount_partially_paid;let i = index\\\">\\r\\n                  <label for=\\\"status \\\" class=\\\"col-sm-6 control-label \\\">Partial Payment : [{{ i+1 }}] </label>\\r\\n                  <div class=\\\"col-sm-6\\\">\\r\\n                    <h5 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} BDT</h5>\\r\\n                    <h5 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} BDT</h5>\\r\\n                    <br>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--payment paid / partially paid date-->\\r\\n              <div class=\\\"form-group \\\" *ngIf=\\\"quotation.status=='Paid' && paymentStatus!='Due'\\\">\\r\\n                <label for=\\\"paid \\\" class=\\\"col-sm-2 control-label \\\">Payment Paid Date</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input type=\\\"date\\\" formControlName=\\\"paid_date\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--amoount partially paid-->\\r\\n              <!--<div class=\\\"form-group \\\" *ngIf=\\\"quotation.status=='Partially Paid'\\\">-->\\r\\n              <!--<label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid (BDT) </label>-->\\r\\n              <!--<div class=\\\"col-sm-10\\\">-->\\r\\n              <!--<input type=\\\"text \\\" (keyup)=\\\"getPartiallyPaid($event)\\\" formControlName=\\\"amount_partially_paid\\\" class=\\\"form-control \\\" id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">-->\\r\\n              <!--</div>-->\\r\\n              <!--</div>-->\\r\\n  \\r\\n              <!--amount_due-->\\r\\n              <!--<div class=\\\"form-group \\\" *ngIf=\\\"quotation.status!='Paid'\\\">\\r\\n                <label for=\\\"amount_due \\\" class=\\\"col-sm-2 control-label \\\">Amount Due (BDT) </label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input *ngIf=\\\"quotation.status=='Due'\\\" type=\\\"text \\\" formControlName=\\\"amount_due\\\" class=\\\"form-control \\\"\\r\\n                         id=\\\"amount_due \\\" placeholder=\\\"amount due\\\" readonly>\\r\\n                  <input *ngIf=\\\"quotation.status=='Partially Paid'\\\" type=\\\"text \\\" formControlName=\\\"amount_due\\\"\\r\\n                         class=\\\"form-control \\\" id=\\\"amount_due \\\" placeholder=\\\"amount due\\\" readonly>\\r\\n                </div>\\r\\n              </div>-->\\r\\n  \\r\\n  \\r\\n              <!--discount-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"discount \\\" class=\\\"col-sm-2 control-label\\\">Discount (INR) </label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input (keyup)=\\\"getDiscount($event)\\\" type=\\\"text\\\" formControlName=\\\"discount\\\" class=\\\"form-control \\\"\\r\\n                         id=\\\"discount \\\" placeholder=\\\"discount\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n  \\r\\n              <!--total-->\\r\\n              <div class=\\\"form-group \\\">\\r\\n                <label for=\\\"discount \\\" class=\\\"col-sm-2 control-label \\\">Total (INR) </label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                  <input *ngIf=\\\"quotation.status!='Paid'\\\" type=\\\"text \\\" formControlName=\\\"total\\\" class=\\\"form-control \\\"\\r\\n                         id=\\\"total \\\" placeholder=\\\"total\\\">\\r\\n                  <input *ngIf=\\\"quotation.status=='Paid'\\\" type=\\\"text \\\" formControlName=\\\"total\\\" class=\\\"form-control \\\"\\r\\n                         id=\\\"total \\\" placeholder=\\\"total\\\" readonly>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div>\\r\\n                <!--for products already list-->\\r\\n                <div class=\\\"form-group \\\" *ngFor=\\\"let myProduct of quotation.customerData?.productData;let i=index\\\">\\r\\n                  <label for=\\\"\\\" class=\\\"col-sm-2 control-label \\\">Product [{{ i+1 }}]</label>\\r\\n                  <div class=\\\"col-sm-10 \\\">\\r\\n                    <div class=\\\"productSelectBox\\\">\\r\\n                      <select (change)=\\\"onProductChange($event,i,'my')\\\" required *ngIf=\\\"productList\\\" class=\\\"form-control\\\"\\r\\n                              style=\\\"margin-bottom:10px\\\">\\r\\n                        <option [selected]=\\\"product._id == myProduct._id\\\" *ngFor=\\\"let product of productList\\\"\\r\\n                                value=\\\"{{ product._id }}\\\">\\r\\n                          {{ product.name }} - <em> {{ product.rate }} INR/month </em>\\r\\n                        </option>\\r\\n                      </select>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n  \\r\\n                <!--for new additional products-->\\r\\n                <div class=\\\"form-group \\\" *ngFor=\\\"let newProduct of additionalProducts;let i=index\\\">\\r\\n                  <label for=\\\"\\\" class=\\\"col-sm-2 control-label \\\">Product [{{ i+quotation.customerData?.productData.length+1\\r\\n                    }}]</label>\\r\\n                  <div class=\\\"col-sm-10 \\\">\\r\\n                    <div class=\\\"productSelectBox\\\">\\r\\n                      <select (change)=\\\"onProductChange($event,i,'add')\\\" required *ngIf=\\\"productList\\\" class=\\\"form-control\\\"\\r\\n                              style=\\\"margin-bottom:10px\\\">\\r\\n                        <option *ngFor=\\\"let product of productList\\\" value=\\\"{{ product._id }}\\\">\\r\\n                          {{ product.name }} - <em> {{ product.rate }} INR/month </em></option>\\r\\n                      </select>\\r\\n                      <button *ngIf=\\\"quotation.status!='Paid'\\\" type=\\\"button\\\" class=\\\"pull-right btn btn-danger btn-xs\\\"\\r\\n                              (click)=\\\"removeProduct(i)\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <button *ngIf=\\\"quotation.status!='Paid'\\\" (click)=\\\"addProduct()\\\" type=\\\"button\\\"\\r\\n                        class=\\\"pull-right btn btn-success\\\"><i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i> &nbsp; Add\\r\\n                  Product\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-sm-offset-1 col-sm-10 \\\" style=\\\"margin-top:10px\\\">\\r\\n                <!--<button type=\\\"submit \\\" class=\\\"btn btn-success\\\">Save</button>-->\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-info btn-lg\\\">Generate Quotation</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </section>\\r\\n  </div>\\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-edit/quotation-edit.component.html\n// module id = ../../../../../src/app/quotation/quotation-edit/quotation-edit.component.html\n// module chunks = main","import {DatePipe} from '@angular/common';\nimport {Component, OnInit, ElementRef, ViewChild} from '@angular/core';\nimport {QuotationService} from '../quotation.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from \"rxjs\";\nimport {Quotation} from '../quotation';\nimport {Router} from \"@angular/router\";\nimport {FormGroup, FormBuilder} from \"@angular/forms\";\nimport {ProductService} from '../../product/product.service';\nimport {CustomerService} from '../../customer/customer.service';\nimport * as _ from 'underscore';\nimport {AreaService} from '../../area/area.service';\n\n@Component({\n  selector: 'app-quotation-edit',\n  templateUrl: './quotation-edit.component.html',\n  styleUrls: ['./quotation-edit.component.css']\n})\nexport class QuotationEditComponent implements OnInit {\n  @ViewChild('productSelectBox') productSelectBox: ElementRef;\n\n  public productList: any[] = [];\n  public additionalProducts: any[] = [];\n  public addProductCounter: number = 0;\n  public allProductsAdd: any[] = [];\n\n\n  public productSuggestions: any[] = [];\n\n  private subscription: Subscription;\n  public quotationDetailForm: FormGroup;\n  private id: any;\n  public quotation: Quotation;\n  public currentDate: number = Date.now();\n  public datePipe: DatePipe = new DatePipe('en-US');\n  public paymentStatus: string = 'Due';\n  public showForm: boolean = false;\n  private type: string;\n\n  constructor(private areaService: AreaService, private customerService: CustomerService, private elementRef: ElementRef, private productService: ProductService, private fb: FormBuilder, private quotationService: QuotationService, private route: ActivatedRoute, private router: Router) {\n\n  }\n\n  ngOnInit() {\n    this.getProductList();\n    this.subscription = this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.type = params['type'];\n      if (this.id) {\n        this.quotationService.getQuotationById(this.type, this.id)\n          .subscribe(\n            (res) => {\n              this.quotation = res;\n              this.allProductsAdd = this.quotation.productList;\n              this.buildForm();\n            },\n            (err) => {\n\n            }\n          )\n      }\n    });\n  }\n\n  buildForm() {\n    this.customerService.getCustomerDetails(this.quotation.customer_id)\n      .subscribe(\n        (res) => {\n          this.quotation.customerData = res;\n          this.quotation.customerData.productData = [];\n         // let total_partially_paid = 0;\n          _.each(this.quotation.productList, (item) => {\n            this.productService.getProductById(item)\n              .subscribe(\n                (res) => {\n                  this.quotation.customerData.productData.push(res);\n                }\n              )\n          //  total_partially_paid += item['amount'];\n          });\n\n          this.quotationDetailForm = this.fb.group({\n            username: [res['username']],\n            email: [res['email']],\n            fullname: [res['fullname']],\n            location: [res['location']],\n            area: [''],\n            city: [res['city']],\n            mobile_primary: [res['mobile_primary']],\n            mobile_secondary: [res['mobile_secondary']],\n            payment_due_date: [this.quotation['payment_due_date']],\n            amount_due: [this.quotation['amount_due']],\n            status: [this.quotation['status']],\n            total: [this.quotation['total']],\n            discount: [this.quotation['discount']],\n            quotation_created_date: [this.quotation['quotation_created_date']],\n            paid_date: [this.quotation['paid_date']],\n           // amount_partially_paid: total_partially_paid\n          });\n\n          this.areaService.getAreaById(res['area'])\n            .subscribe(\n              (res) => {\n                this.quotationDetailForm.patchValue({\n                  area: res['name']\n                });\n              }\n            )\n          this.showForm = true;\n        }\n      )\n\n  }\n\n  getProductSuggestions(event: any) {\n    let data = {\n      text: event.query\n    }\n\n    this.productService.searchByName(data)\n      .subscribe(\n        (res) => {\n          this.productSuggestions = res;\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  getProductList() {\n    this.productList = [];\n    this.productService.getAllProduct()\n      .subscribe(\n        (res) => {\n          _.each(res, (item) => {\n            if (item['status']) {\n              this.productList.push(item);\n            }\n          });\n        },\n        (err) => {\n          console.log(\"ERROR from productList\");\n        }\n      )\n  }\n\n  addProduct() {\n    let newProduct = this.productList[0];\n    this.additionalProducts.push(newProduct);\n    this.allProductsAdd.push(newProduct._id);\n    this.updatePayments();\n  }\n\n  removeProduct(index) {\n    let delIndex = this.allProductsAdd.indexOf(this.additionalProducts[index]);\n    this.allProductsAdd.splice(delIndex, 1);\n    this.additionalProducts.splice(index, 1);\n    this.updatePayments();\n  }\n\n  onProductChange(event: any, index, mode) {\n    if (mode != 'my') {\n      index = index + this.quotation.customerData.productData.length;\n    }\n    this.allProductsAdd[index] = event.target.value;\n    this.updatePayments();\n  }\n\n  submitQuotationEditForm() {\n    let data = {};\n    data = {\n      id: this.id,\n      amount_due: this.quotationDetailForm.value.amount_due,\n      total: this.quotationDetailForm.value.total,\n      discount: this.quotationDetailForm.value.discount,\n      productList: this.allProductsAdd,\n      //amount_partially_paid: this.quotation.amount_partially_paid,\n      type: this.type\n    }\n\n    this.quotationService.preGenerateQuotationUpdate(data)\n      .subscribe(\n        (res) => {\n          this.router.navigate(['dashboard/quotation/display', this.type, this.id]);\n        },\n        (err) => {\n          console.log('Error in Pre Generator');\n        }\n      )\n  }\n\n\n  changeStatus(event: any) {\n    this.paymentStatus = event.target.value;\n    if (this.paymentStatus == 'Paid') {\n      let currentDate = this.datePipe.transform(Date.now(), 'y-MM-dd');\n      this.quotationDetailForm.patchValue({\n        paid_date: currentDate\n      });\n    }\n  }\n\n  getPartiallyPaid(event: any) {\n    this.quotationDetailForm.patchValue({\n      amount_partially_paid: event.target.value,\n      amount_due: this.quotation.amount_due - event.target.value\n    });\n  }\n\n  getDiscount(event: any) {\n    this.quotationDetailForm.patchValue({\n      total: this.quotationDetailForm.value.amount_due - event.target.value\n    });\n  }\n\n  updatePayments() {\n    let total = 0;\n    _.each(this.allProductsAdd, (item) => {\n      let product = _.findWhere(this.productList, {_id: item});\n      total += product.rate;\n    });\n\n    this.quotationDetailForm.patchValue({\n      total: total,\n      discount: 0,\n      amount_due: total\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-edit/quotation-edit.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#quotation_box {\\n  background-color: #fff;\\n  font-size: 20px;\\n  padding-left: 20px;\\n  padding-right: 20px;\\n}\\n\\n#quotation_table {\\n  background-color: #fff;\\n  font-size:none;\\n}\\n\\n#company_logo {\\n  margin-top: 50px;\\n  margin-left: 10px;\\n  width: 210px;\\n  height: 180px;\\n}\\n\\n.row-divide {\\n  border-bottom: 4px solid #d2d6de;\\n}\\n\\n#quotation_box {\\n  font-weight: 550;\\n}\\n\\n.footer {\\n   \\n    left: 0;\\n    bottom: 0;\\n    width: 100%;\\n    background-color:none;\\n    color: rgb(245, 163, 10);\\n    text-align:center;\\n}\\n\\n.footer-header{\\n  color: black;\\n\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-html/quotation-html.component.css\n// module id = ../../../../../src/app/quotation/quotation-html/quotation-html.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 2000px;margin-left: 0vw;\\\">\\n  <section class=\\\" content-header\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        Quotation Display\\n      </h1>\\n      <ol class=\\\"breadcrumb \\\">\\n        <li><a [routerLink]=\\\"[ '/' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> InvoiceApp</a></li>\\n        <li><a [routerLink]=\\\"[ '/' ] \\\"><i class=\\\"fa fa-dashboard \\\"></i> Quotation</a></li>\\n        <li class=\\\"active \\\">Display</li>\\n      </ol>\\n    </div>\\n  </section>\\n  <section class=\\\"content \\\" *ngIf=\\\"quotation\\\">\\n    <div class=\\\"col-xs-12\\\" id=\\\"quotation_main\\\">\\n      <div id=\\\"quotation_body\\\">\\n        <!--quotation display starts here-->\\n        <div class=\\\"\\\" id=\\\"quotation_box\\\" style=\\\"margin-top:10px\\\" #quotationBox>\\n          <!--head row-->\\n          <div class=\\\"row \\\">\\n            <!--left section-->\\n            <div class=\\\"col-md-6\\\">\\n              <img src=\\\"/assets/dist/img/Aquality.jpg\\\" style=\\\"width:40%; height:50%;\\\" id=\\\"company_logo\\\">\\n            </div>\\n            <!--right section-->\\n            <div class=\\\"col-md-offset-2 col-md-4\\\" style=\\\"text-align: -webkit-left; margin-top:8px;\\\">\\n              <h3 style=\\\"font-size: 60px;\\\"></h3><br>\\n\\n            </div>\\n\\n            \\n              <div class=row style=\\\"background-color:darkslategray; margin-top:150px; width:100%; height:200px;margin-left: 0vw;\\\">\\n                <div class=\\\"col-md-4 col-xs-4\\\" >\\n                  <div class=\\\"\\\" style=\\\"color:white; margin-left:40px;margin-top:20px; padding:10px; font-size:16px; \\\">\\n                      <span> Quotation for: </span><br>\\n                      <strong> {{ quotation.customerData?.fullname }} </strong><br>\\n                      <!--<span> {{ quotation.customerData?.location }} </span><br>-->\\n                      <span> {{ quotation.customerData?.city }} </span><br>\\n                      <span> India </span>\\n                      <span> {{ quotation.customerData?.mobile_primary }} </span><br>\\n                      <span> {{ quotation.customerData?.email }} </span><br>\\n                      <!--<span> {{ quotation.customerData?.area }} </span><br>-->\\n                      </div>\\n                </div>\\n                <div class=\\\"col-md-offset-2 col-md-6 col-xs-2\\\">\\n                  <div style=\\\"padding-top:40px;\\\">\\n                    <span style=\\\"color:rgb(245, 163, 10); font-size:70px;\\\">QUOTATION</span>\\n                    </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\" style=\\\"margin-left: 0vw; background-color:black;width:100%;color:#fff; height:60px; text-align: -webkit-center; font-size:15px;\\\">\\n                <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\" >\\n                    <span> Date: {{ quotation.created_on | date }} </span>\\n                </div>\\n                <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                    <span> Valid upto: DD/MM/YYYY</span>\\n                  </div>\\n                  <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                      <span> Quotation ref: #123456</span>\\n                    </div>\\n              </div>\\n              <div class=\\\"row\\\" style=\\\"margin-left: 0vw; background-color:black;width:100%;color:#fff; height:60px; text-align: -webkit-center; font-size:15px;\\\">\\n                  <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\" >\\n                      \\n                      <span> <strong>Quotation Number: </strong> #001</span>\\n                  </div>\\n                  <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                      <span> <strong>Mobile Number: </strong> {{ quotation.customerData?.mobile_primary }}</span>\\n                    </div>\\n                    <div class=\\\"col-md-4 col-xs-4\\\" style=\\\"margin-top:17px;\\\">\\n                        <span> <strong>Prepared by: </strong> Aquality</span><br>\\n                    \\n                  \\n                      </div>\\n                </div>\\n\\n              <!--table-->\\n              <div id=\\\"quotation_table\\\">\\n              <table class=\\\"table table-hover table-responsive\\\" *ngIf=\\\"quotation.productData\\\" style=\\\"width:100%; height:200px;margin-left: 0vw;\\\" >\\n                  <thead style=\\\"background-color:rgb(245, 163, 10); color:#fff;\\\">\\n                    <tr>\\n                    \\n                      <th>ITEM DESCRIPTION</th>\\n                      <th>GST</th>\\n                      <th>UNIT PRICE</th>\\n                      <th style=\\\"padding-left:200px;\\\">QUANTITY</th>\\n                      <th style=\\\"padding-left:100px;\\\">AMOUNT</th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let product of quotation.productData;let i=index\\\"\\n                    [ngClass]=\\\"i==quotation.productData.length-1 ? 'row-divide' : '' \\\">\\n                    <td>{{ product?.name }}</td>\\n                    <td> {{ product?.vat }}%</td>\\n                    <td>INR. {{ product?.rate }}</td>\\n                      <td style=\\\"padding-left:200px; width:30%;\\\">1</td>\\n                      <td style=\\\"padding-left:100px; background-color:#ffe6e6; width:20%;\\\">INR. {{ product?.amount_with_vat * 1 }}</td>\\n                    </tr>\\n                    <tr>\\n                        \\n                        <td></td>\\n                        <td></td>\\n                        <td></td>\\n                        <td style=\\\"padding-left:200px;\\\">\\n                          <strong>SUB TOTAL: </strong>\\n                        </td>\\n                        <td style=\\\"padding-left:100px; background-color:#ffe6e6;width:20%;\\\">\\n                          INR. {{ quotation.total }}\\n                        </td>\\n                      </tr>\\n\\n                      <tr *ngFor=\\\"let x of quotation?.amount_partially_paid;let i = index\\\">\\n                          <td></td>\\n                          \\n                        \\n                          <td>\\n                            <strong>Payment On : {{ x.date | date }} </strong>\\n                          </td>\\n                          <td>\\n                            INR. {{ x.amount }}\\n                          </td>\\n                        </tr>\\n            \\n                        \\n                  \\n                          <tr>\\n                              <td></td>\\n                              <td></td>\\n                              <td></td>\\n                              <td style=\\\"padding-left:200px;\\\">\\n                                Transport\\n                              </td>\\n                              <td style=\\\"padding-left:100px; background-color:#ffe6e6;\\\">\\n                                INR. {{ quotation.discount }}\\n                              </td>\\n    \\n                            </tr>\\n\\n                            <tr>\\n                                <td></td>\\n                                <td></td>\\n                                <td></td>\\n                                <td style=\\\"background-color:darkslategray; color:#fff;padding-left:200px;\\\">\\n                                  GRAND TOTAL\\n                                </td>\\n                                <td style=\\\"background-color:rgb(245, 163, 10); color:#fff;padding-left:100px; \\\">\\n                                  INR. {{ quotation.total }}\\n                                </td>\\n      \\n                              </tr>\\n                        <!--<tr *ngIf=\\\"quotation.status == 'Paid'\\\">\\n                          <td></td>\\n                          <td></td>-->\\n                          <!--<td></td>-->\\n                          <!--<td>\\n                            <strong>Amount Paid (INR)</strong>\\n                          </td>\\n                          <td>\\n                            <strong>INR. {{ quotation.total }}</strong>\\n                          </td>-->\\n                        <!--</tr>-->\\n                        \\n                        <tr>\\n                          <td></td>\\n                          <td></td>\\n                          <td></td>\\n                          <td style=\\\"background-color:darkslategray; color:#fff; padding-left:200px;\\\">\\n                            <strong>TOTAL(in words)</strong>\\n                          </td>\\n                          <td style=\\\"background-color:rgb(245, 163, 10); color:#fff;\\\">\\n                            <strong style=\\\"text-transform: capitalize;\\\"> {{ finalTotalWords }} INR only</strong>\\n                          </td>\\n                        </tr>\\n                    \\n                  </tbody>\\n                </table>\\n                </div>\\n                \\n                        \\n                      <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6 col-xs-6\\\">\\n                      <h3 class=\\\"well\\\">Bank Details</h3>\\n                       <div class=\\\"table-responsive\\\">          \\n                    <table class=\\\"table table-hover\\\">\\n                      <thead>\\n                        <tr>\\n                          <th></th>\\n                          <th>AQUALITY Water Solutions Pvt Ltd</th>\\n                        </tr>\\n                      </thead>\\n                      <tbody>\\n                        <tr>\\n                          \\n                          <td></td>\\n                          <td>A/c No.</td>\\n                          <td><strong>111 905 000 338</strong></td>\\n                        </tr>\\n                        <tr>\\n                          \\n                          <td></td>\\n                          <td>Bank</td>\\n                          <td><strong>ICICI Bank - Filmnagar Br.</strong></td>\\n                        </tr>\\n                        <tr>\\n                          \\n                          <td></td>\\n                          <td>IFSC Code</td>\\n                          <td><strong>ICIC 000 1119</strong></td>\\n                        </tr>\\n                      </tbody>\\n                    </table>\\n                          \\n                  </div>\\n                  </div>\\n\\n                  <div class=\\\"col-md-6 col-xs-6\\\" style=\\\"margin-top:50px;\\\">\\n                    <div style=\\\"text-align: -webkit-center; margin-top:20%; \\\">\\n                       Name & Signature\\n                    </div>\\n                  </div>\\n                  </div><br> <br>\\n                  \\n\\n                 <div class=\\\"container-fluid\\\" style=\\\"background-color:none;\\\">\\n                  <div class=\\\"footer\\\">\\n                    <p><strong>THANK YOU FOR YOUR BUSINESS</strong> </p><hr>\\n                    <div class=\\\"footer-header\\\">\\n                      TERMS AND CONDITION\\n\\n                    </div>\\n                  </div>\\n\\n                 </div>\\n          \\n\\n            <!--<div class=\\\"col-md-6\\\" style=\\\"text-align: -webkit-left\\\">\\n\\n              <div>\\n                <strong>Aquality Water Solutions Pvt Ltd.</strong><br>\\n                <span># 8-1-284/OU/385/1&2, 4th Floor Bait-ul-Rida</span><br>\\n                <span>OU Colony Shaikpet, Lanco hills Lane</span><br>\\n                <span>Hyderabad, Telangana State - 500008</span><br>\\n                <span>India</span><br><br>\\n\\n                <span>Phone: +91 40 6888 8486</span><br>\\n                <span>Mobile: 709 389 8486</span><br>\\n                <span>www.aquality.in</span>\\n                <span>Email: accounts@aquality.in  | info@aquality.in</span>\\n                <span></span>\\n              </div>\\n            </div>\\n      \\n            \\n                <div class=\\\"col-md-offset-2 col-md-4\\\" style=\\\"text-align: -webkit-left;line-height: 2;\\\">\\n                    <span> <strong>Date: </strong> {{ quotation.created_on | date }} </span><br>\\n                    <span> <strong>Quotation ref: </strong> #123456</span><br><br>\\n                    \\n                  \\n                    <span> <strong>Valid upto: </strong> DD/MM/YYYY</span><br>\\n                    <span> <strong>Prepared by: </strong> Aquality</span><br>\\n                    <span> <strong>Mobile Number: </strong> {{ quotation.customerData?.mobile_primary }}</span><br>\\n                  <span> <strong>Quotation Number: </strong> #001</span><br>\\n                  <span> <strong>Quotation Date: </strong> {{ quotation.created_on | date }} </span><br>\\n                  <span> <strong>Payment Due: </strong> {{ quotation.created_on | date }}</span> <br>\\n                  <span> <strong>Amount Due (INR): </strong> INR. {{ quotation.amount_due }}</span><br>\\n                </div>-->\\n\\n                \\n              \\n          </div>\\n          <hr>\\n\\n          <!--middle row-->\\n          \\n          \\n        </div>\\n        <!--table section-->\\n        \\n      </div>\\n      <div style=\\\"margin-top:15px\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"downloadPDF()\\\"><i class=\\\"fa fa-download\\\"\\n                                                                                 aria-hidden=\\\"true\\\"></i>&nbsp;Download\\n          as PDF\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\"><i class=\\\"fa fa-file-excel-o\\\" aria-hidden=\\\"true\\\"></i>&nbsp;Export\\n          as CSV\\n        </button>\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-html/quotation-html.component.html\n// module id = ../../../../../src/app/quotation/quotation-html/quotation-html.component.html\n// module chunks = main","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  Input,\n  SimpleChanges,\n  OnChanges,\n  AfterContentInit,\n  AfterViewInit\n} from '@angular/core';\n\nimport {QuotationService} from '../quotation.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from \"rxjs\";\nimport {Quotation} from '../quotation';\nimport {CustomerService} from '../../customer/customer.service';\nimport {ProductService} from '../../product/product.service';\nimport {GeneralService} from '../../general/general.service';\nimport * as _ from 'underscore';\nimport {DatePipe} from '@angular/common';\nimport {UploadService} from '../../upload.service';\n\ndeclare let jsPDF;\ndeclare let html2canvas;\n\n@Component({\n  selector: 'app-quotation-html',\n  templateUrl: './quotation-html.component.html',\n  styleUrls: ['./quotation-html.component.css']\n})\nexport class QuotationHtmlComponent implements OnInit, AfterViewInit {\n\n  @ViewChild('quotationBox') quotationBox: ElementRef;\n  @Input() autoQuotation: any;\n  private id: any;\n  private subscription: Subscription;\n  public quotation: Quotation;\n  private subTotal;\n  private type = '';\n  private finalTotal;\n  private finalTotalWords;\n  public currentDate: number = Date.now();\n  public datePipe: DatePipe = new DatePipe('en-US');\n  public tempQuotation: Quotation;\n  public isAutoQuotation: boolean = false;\n\n  constructor(private generalService: GeneralService, private productService: ProductService, private customerService: CustomerService, private quotationService: QuotationService, private route: ActivatedRoute) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['autoQuotation']) {\n      this.isAutoQuotation = true;\n      this.tempQuotation = changes['autoQuotation'].currentValue;\n    }\n  }\n\n  ngOnInit() {\n    this.generalService.displaySidebar(false);\n    this.subscription = this.route.params.subscribe(params => {\n      this.id = params['id'];\n      this.type = params['type'];\n      if (!this.isAutoQuotation) {\n        this.getQuotationById(params['id']);\n      } else {\n        this.quotation = this.tempQuotation;\n        this.quotation['created_on'] = this.currentDate;\n        this.subTotal = this.quotation.total;\n        this.finalTotal = this.quotation.amount_due - this.quotation.discount;\n        this.finalTotalWords = this.numberToEnglish(this.quotation.total, '');\n      }\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    // if (this.isAutoQuotation) {\n    //   this.downloadPDF();\n    //\n    // }\n  }\n\n  ngAfterViewInit(){\n    if (this.isAutoQuotation) {\n      this.downloadPDF();\n    }\n  }\n\n  downloadPDF() {\n    html2canvas(document.getElementById('quotation_body'), {\n      onrendered: (canvas) => {\n        var imgData = canvas.toDataURL(\"image/jpeg\", 1.0);\n        var pdf = new jsPDF(\"p\", \"mm\", \"a4\");\n        pdf.addImage(imgData, 'JPEG', 0, 0, 210, 200);\n        if (this.isAutoQuotation) {\n          var pdf = pdf.output('datauristring');\n          let data = {\n            pdf: pdf,\n            label: this.quotation.customerData.username + \"_\" + this.datePipe.transform(Date.now(), 'MMMM')\n          }\n\n          console.log(data);\n\n          this.quotationService.saveAutoQuotation(data)\n            .subscribe(\n              (res) => {\n                console.log(res);\n              },\n              (err) => {\n                console.log(\"Error in auto pilot\");\n              }\n            )\n        } else {\n          pdf.save(this.quotation.customerData.username + \"_\" + this.datePipe.transform(Date.now(), 'MMMM') + \".pdf\");\n        }\n      }\n    });\n  }\n\n\n  getQuotationById(id: string) {\n    this.quotationService.getQuotationById(this.type, id)\n      .subscribe(\n        (res) => {\n          this.quotation = res;\n          this.quotation.total = 0;\n          \n          this.quotation.productData = [];\n          // get product data\n          _.each(this.quotation.productList, (item) => {\n            this.productService.getProductById(item)\n              .subscribe(\n                (res) => {\n                  \n                  res['amount_with_vat'] = res['rate'] + (res['rate'] * (res['vat'] / 100));\n                  //res['subtotal'] = res['rate'] ;\n                  this.quotation.productData.push(res);\n                  this.quotation.total = this.quotation.total + res['amount_with_vat'];\n                  this.quotation.amount_due = this.quotation.total;\n                  \n                  \n                }, (err) => {\n\n                }, () => {\n                 // if (this.quotation.amount_partially_paid.length > 0) {\n                  //  _.each(this.quotation.amount_partially_paid, (data) => {\n                //      this.quotation.amount_due = this.quotation.amount_due - data['amount'];\n                 //   });\n                 // }\n                  if (this.quotation.status == 'Paid') {\n                    this.quotation.amount_due = 0;\n                  }\n                  this.finalTotal = this.quotation.amount_due - this.quotation.discount;\n                  this.finalTotalWords = this.numberToEnglish(this.quotation.total, '');\n                }\n              )\n          });\n\n\n          //get customer data\n          this.customerService.getCustomerDetails(this.quotation.customer_id)\n            .subscribe(\n              (res) => {\n                this.quotation.customerData = res;\n              },\n              (err) => {\n\n              },\n              () => {\n                console.log(this.quotation);\n              }\n            )\n        },\n        (err) => {\n          console.log(err);\n        }\n      )\n  }\n\n  numberToEnglish(n, custom_join_character) {\n\n    var string = n.toString(),\n      units, tens, scales, start, end, chunks, chunksLen, chunk, ints, i, word, words;\n\n    var and = custom_join_character || 'and';\n\n    /* Is number zero? */\n    if (parseInt(string) === 0) {\n      return 'zero';\n    }\n\n    /* Array of units as words */\n    units = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\n\n    /* Array of tens as words */\n    tens = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\n\n    /* Array of scales as words */\n    scales = ['', 'thousand', 'million', 'billion', 'trillion', 'quadrillion', 'quintillion', 'sextillion', 'septillion', 'octillion', 'nonillion', 'decillion', 'undecillion', 'duodecillion', 'tredecillion', 'quatttuor-decillion', 'quindecillion', 'sexdecillion', 'septen-decillion', 'octodecillion', 'novemdecillion', 'vigintillion', 'centillion'];\n\n    /* Split user arguemnt into 3 digit chunks from right to left */\n    start = string.length;\n    chunks = [];\n    while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n    }\n\n    /* Check if function has enough scale words to be able to stringify the user argument */\n    chunksLen = chunks.length;\n    if (chunksLen > scales.length) {\n      return '';\n    }\n    /* Stringify each integer in each chunk */\n    words = [];\n    for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n      if (chunk) {\n        /* Split chunk into array of individual integers */\n        ints = chunks[i].split('').reverse().map(parseFloat);\n\n        /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n        if (ints[1] === 1) {\n          ints[0] += 10;\n        }\n\n        /* Add scale word if chunk is not zero and array item exists */\n        if ((word = scales[i])) {\n          words.push(word);\n        }\n\n        /* Add unit word if array item exists */\n        if ((word = units[ints[0]])) {\n          words.push(word);\n        }\n\n        /* Add tens word if array item exists */\n        if ((word = tens[ints[1]])) {\n          words.push(word);\n        }\n\n        /* Add 'and' string after units or tens integer if: */\n        if (ints[0] || ints[1]) {\n          /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n          if (ints[2] || !i && chunksLen) {\n            words.push(and);\n          }\n        }\n\n        /* Add hundreds word if array item exists */\n        if ((word = units[ints[2]])) {\n          words.push(word + ' hundred');\n        }\n      }\n    }\n    return words.reverse().join(' ');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-html/quotation-html.component.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-recent/quotation-recent.component.css\n// module id = ../../../../../src/app/quotation/quotation-recent/quotation-recent.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 1800px;\\\">\\n\\n  <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"isQuotationSaved\\\">Quotation Data Saved Successfully !!</div>\\n  <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"isQuotationError\\\">ERROR !! Please Try Again.</div>\\n\\n  <section class=\\\"content-header\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        Recent Quotations\\n        <small><em> Generated for the month of {{ currentDate | date: 'MMMM' }} </em></small>\\n      </h1>\\n      <ol class=\\\"breadcrumb\\\">\\n        <li><a [routerLink]=\\\"[ '/' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> InvoiceApp</a></li>\\n        <li><a [routerLink]=\\\"[ '/' ]\\\"><i class=\\\"fa fa-dashboard\\\"></i> Quotation</a></li>\\n        <li class=\\\"active\\\">Recent</li>\\n      </ol>\\n\\n      <div class=\\\"alert alert-warning\\\" *ngIf=\\\"showRemoveConfirmation && delQuotation\\\">\\n        <h4>\\n          <strong>Delete Confirmation !!</strong> <br>\\n          Delete the quotation for <em>{{ delQuotation.customerData?.username }} </em> ?\\n        </h4>\\n        <br>\\n        <button class=\\\"btn btn-success btn-sm\\\" (click)=\\\"removeConfirmation(true)\\\">YES</button>\\n        <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeConfirmation(false)\\\">NO</button>\\n      </div>\\n\\n    </div>\\n  </section>\\n\\n  <section class=\\\"content\\\">\\n\\n    <!--  Page Content Here -->\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"box box-primary\\\">\\n        <div class=\\\"box-header\\\" style=\\\"margin-top: 20px;margin-bottom: 20px;\\\">\\n          <h3 class=\\\"box-title\\\">Recent Quotation List</h3>\\n          <br>\\n          <div class=\\\"box-tools\\\">\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-offset-2 col-lg-4\\\">\\n                Filter : &nbsp;\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"All\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">All</label>\\n\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Paid\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Paid</label>\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Due\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Due</label>\\n                <label class=\\\"radio-inline\\\"><input type=\\\"radio\\\" name=\\\"optradio\\\" value=\\\"Partially Paid\\\"\\n                                                   (change)=\\\"toggleSearchStatus($event)\\\">Partially Paid</label>\\n              </div>\\n              <div class=\\\"col-lg-6\\\" style=\\\"float:right\\\">\\n                <div class=\\\"input-group\\\">\\n                  <div class=\\\"input-group-btn\\\">\\n                    <select style=\\\"font-size: 15px;height: 34px;\\\" (change)=\\\"filterChange($event.target.value)\\\">\\n                      <option value=\\\"username\\\">Username</option>\\n                      <option value=\\\"mobile_number\\\">Mobile Number</option>\\n                      <option value=\\\"area\\\">Area</option>\\n                    </select>\\n                  </div>\\n                  <!-- /btn-group -->\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"...\\\" placeholder=\\\"Search Recent Quotations\\\"\\n                         (input)=\\\"quickSearch($event.target.value)\\\">\\n                </div>\\n                <!-- /input-group -->\\n              </div>\\n            </div>\\n            <br><br>\\n            <!-- /.row -->\\n            <!-- /.row -->\\n          </div>\\n        </div>\\n        <!-- /.box-header -->\\n        <div class=\\\"box-body table-responsive no-padding\\\" *ngIf=\\\"quotationList\\\">\\n\\n          <br>\\n          <div class=\\\"col-md-offset-4\\\">\\n            <pagination-controls (pageChange)=\\\"onPaginate($event);p=$event\\\"></pagination-controls>\\n          </div>\\n          <br>\\n\\n          <table class=\\\"table table-hover\\\">\\n            <tbody>\\n            <tr>\\n              <th>Username</th>\\n              <th>Fullname</th>\\n              <th>Mobile</th>\\n              <th>Area</th>\\n              <th>Product</th>\\n              <th>Due (BDT)</th>\\n              <th>Paid (BDT)</th>\\n              <th>Total (BDT)</th>\\n              <th>Status</th>\\n              <th>Transaction Date</th>\\n              <th>Change Status</th>\\n              <th>Action</th>\\n            </tr>\\n            <tr\\n              *ngFor=\\\"let quotation of quotationList | paginate: { itemsPerPage: 30, currentPage: p, totalItems:totalCustomerCount }\\\">\\n              <td>{{ quotation.customerData?.username }}</td>\\n              <td>{{ quotation.customerData?.fullname }}</td>\\n              <td>{{ quotation.customerData?.mobile_primary }}</td>\\n              <td>{{ quotation.customerData?.areaData?.name }}</td>\\n              <!--<td><span *ngIf=\\\"quotation.customerData?.productData?.length>0\\\"> {{ quotation.customerData?.productData[0]?.name }} - <em *ngIf=\\\"quotation.customerData?.productData[0]?.rate\\\">{{ quotation.customerData?.productData[0]?.rate }} BDT/month</em> </span>\\n                  <small class=\\\"label bg-blue\\\">{{ quotation.customerData?.productData.length }}</small>\\n              </td>-->\\n              <td>\\n                <small class=\\\"label bg-blue\\\">{{ quotation.customerData?.productData?.length }}</small>\\n              </td>\\n              <td>{{ quotation?.amount_due }}</td>\\n              <td>{{ quotation?.total - quotation?.amount_due }}</td>\\n              <td>{{ quotation?.total }}</td>\\n              <td>\\n                <label class=\\\"label label-danger\\\" *ngIf=\\\"quotation.status=='Due'\\\"> {{ quotation.status }} </label>\\n                <label class=\\\"label label-success\\\" *ngIf=\\\"quotation.status=='Paid'\\\"> {{ quotation.status }} </label>\\n                <label class=\\\"label label-warning\\\" *ngIf=\\\"quotation.status=='Partially Paid'\\\"> {{ quotation.status\\n                  }} </label>\\n              </td>\\n              <td *ngIf=\\\"quotation?.status=='Due' || quotation?.status=='Partially Paid'\\\">\\n                {{ quotation?.payment_due_date | date }}\\n              </td>\\n              <td *ngIf=\\\"quotation?.status=='Paid'\\\">\\n                {{ quotation?.paid_date | date }}\\n              </td>\\n              <td>\\n                <button class=\\\"btn btn-success btn-xs\\\" (click)=\\\"changeStatus('Paid',quotation)\\\"> Paid</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"changeStatus('Partially Paid',quotation)\\\"\\n                        data-toggle=\\\"modal\\\" data-target=\\\"#partiallyPaymentModal\\\"> Partially Paid\\n                </button>\\n                <button class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"changeStatus('Due',quotation)\\\"> Due</button>\\n              </td>\\n              <td>\\n                <a type=\\\"button\\\" class=\\\"btn btn-primary btn-xs\\\"\\n                   [routerLink]=\\\"['/dashboard/quotation/view','recent',quotation?._id]\\\"> View</a>\\n                <!--<button class=\\\"btn btn-xs btn-danger\\\" (click)=\\\"remove(quotation)\\\"><i class=\\\"fa fa-times\\\"-->\\n                <!--aria-hidden=\\\"true\\\"></i></button>-->\\n              </td>\\n\\n              <!-- Modal for Partially payment -->\\n              <div class=\\\"modal fade\\\" id=\\\"partiallyPaymentModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n                   aria-labelledby=\\\"myModalLabel\\\">\\n                <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                  <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span\\n                        aria-hidden=\\\"true\\\">&times;</span></button>\\n                      <h2 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Partially Payment</h2>\\n                    </div>\\n                    <div class=\\\"modal-body\\\" *ngIf=\\\"partialQuotation\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                          <h4 style=\\\"text-align: center\\\">Total: {{ partialQuotation?.total }} BDT</h4>\\n                          <h4 style=\\\"text-align: center\\\">Due: {{ partialQuotation?.amount_due }} BDT</h4>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                          <div *ngFor=\\\"let x of partialQuotation?.amount_partially_paid\\\">\\n                            <h4 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} BDT</h4>\\n                            <h4 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} BDT</h4>\\n                            <br>\\n                          </div>\\n\\n                        </div>\\n                      </div>\\n                      <br>\\n                      <form class=\\\"form-horizontal\\\" *ngIf=\\\"partialQuotation\\\">\\n                        <!--amoount partially paid-->\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid\\n                            (BDT) </label>\\n                          <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"text\\\" name=\\\"partialPay\\\" [(ngModel)]=\\\"partialPay\\\" class=\\\"form-control \\\"\\n                                   id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">\\n                          </div>\\n                        </div>\\n                      </form>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                      <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>-->\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePartialPay()\\\"\\n                              data-dismiss=\\\"modal\\\">Save changes\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </tr>\\n            </tbody>\\n\\n          </table>\\n        </div>\\n        <!-- /.box-body -->\\n      </div>\\n      <!-- /.box -->\\n      <div class=\\\"col-md-offset-4\\\">\\n        <pagination-controls (pageChange)=\\\"onPaginate($event);p=$event\\\"></pagination-controls>\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-recent/quotation-recent.component.html\n// module id = ../../../../../src/app/quotation/quotation-recent/quotation-recent.component.html\n// module chunks = main","import {Router} from '@angular/router';\nimport {Product} from '../../product/product';\nimport {Component, OnInit} from '@angular/core';\nimport {QuotationService} from '../quotation.service';\nimport {Customer} from '../../customer/customer';\nimport * as _ from 'underscore';\nimport {Quotation} from '../quotation';\nimport {ProductService} from '../../product/product.service';\nimport {AreaService} from '../../area/area.service';\nimport {CustomerService} from '../../customer/customer.service';\n\n@Component({\n  selector: 'app-quotation-recent',\n  templateUrl: './quotation-recent.component.html',\n  styleUrls: ['./quotation-recent.component.css']\n})\nexport class QuotationRecentComponent implements OnInit {\n  public currentDate: number = Date.now();\n  public quotationList: Quotation[] = [];\n  public searchMode = 'username';\n  public partialQuotation: Quotation;\n  public paymentStatus: string;\n  public partialPay: any;\n  public isQuotationSaved: boolean = false;\n  public isQuotationError: boolean = false;\n  public showRemoveConfirmation: boolean = false;\n  public delQuotation: any;\n  public paginator = 1;\n  totalCustomerCount: number = 0;\n\n  constructor(private customerService: CustomerService, private router: Router, private quotationService: QuotationService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  ngOnInit() {\n    this.customerService.getTotalCustomerCount()\n      .subscribe(\n        (res) => {\n          this.totalCustomerCount = res.count;\n        }\n      )\n    this.getRecentQuotationDB();\n    // this.wakeUpQuotationDemon();\n  }\n\n  //useless shitty method\n  wakeUpQuotationDemon() {\n    this.quotationService.cleanQuotation()\n      .subscribe(\n        (res) => {\n          if (res.status) {\n            this.generateNewQuotation();\n          } else {\n            this.getRecentQuotationDB();\n          }\n        }\n      )\n  }\n\n  //useless shitty method\n  generateNewQuotation() {\n    this.quotationService.dropRecentQuotation()\n      .subscribe(\n        (res) => {\n          this.buildAndSaveRecentQuotation();\n        }\n      )\n  }\n\n  getRecentQuotationDB() {\n    this.quotationList = [];\n    this.quotationService.getRecentQuotationDB(this.paginator)\n      .subscribe(\n        (res: Quotation[]) => {\n          _.each(res, (quotation: Quotation) => {\n            let customer: Customer;\n            this.customerService.getCustomerDetails(quotation.customer_id)\n              .subscribe(\n                (res: Customer) => {\n                  if (res['status']) {\n                    customer = res;\n                    customer.productData = [];\n                    if (quotation.productList.length > 0) {\n                      _.each(quotation.productList, (element) => {\n                        this.productService.getProductById(element)\n                          .subscribe(\n                            (res: Product) => {\n                              customer[\"productData\"].push(res);\n                            }\n                          )\n                      });\n                    }\n                    this.areaService.getAreaById(customer.area)\n                      .subscribe(\n                        (res) => {\n                          customer[\"areaData\"] = res;\n                        },\n                      )\n                    quotation.customerData = customer;\n                    this.quotationList.push(quotation);\n                  }\n                }\n              )\n          });\n        },\n        (err) => {\n\n        },\n        () => {\n          for (let i = 0; i < this.quotationList.length; i++) {\n            console.log(\"Hello World\");\n          }\n        }\n      )\n  }\n\n  buildAndSaveRecentQuotation() {\n    this.quotationService.buildAndSaveRecentQuotation()\n      .subscribe(\n        (res) => {\n          this.getRecentQuotationDB();\n        },\n        (err) => {\n          console.log('Error in build and save');\n        }\n      )\n  }\n\n  saveRecentQuotation(quotation: Quotation) {\n    this.quotationService.saveRecentQuotation(quotation)\n      .subscribe(\n        (res) => {\n        },\n        (err) => {\n\n        }\n      )\n  }\n\n  filterChange(event: any) {\n    this.searchMode = event;\n  }\n\n  quickSearch(event: any) {\n    if (event == '') {\n      this.getRecentQuotationDB();\n      return;\n    }\n    let reg = new RegExp(event, \"i\");\n    let resArray = [];\n    if (this.searchMode == 'username') {\n      _.each(this.quotationList, (item) => {\n        if (reg.test(item['customerData']['username'])) {\n          resArray.push(item);\n        }\n      });\n      this.quotationList = resArray;\n    }\n    else if (this.searchMode == 'mobile_number') {\n      _.each(this.quotationList, (item) => {\n        if (reg.test(item['customerData']['mobile_primary'])) {\n          resArray.push(item);\n        }\n      });\n      this.quotationList = resArray;\n    }\n    else if (this.searchMode == 'area') {\n      _.each(this.quotationList, (item) => {\n        if (reg.test(item['customerData']['areaData']['name'])) {\n          resArray.push(item);\n        }\n      });\n      this.quotationList = resArray;\n    }\n  }\n\n  changeStatus(status: string, quotation: Quotation) {\n    if (status == 'Paid') {\n      this.setPaidDateCounter(quotation);\n      quotation.status = 'Paid';\n     // quotation.paid_date = Date.now();\n      quotation.amount_due = 0;\n    } else if (status == 'Due') {\n      quotation.status = 'Due';\n      quotation.amount_due = quotation.total;\n      //quotation.amount_partially_paid = [];\n    } else if (status == 'Partially Paid') {\n      this.partialQuotation = quotation;\n    }\n\n    quotation['type'] = 'recent';\n    this.quotationService.changeQuotationStatus(quotation)\n      .subscribe(\n        (res) => {\n        }\n      )\n  }\n\n  setPaidDateCounter(quotation: Quotation) {\n    this.quotationService.setPaidDateCounter(quotation)\n      .subscribe(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          console.log(\"Error in setpaiddatecounter\");\n        }\n      )\n  }\n\n  toggleSearchStatus(event: any) {\n    this.getRecentQuotationDB();\n    this.paymentStatus = event.target.value;\n    if (this.paymentStatus == 'All') {\n      return;\n    }\n    let resArray = [];\n    _.each(this.quotationList, (item) => {\n      if (_.isEqual(item.status, this.paymentStatus)) {\n        resArray.push(item);\n      }\n    });\n    this.quotationList = resArray;\n  }\n\n  /*savePartialPay() {\n    let data = {\n      id: this.partialQuotation['_id'],\n      amount_partially_paid: this.partialPay\n    }\n\n    this.quotationService.savePartialPay(data)\n      .subscribe(\n        (res) => {\n          if (res['status']) {\n            this.partialPay = 0;\n            this.getRecentQuotationDB();\n          }\n        },\n        (err) => {\n\n        }\n      )\n  }*/\n\n  remove(delQuotation) {\n    this.showRemoveConfirmation = true;\n    this.delQuotation = delQuotation;\n  }\n\n  removeConfirmation(status) {\n    if (status) {\n      this.quotationService.deleteQuotation(this.delQuotation)\n        .subscribe(\n          (res) => {\n            if (res['status']) {\n              this.quotationList = _.without(this.quotationList, _.findWhere(this.quotationList, {\n                _id: this.delQuotation['_id']\n              }));\n              this.showRemoveConfirmation = false;\n            }\n          },\n          (err) => {\n          }\n        )\n    } else {\n      this.delQuotation = undefined;\n      this.showRemoveConfirmation = false;\n    }\n  }\n\n  //  for pagination\n  onPaginate(event: any) {\n    this.paginator = event;\n    this.getRecentQuotationDB();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-recent/quotation-recent.component.ts","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nconst quotationRoutes = [\n];\n@NgModule({\n    imports: [\n        RouterModule.forChild(quotationRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class QuotationRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-search/quotation-search.component.css\n// module id = ../../../../../src/app/quotation/quotation-search/quotation-search.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height:100vh\\\">\\n\\n  <div class=\\\"alert alert-warning\\\" *ngIf=\\\"showRemoveConfirmation && delQuotation\\\">\\n    <h4>\\n      <strong>Delete Confirmation !!</strong> <br>\\n      Delete the quotation for <em>{{ delQuotation.customerData?.username }} </em>  ?\\n    </h4>\\n    <br>\\n    <button class=\\\"btn btn-success btn-sm\\\" (click)=\\\"removeConfirmation(true)\\\">YES</button>\\n    <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"removeConfirmation(false)\\\">NO</button>\\n  </div>\\n\\n  <section class=\\\"content\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <div class=\\\"box box-primary\\\">\\n        <h2 style=\\\"margin-left:10px\\\">Search Quotations of any customer</h2>\\n        <hr>\\n\\n        <!--search results for quotations show box-->\\n        <div class=\\\"box-body table-responsive no-padding\\\" style=\\\"margin-top:20px;margin-bottom: 20px\\\"\\n             *ngIf=\\\"quotationList.length>0\\\">\\n          <table class=\\\"table table-hover\\\">\\n            <tbody>\\n            <tr>\\n              <th>Username</th>\\n              <th>Fullname</th>\\n              <th>Mobile</th>\\n              <th>Area</th>\\n              <th>Product</th>\\n              <!--<th>Due (INR)</th>-->\\n              <!--<th>Paid (INR)</th>-->\\n              <th>Total (INR)</th>\\n              <!--<th>Status</th>-->\\n              <th>Quotation Generated On</th>\\n              <!--<th>Last Transaction Date</th>-->\\n              <!--<th>Change Status</th>-->\\n              <th>Action</th>\\n            </tr>\\n            <tr\\n              *ngFor=\\\"let quotation of quotationList\\\">\\n              <td>{{ quotation.customerData?.username }}</td>\\n              <td>{{ quotation.customerData?.fullname }}</td>\\n              <td>{{ quotation.customerData?.mobile_primary }}</td>\\n              <td>{{ quotation.customerData?.areaData?.name }}</td>\\n              <td><span *ngIf=\\\"quotation.customerData?.productData?.length>0\\\"> {{ quotation.customerData?.productData[0]?.name }} - <em *ngIf=\\\"quotation.customerData?.productData[0]?.rate\\\">{{ quotation.customerData?.productData[0]?.rate }} INR/month</em> </span>\\n                  <small class=\\\"label bg-blue\\\">{{ quotation.customerData?.productData.length }}</small>\\n              </td>\\n              <!--<td>\\n                <small class=\\\"label bg-blue\\\">{{ quotation.customerData?.productData?.length }}</small>\\n              </td>-->\\n              <!--<td>{{ quotation?.amount_due }}</td>-->\\n              <!--<td>{{ quotation?.total - quotation?.amount_due }}</td>-->\\n              <td>{{ quotation?.total }}</td>\\n              <!--<td>\\n                <label class=\\\"label label-danger\\\" *ngIf=\\\"quotation.status=='Due'\\\"> {{ quotation.status }} </label>\\n                <label class=\\\"label label-success\\\" *ngIf=\\\"quotation.status=='Paid'\\\"> {{ quotation.status }} </label>\\n                <label class=\\\"label label-warning\\\" *ngIf=\\\"quotation.status=='Partially Paid'\\\"> {{ quotation.status\\n                  }} </label>\\n              </td>-->\\n              <td>\\n                {{ quotation?.created_on | date: 'yMMMd' }}\\n              </td>\\n              <!--<td *ngIf=\\\"quotation?.status=='Due' || quotation?.status=='Partially Paid'\\\">\\n                {{ quotation?.payment_due_date | date }}\\n              </td>\\n              <td *ngIf=\\\"quotation?.status=='Paid'\\\">\\n                {{ quotation?.paid_date | date }}\\n              </td>\\n              <td>\\n                <button class=\\\"btn btn-success btn-xs\\\" (click)=\\\"changeStatus('Paid',quotation)\\\"> Paid</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\" (click)=\\\"changeStatus('Partially Paid',quotation)\\\"\\n                        data-toggle=\\\"modal\\\" data-target=\\\"#partiallyPaymentModal\\\"> Partially Paid\\n                </button>\\n                <button class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"changeStatus('Due',quotation)\\\"> Due</button>\\n              </td>-->\\n              <td>\\n                <a type=\\\"button\\\" *ngIf=\\\"quotation?.type=='recent'\\\" class=\\\"btn btn-primary btn-xs\\\"\\n                   [routerLink]=\\\"['/dashboard/quotation/view','recent',quotation?._id]\\\">\\n                  View</a>\\n                <a type=\\\"button\\\" *ngIf=\\\"quotation?.type!='recent'\\\" class=\\\"btn btn-primary btn-xs\\\"\\n                   [routerLink]=\\\"['/dashboard/quotation/view','all',quotation?._id]\\\">\\n                  View</a>\\n\\n                <button class=\\\"btn btn-xs btn-danger\\\" (click)=\\\"remove(quotation)\\\"><i class=\\\"fa fa-times\\\"\\n                                                                                   aria-hidden=\\\"true\\\"></i></button>\\n              </td>\\n\\n              <!-- Modal for Partially payment -->\\n              <div class=\\\"modal fade\\\" id=\\\"partiallyPaymentModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\n                   aria-labelledby=\\\"myModalLabel\\\">\\n                <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n                  <div class=\\\"modal-content\\\">\\n                    <div class=\\\"modal-header\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span\\n                        aria-hidden=\\\"true\\\">&times;</span></button>\\n                      <h2 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Partially Payment</h2>\\n                    </div>\\n                    <div class=\\\"modal-body\\\" *ngIf=\\\"partialQuotation\\\">\\n                      <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                          <h4 style=\\\"text-align: center\\\">Total: {{ partialQuotation?.total }} INR</h4>\\n                          <h4 style=\\\"text-align: center\\\">Due: {{ partialQuotation?.amount_due }} INR</h4>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                          <div *ngFor=\\\"let x of partialQuotation?.amount_partially_paid\\\">\\n                            <h4 style=\\\"text-align: center\\\">Date: {{ x?.date | date }} INR</h4>\\n                            <h4 style=\\\"text-align: center\\\">Partial Pay: {{ x?.amount }} INR</h4>\\n                            <br>\\n                          </div>\\n\\n                        </div>\\n                      </div>\\n                      <br>\\n                      <form class=\\\"form-horizontal\\\" *ngIf=\\\"partialQuotation\\\">\\n                        <!--amoount partially paid-->\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"amount_partially_paid \\\" class=\\\"col-sm-2 control-label \\\">Amount Partially Paid\\n                            (INR) </label>\\n                          <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"text\\\" name=\\\"partialPay\\\" [(ngModel)]=\\\"partialPay\\\" class=\\\"form-control \\\"\\n                                   id=\\\"amount_partially_paid \\\" placeholder=\\\"amount partially paid\\\">\\n                          </div>\\n                        </div>\\n                      </form>\\n                    </div>\\n                    <div class=\\\"modal-footer\\\">\\n                      <!--<button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>-->\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"savePartialPay(partialQuotation)\\\"\\n                              data-dismiss=\\\"modal\\\">Save changes\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </tr>\\n            </tbody>\\n\\n          </table>\\n        </div>\\n\\n        <!--search box and functionality-->\\n        <div class=\\\"container\\\">\\n          <div class=\\\"col-lg-12\\\">\\n            <form class=\\\"form-group\\\">\\n              <input style=\\\"width:100%\\\" (keyup)=\\\"getSearchText($event)\\\" id=\\\"search_form\\\" type=\\\"text\\\" class=\\\"\\\"\\n                     placeholder=\\\"Search for a customer\\\">\\n            </form>\\n\\n            <!--search resultsa-->\\n            <div *ngIf=\\\"searchResults.length>0\\\">\\n              <strong style=\\\"font-size: 20px\\\"> Search results: </strong> <span class=\\\"search_text\\\"\\n                                                                               style=\\\"color:blue;font-size: 20px\\\">{{ searchText }}</span>\\n              <br>\\n              <ul style=\\\"list-style-type:none\\\">\\n                <li *ngFor=\\\"let customer of searchResults\\\">\\n                 <span style=\\\"font-size: 20px\\\">\\n                   <a href=\\\"javascript:void(0)\\\" (click)=\\\"getSearchDetails(customer)\\\">\\n                   <em>{{ customer['username'] }}</em> - {{ customer['fullname']}}\\n                 </a>\\n                 </span>\\n                  <br>\\n                </li>\\n                <hr>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </section>\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-search/quotation-search.component.html\n// module id = ../../../../../src/app/quotation/quotation-search/quotation-search.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {Quotation} from '../quotation';\nimport {QuotationService} from '../quotation.service';\nimport {Customer} from '../../customer/customer';\nimport {Product} from '../../product/product';\nimport {AreaService} from '../../area/area.service';\nimport {CustomerService} from '../../customer/customer.service';\nimport {ProductService} from '../../product/product.service';\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-quotation-search',\n  templateUrl: './quotation-search.component.html',\n  styleUrls: ['./quotation-search.component.css']\n})\nexport class QuotationSearchComponent implements OnInit {\n  public searchText: string;\n  public searchResults: any[] = [];\n  public quotationList: Quotation[] = [];\n  public partialQuotation: Quotation;\n  public partialPay: any;\n  public delQuotation: Quotation;\n  public showRemoveConfirmation: boolean = false;\n\n  constructor(private customerService: CustomerService, private quotationService: QuotationService, private productService: ProductService, private areaService: AreaService) {\n  }\n\n  ngOnInit() {\n  }\n\n\n  getSearchText(event: any) {\n    this.quotationList = [];\n    this.searchResults = [];\n    this.searchText = event.target.value;\n    this.getGlobalQuotationSearchByCustomer();\n  }\n\n\n  getGlobalQuotationSearchByCustomer() {\n    this.quotationService.globalQuotationSearchByCustomer(this.searchText)\n      .subscribe(\n        (res) => {\n          this.searchResults = res;\n        }\n      )\n  }\n\n  getSearchDetails(data) {\n    let id = data['_id'];\n    this.quotationList = [];\n    this.quotationService.getQuotationByCustomerId(id)\n      .subscribe(\n        (res) => {\n          _.each(res, (quotation: Quotation) => {\n            let customer: Customer;\n\n            if (quotation['type']=='') {\n              quotation['type'] = 'recent';\n            }\n\n            this.customerService.getCustomerDetails(quotation.customer_id)\n              .subscribe(\n                (res: Customer) => {\n                  customer = res;\n                  if (customer['status']) {\n                    customer.productData = [];\n                    if (quotation.productList.length > 0) {\n                      _.each(quotation.productList, (element) => {\n                        this.productService.getProductById(element)\n                          .subscribe(\n                            (res: Product) => {\n                              customer['productData'].push(res);\n                            }\n                          )\n                      })\n                    }\n\n                    this.areaService.getAreaById(customer.area)\n                      .subscribe(\n                        (res) => {\n                          customer['areaData'] = res;\n                        }\n                      )\n                      quotation.customerData = customer;\n                    this.quotationList.push(quotation);\n                  }\n                }\n              )\n          })\n        },\n        (err) => {\n          console.log('Error in getSearchDetails');\n        }\n      )\n  }\n\n\n  changeStatus(status: string, quotation: Quotation) {\n    if (status == 'Paid') {\n      this.setPaidDateCounter(quotation);\n      quotation.status = 'Paid';\n      //quotation.paid_date = Date.now();\n      quotation.amount_due = 0;\n    } else if (status == 'Due') {\n      quotation.status = 'Due';\n      quotation.amount_due = quotation.total;\n     // quotation.amount_partially_paid = [];\n    } else if (status == 'Partially Paid') {\n      this.partialQuotation = quotation;\n    }\n\n    if (quotation['type'] != 'recent') {\n      quotation['type'] = 'all';\n    }\n    this.quotationService.changeQuotationStatus(quotation)\n      .subscribe(\n        (res) => {\n\n        }\n      )\n  }\n\n  setPaidDateCounter(quotation: Quotation) {\n    this.quotationService.setPaidDateCounter(quotation)\n      .subscribe(\n        (res) => {\n          // console.log(res);\n        },\n        (err) => {\n          console.log(\"Error in setpaiddatecounter\");\n        }\n      )\n  }\n\n /* savePartialPay(quotation: Quotation) {\n    let data = {\n      id: this.partialQuotation['_id'],\n      amount_partially_paid: this.partialPay\n    }\n\n    this.quotationService.savePartialPay(data)\n      .subscribe(\n        (res) => {\n          if (res['status']) {\n            this.partialPay = 0;\n            this.getSearchDetails({_id: quotation.customer_id});\n          }\n        },\n        (err) => {\n\n        }\n      )\n  }*/\n\n  remove(quotation: Quotation) {\n    this.showRemoveConfirmation = true;\n    this.delQuotation = quotation;\n  }\n\n\n  removeConfirmation(status) {\n    if (status) {\n      this.quotationService.deleteQuotation(this.delQuotation)\n        .subscribe(\n          (res) => {\n            if (res['status']) {\n              this.quotationList = _.without(this.quotationList, _.findWhere(this.quotationList, {\n                _id: this.delQuotation['_id']\n              }));\n              this.showRemoveConfirmation = false;\n            }\n          },\n          (err) => {\n\n          }\n        )\n    } else {\n      this.delQuotation = undefined;\n      this.showRemoveConfirmation = false;\n    }\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation-search/quotation-search.component.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\n\nimport {Ng2PaginationModule} from 'ng2-pagination';\nimport {DialogModule} from 'primeng/primeng';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {QuotationRoutingModule} from './quotation-routing.module';\nimport {QuotationAllComponent} from './quotation-all/quotation-all.component';\nimport {QuotationCreateComponent} from './quotation-create/quotation-create.component';\nimport {QuotationService} from './quotation.service';\nimport {QuotationRecentComponent} from './quotation-recent/quotation-recent.component';\nimport {ProductService} from '../product/product.service';\nimport {AreaService} from '../area/area.service';\nimport {QuotationEditComponent} from './quotation-edit/quotation-edit.component';\nimport {QuotationHtmlComponent} from './quotation-html/quotation-html.component';\nimport {CustomerService} from '../customer/customer.service';\nimport {GeneralService} from '../general/general.service';\nimport { QuotationSearchComponent } from './quotation-search/quotation-search.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Ng2PaginationModule,\n    DialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    QuotationRoutingModule,\n  ],\n  declarations: [\n    QuotationAllComponent,\n    QuotationCreateComponent,\n    QuotationRecentComponent,\n    QuotationEditComponent,\n    QuotationHtmlComponent,\n    QuotationSearchComponent\n  ],\n  exports: [\n    QuotationHtmlComponent\n  ],\n  providers: [\n    QuotationService,\n    ProductService,\n    AreaService,\n    CustomerService,\n    GeneralService\n  ]\n})\nexport class QuotationModule {\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation.module.ts","import {Injectable} from '@angular/core';\nimport {CustomHttpService} from \"../custom-http.service\";\nimport {environment} from \"../../environments/environment\";\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class QuotationService {\n\n  private quotationUrl = environment.api_server + 'quotation/';\n\n  constructor(private http: CustomHttpService) {\n  }\n\n  removeQuotation(quotation) {\n    let url = this.quotationUrl + 'remove-quotation';\n    return this.http.post(url, quotation).map((res) => res.json());\n  }\n\n  getQuotationByCustomerId(id) {\n    let url = this.quotationUrl + 'by-customer-id/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  globalQuotationSearchByCustomer(query) {\n    let url = this.quotationUrl + 'global-search-by-customer/' + query;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  saveAutoQuotation(data) {\n    let url = this.quotationUrl + 'save-auto-quotation';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  getAllQuotation(paginator) {\n    let url = this.quotationUrl + 'all/page=' + paginator;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  getRecentQuotation() {\n    let url = this.quotationUrl + 'recent';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  storeQuotation(data: any) {\n    let url = this.quotationUrl + 'create';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  downloadPDF(data: any) {\n    let url = this.quotationUrl + 'generate/pdf';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  getQuotationById(type: string, id: string) {\n    let url = this.quotationUrl + type + '/id/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  searchByUsername(data: any) {\n    let url = this.quotationUrl + 'search/username/';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  saveRecentQuotation(data: any) {\n    let url = this.quotationUrl + 'recent/save';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  dropRecentQuotation() {\n    let url = this.quotationUrl + 'drop/recent/all';\n    return this.http.get(url).map(res => res.json());\n  }\n\n  checkIfRecentQuotationExists() {\n    let url = this.quotationUrl + 'recent_quotation/exists';\n    return this.http.get(url).map(res => res.json());\n  }\n\n  getRecentQuotationDB(paginator: number) {\n    let url = this.quotationUrl + 'recent_quotation_db/paginator=' + paginator;\n    return this.http.get(url).map(res => res.json());\n  }\n\n  cleanQuotation() {\n    let url = this.quotationUrl + 'clean_quotation';\n    return this.http.get(url).map(res => res.json());\n  }\n\n  changeQuotationStatus(data: any) {\n    let url = this.quotationUrl + 'change_status';\n    return this.http.put(url, data).map((res) => res.json());\n  }\n\n  //get total of all products in product list\n  getTotal(data: any) {\n    let url = this.quotationUrl + 'product_list/total';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  buildAndSaveRecentQuotation() {\n    let url = this.quotationUrl + 'recent/build_and_save';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n /* savePartialPay(data: any) {\n    let url = this.quotationUrl + 'recent/partial_pay/save';\n    return this.http.post(url, data).map((res) => res.json());\n  }*/\n\n  preGenerateQuotationUpdate(data: any) {\n    let url = this.quotationUrl + 'pre_generate_update';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n\n  deleteQuotation(quotation) {\n    let url = this.quotationUrl + 'delete';\n    return this.http.post(url, quotation).map((res) => res.json());\n  }\n\n  setPaidDateCounter(quotation) {\n    let url = this.quotationUrl + 'set_paid_date_counter';\n    return this.http.post(url, quotation).map((res) => res.json());\n  }\n\n  getPaidDateCounter() {\n    let url = this.quotationUrl + 'get_paid_date_counter';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  getAllQuotationCount() {\n    let url = this.quotationUrl + 'all_quotation_count';\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  createNewQuotation(data: any) {\n    let url = this.quotationUrl + 'create/new';\n    return this.http.post(url, data).map((res) => res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/quotation/quotation.service.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/report/location-due-report/location-due-report.component.css\n// module id = ../../../../../src/app/report/location-due-report/location-due-report.component.css\n// module chunks = main","module.exports = \"<div class=\\\"content-wrapper\\\" style=\\\"height: 9000px\\\">\\n  <section class=\\\"content-header\\\">\\n    <div class=\\\"col-xs-12\\\">\\n      <h1>\\n        Report\\n        <small>Area based report</small>\\n      </h1>\\n\\n      <ol class=\\\"breadcrumb\\\">\\n        <li><a href=\\\"#\\\"><i class=\\\"fa fa-dashboard\\\"></i> Sofkul</a></li>\\n        <li><a href=\\\"#\\\"><i class=\\\"fa fa-dashboard\\\"></i> Report</a></li>\\n        <li class=\\\"active\\\">Area based report</li>\\n      </ol>\\n    </div>\\n  </section>\\n  <section class=\\\"content\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"input-group\\\">\\n        <select style=\\\"font-size: 15px;height: 34px,width: 500px;\\\" (change)=\\\"filterChange($event.target.value)\\\">\\n          <option value=\\\"default\\\">Select Area</option>\\n          <option *ngFor=\\\"let area of areaList\\\" value=\\\"{{ area._id }}\\\">{{ area.name }}</option>\\n        </select>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"box box-primary\\\">\\n        <div class=\\\"box-header\\\">\\n\\n        </div>\\n        <div class=\\\"box-body table-responsive no-padding\\\" *ngIf=\\\"reportList.length>0\\\">\\n          <table class=\\\"table table-hover\\\">\\n            <tbody>\\n            <tr>\\n              <th>Username</th>\\n              <th>Mobile No.</th>\\n              <th>Location</th>\\n              <th>Current Due (INR)</th>\\n              <th>Previous Due (INR)</th>\\n              <th>Total Due (INR)</th>\\n            </tr>\\n            <tr *ngFor=\\\"let report of reportList\\\">\\n              <td>{{ report.username }}</td>\\n              <td>{{ report.mobile_no }}</td>\\n              <td>{{ report.location }}</td>\\n              <td>{{ report.current_due }}</td>\\n              <td>{{ report.previous_due }}</td>\\n              <td>{{ report.total_due }}</td>\\n            </tr>\\n            </tbody>\\n\\n          </table>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </section>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/sofkul/sofkul-aquality/frontend/src/app/report/location-due-report/location-due-report.component.html\n// module id = ../../../../../src/app/report/location-due-report/location-due-report.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {AreaService} from '../../area/area.service';\nimport {Area} from '../../area/area';\nimport {ReportService} from '../report.service';\nimport {Report} from '../report';\nimport * as _ from 'underscore';\n@Component({\n  selector: 'app-location-due-report',\n  templateUrl: './location-due-report.component.html',\n  styleUrls: ['./location-due-report.component.css']\n})\nexport class LocationDueReportComponent implements OnInit {\n  public areaList: Area[] = [];\n  public report: Report;\n  public reportList: Report[] = [];\n\n  constructor(private areaService: AreaService, private reportService: ReportService) {\n  }\n\n  ngOnInit() {\n    this.getAllAreaList();\n  }\n\n  filterChange(id) {\n    this.reportList = [];\n    this.reportService.getCustomerByArea(id)\n      .subscribe(\n        (res) => {\n          _.each(res, (customer) => {\n            let report = new Report();\n            report.username = customer['username'];\n            report.mobile_no = customer['mobile_primary'];\n            report.location = customer['location'];\n            this.reportService.getReport(customer['_id'])\n              .subscribe(\n                (res) => {\n                  report.current_due = res['current_due'];\n                  report.previous_due = res['previous_due'];\n                  report.total_due = res['total_due'];\n                  if (res['total_due'] != 0) {\n                    this.reportList.push(report);\n                  }\n                },\n                (err) => {\n                  console.log(\"Error in getReport\");\n                }\n              )\n          })\n        },\n        (err) => {\n        },\n        () => {\n          // console.log(this.reportList);\n        }\n      )\n  }\n\n  getAllAreaList() {\n    this.areaService.getAllArea()\n      .subscribe(\n        (res) => {\n          this.areaList = res;\n        }\n      )\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/report/location-due-report/location-due-report.component.ts","import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {LocationDueReportComponent} from './location-due-report/location-due-report.component';\nimport {ReportService} from './report.service';\nimport {AreaService} from '../area/area.service';\nimport {Ng2PaginationModule} from 'ng2-pagination';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    Ng2PaginationModule\n  ],\n  declarations: [\n    LocationDueReportComponent\n  ],\n  exports: [],\n  providers: [\n    ReportService,\n    AreaService\n  ]\n})\nexport class ReportModule {\n}\n\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/report/report.module.ts","import {Injectable} from '@angular/core';\nimport {CustomHttpService} from \"../custom-http.service\";\nimport {environment} from \"../../environments/environment\";\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class ReportService {\n  private reportUrl = environment.api_server + 'report/';\n\n  constructor(private http: CustomHttpService) {\n  }\n\n  buildAndShowAreaReport(id) {\n    let url = this.reportUrl + 'build_show_area_report/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  getCustomerByArea(id) {\n    let url = this.reportUrl + 'customer_by_area/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n  getReport(id) {\n    let url = this.reportUrl + 'report_for_customers/' + id;\n    return this.http.get(url).map((res) => res.json());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/report/report.service.ts","export class Report {\n  username: string;\n  mobile_no: string;\n  current_due: number = 0;\n  previous_due: number = 0;\n  total_due: number = 0;\n  location: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/report/report.ts","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n    ],\n    exports: [\n\n    ],\n    providers: [\n\n    ]\n})\nexport class SettingsModule { }\n\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/settings/settings.module.ts","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\nimport {environment} from '../environments/environment';\n\n@Injectable()\nexport class UploadService {\n\n  private progress$: Observable<number>;\n  private progressObserver: any;\n  private progress: number = 0;\n  public uploadProgress;\n\n  constructor() {\n    this.progress$ = new Observable(observer => {\n      this.progressObserver = observer;\n    });\n  }\n\n\n  public getFile(event: any): any[] {\n    let imageList: any[] = [];\n    const FileList: FileList = event.target.files;\n    for (let i = 0; i < FileList.length; i++) {\n      imageList.push(FileList.item(i));\n    }\n    return imageList;\n  }\n\n  public async uploadFile(uploadRoute, imageList): Promise<any> {\n    let result: any;\n    if (!imageList.length) {\n      return;\n    }\n    this.getObserver()\n      .subscribe(progress => {\n        this.uploadProgress = progress;\n      });\n\n    try {\n      result = await this.upload(uploadRoute, imageList);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  public getObserver(): Observable<number> {\n    return this.progress$;\n  }\n\n  public upload(url: string, files: File[]): Promise<any> {\n    return new Promise((resolve, reject) => {\n      let formData: FormData = new FormData();\n      let xhr: XMLHttpRequest = new XMLHttpRequest();\n\n      for (let i = 0; i < files.length; i++) {\n        formData.append(\"uploads[]\", files[i], files[i].name);\n      }\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            resolve(xhr.response);\n          } else {\n            reject(xhr.response);\n          }\n        }\n      };\n\n      UploadService.setUploadUpdateInterval(500);\n\n      xhr.open('POST', url, true);\n      xhr.send(formData);\n\n      xhr.upload.onprogress = (event) => {\n        this.progress = Math.round(event.loaded / event.total * 100);\n        this.progressObserver.next(this.progress);\n      }\n    })\n  }\n\n  static setUploadUpdateInterval(interval: number): void {\n    setInterval(() => {\n    }, interval);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/app/upload.service.ts","export const environment = {\n  production: true,\n  //need to place production server api here\n  api_server: \"http://13.127.181.211:8080/api/\"\n};\n\n\n//http://sofkulaquality-1795250689.ap-south-1.elb.amazonaws.com\n\n//http://13.127.181.211:8080/api/\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/sofkul/sofkul-aquality/frontend/src/main.ts"],"sourceRoot":"webpack:///"}